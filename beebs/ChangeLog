2019-04-24  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* Makefile.in: Regenerated.
	* configure: Regenerated.
	* configure.ac: Add USER_CFLAGS and USER_LDFLAGS to CFLAGS and
	LDFLAGS respectively, AC_SUBST CFLAGS and LDFLAGS.

2019-04-24  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* src/nettle-md5/md5.c: Include string.h, define digest_ref, a copy of
	the digest array for initialization.
	(benchmark): Initialize the digest array every time we are called.
	(verify_benchmark): Correct the expected array and use memcmp for
	efficient testing.

2019-04-24  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	The initial data for FDCT was in a global block, overwritten by
	the transformation. Calling the benchmark multiple times used the
	result of the previous call as input, so the result depended on
	the number of calls, which varies between platforms.

	* src/fdct/libfdct.c: Declare block_ref as reference input and
	exp_res as expected resut.
	(int benchmark): Initialize block from block_ref each time.
	(int verify_benchmark): Single definitive test for validity.

2019-04-18  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	In two places the declaration of init_heap followed K&R, rather
	than ANSI syntax.  Now corrected.

	* src/dtoa/libdtoa.c (init_heap): Correct prototype of the function.
	* src/huffbench/libhuffbench.c (init_heap): Likewise.

2019-04-18  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	Modify one more sglib benchmarks to use its own version of malloc
	and free to reduce library and OS dependency.

	* src/sglib-listsort/listsort.c (init_heap, malloc_beebs, free_beebs):
	Created.
	(initialise_benchmark): Add call to init_heap
	(benchmark): Replace call to malloc by malloc_beebs and call to
	free by free_beebs.

2019-04-18  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	Modify both trio benchmarks to use there own version of malloc,
	free and calloc to reduce library and OS dependency.

	* src/trio/trio.c (init_heap, malloc_beebs, realloc_beebs)
	(free_beebs): Created.
	* src/trio/trio.h: Add declarations for init_heap, malloc_beebs,
	realloc_beebs, and free_beebs.
	* src/trio/trio_test.c (initialise_benchmark): add call to init_heap.
	* src/trio/triop.h: Point macros to malloc_beebs, realloc_beebs,
	and free_beebs.

2019-04-18  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	Modify all the sglib benchmarks to use there own version of malloc
	and free to reduce library and OS dependency.

	* src/sglib-dllist/dllist.c (init_heap, malloc_beebs, free_beebs):
	Created.
	(initialise_benchmark): Add call to init_heap
	(benchmark): Replace call to malloc by malloc_beebs and call to
	free by free_beebs.
	* src/sglib-hashtable/hashtable.c (init_heap, malloc_beebs)
	(free_beebs): Created.
	(initialise_benchmark): Add call to init_heap
	(benchmark): Replace call to malloc by malloc_beebs and call to
	free by free_beebs.
	* src/sglib-listinsertsort/listinsertsort.c (init_heap)
	(malloc_beebs, free_beebs): Created.
	(initialise_benchmark): Add call to init_heap
	(benchmark): Replace call to malloc by malloc_beebs and call to
	free by free_beebs.
	* src/sglib-rbtree/rbtree.c (init_heap, malloc_beebs, free_beebs):
	Created.
	(initialise_benchmark): Add call to init_heap
	(benchmark): Replace call to malloc by malloc_beebs and call to
	free by free_beebs.

2019-04-18  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	Modify the qrduino benchmark to use its own version of malloc, free
	and calloc to reduce library and OS dependency.

	* src/qrduino/qrframe.c (init_heap, malloc_beebs, calloc_beebs)
	(free_beebs): Created.
	(initframe): Replace calloc and malloc by calloc_beebs and
	malloc-beebs respectively.
	(freeframe): Replace free by free_beebs.
	(initecc): Replace malloc by malloc_beebs.
	(freeecc): Replace free by free_beebs.
	* src/qrduino/qrtest.c (initialise_benchmark): Add call to
	init_heap.

2019-04-18  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	Modify the miniz benchmark to use its own version of malloc, free
	and realloc to reduce library and OS dependency.

	* src/miniz/miniz.c: Define MINIZ_NO_MALLOC and MZ_MALLOC, MZ_FREE
	and MZ_REALLOC invoking BEEBS variants.
	(init_heap, malloc_beebs, realloc_beebs, free_beebs): Created.
	* src/miniz/miniz_b.c (initialise_benchmark): Add call to init_heap.

2019-04-18  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	Modify the huffbench benchmark to use its own version of malloc
	and free to reduce library and OS dependency.

	* src/huffbench/libhuffbench.c (init_heap, malloc_beebs)
	(free_beebs): Created.
	(generate_test_data): Replace call to malloc by call to
	malloc_beebs.
	(compdecomp): Replace call to malloc by call to malloc_beebs and
	free by call to malloc_free.
	(benchmark): Replace call to free by call to malloc_free.
	(initialise_benchmark): Add call to init_heap.

2019-04-18  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	Modify the fasta benchmark to use alloca rather than malloc to
	reduce library and OS dependency.

	* src/fasta/libfasta.c (repeat_fasta): Replace use of malloc by
	alloca, and comment out associated call to free.

2019-04-18  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	Modify the dtoa benchmark to use its own version of malloc and
	free to reduce library and OS dependency.  For this benchmark,
	hooks are provided to facilitate this.

	* src/dtoa/libdtoa.c (MALLOC, FREE): Define these to be
	malloc_beebs and free_beebs respectively.
	(init_heap, malloc_beebs, free_beebs): Created.
	(initialise_benchmark): Add call to init_heap.

2019-04-18  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	Modify the dijkstra test to use its own version of malloc and
	free to reduce library and OS dependency.

	* src/dijkstra/dijkstra_small.c (qinit_heap, qmalloc_beebs)
	(qfree_beebs): Created.
	(void enqueue): Replace malloc by qmalloc_beebs.
	(int dijkstra): Replace free by qfree_beebs.
	(initialise_benchmark): Add call to qinit_heap.

2019-04-18  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	The use of malloc/free in embedded applications is
	problematic. For a benchmark it also places heavy dependence on a
	library impementation.  This commit replaces library malloc/free by
	simple in program allocation from a block of global memory.

	* src/ctl-string/string.c (init_heap, malloc_beebs, free_beebs):
	Created.
	(ctl_StringInitSize, ctl_StringInitCopy): Replace malloc by
	malloc_beebs.
	(ctl_StringFree): Replace free by malloc_free.
	(ctl_StringSet, ctl_StringSetString, ctl_StringAppend)
	(ctl_StringInsertAt, ctl_StringSetSubStr): Replace malloc by
	malloc_beebs.
	(initialise_benchmark): Add call to init_heap.
	* src/ctl/ctl.c (init_heap, malloc_beebs, free_beebs):
	Created.
	(initialise_benchmark): Add call to init_heap.
	* src/ctl/stack.h: Replace calls to malloc by calls to
	malloc_beebs and calls to free by calls to malloc_free throughout.
	* src/ctl/vector.h: Likewise.

2019-04-18  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	The mask used in rand_beebs needs to be long unsigned, to ensure
	correct behavior where int is 16-bits long.

	* src/crc32/crc_32.c (rand_beebs): Make mask constant long unsigned.
	* src/mergesort/libmergesort.c (rand_beebs): Likewise.
	* src/rijndael/aesxam.c (rand_beebs): Likewise.
	* src/wikisort/libwikisort.c (rand_beebs): Likewise.

2019-04-18  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	BEEBS uses its own random number generator which works on all
	architectures, even where int is 16 bits long. To go with this, it
	provides its own definition of the constant RAND_MAX as 2^15-1,
	its smallest permitted value.

	* src/mergesort/libmergesort.c: Provide custom definition of RAND_MAX.
	* src/wikisort/libwikisort.c: Likewise.

2019-04-18  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	This replaces all calls to rand () by rand_beebs, a standard
	source implementation, independent of RAND_MAX and choice of
	multiplier and offset. It also eliminates an unused macro.

	* src/wikisort/libwikisort.c: Comment out Allocate macro, which is
	never used.
	(rand_beebs): Created.
	(TestingRandom, TestingMostlyDescending, TestingMostlyAscending)
	(TestingJittered, TestingMostlyEqual): Replace rand by rand_beebs.
	(benchmark): Comment out use of srand.

2019-04-18  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	This replaces all calls to rand () by rand_beebs, a standard
	source implementation, independent of RAND_MAX and choice of
	multiplier and offset.

	* src/rijndael/aesxam.c (rand_beebs): Created.
	(fillrand, encfile, decfile): Use rand_beebs () instead of rand ().

2019-04-18  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	This replaces all calls to rand () by rand_beebs, a standard
	source implementation, independent of RAND_MAX and choice of
	multiplier and offset. It also uses alloca instead of malloc/free
	to reduce library dependency.

	* src/mergesort/libmergesort.c: Comment out Var andd Allocate macros.
	(rand_beebs): Created.
	(MergeSort): Replace macros by alloca and comment out call to free.
	(TestingRandom, TestingMostlyDescending, TestingMostlyAscending)
	(TestingJittered, TestingMostlyEqual): Replace rand by rand_beebs.
	(benchmark): Comment out use of srand.

2019-04-04  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	This replaces all calls to rand () by rand_beebs, a standard
	source implementation, independent of RAND_MAX and choice of
	multiplier and offset.

	* src/crc32/crc_32.c (rand_beebs): Created.
	(crc32pseudo): Use rand_beebs () instead of rand ().
	(verify_benchmark): Set value to be consistent with use of
	rand_beebs.

2019-03-18  Graham Markall  <graham.markall@embecosm.com>

	* configure: Regenerate.
	* configure.ac: Configure nettle-aes.
	* src/Makefile.am: Add nettle-aes.
	* src/Makefile.in: Regenerate.
	* src/nettle-aes/.gitignore: New file.
	* src/nettle-aes/Makefile.am: New file.
	* src/nettle-aes/Makefile.in: New file.
	* src/nettle-aes/nettle-aes.c: New file.

2019-03-25  Graham Markall  <graham.markall@embecosm.com>

	* configure: Regenerate.
	* configure.ac: Add board flags to flags before config checks.
	* config/arm/chips/nrf51822/chip.ld: Add vector_table entry point.
	* src/aha-compress/Makefile.am: Drop libmain. Link libsupportfirst.
	* src/aha-compress/Makefile.in: Regenerate.
	* src/aha-mont64/Makefile.am: Drop libmain. Link libsupport first.
	* src/aha-mont64/Makefile.in: Regenerate.
	* src/bs/Makefile.am: Drop libmain. Link libsupport first.
	* src/bs/Makefile.in: Regenerate.
	* src/bubblesort/Makefile.am: Drop libmain. Link libsupport first.
	* src/bubblesort/Makefile.in: Regenerate.
	* src/cnt/Makefile.am: Drop libmain. Link libsupport first.
	* src/cnt/Makefile.in: Regenerate.
	* src/common.mk.am:
	* src/compress/Makefile.am: Drop libmain. Link libsupport first.
	* src/compress/Makefile.in: Regenerate.
	* src/cover/Makefile.am: Drop libmain. Link libsupport first.
	* src/cover/Makefile.in: Regenerate.
	* src/crc/Makefile.am: Drop libmain. Link libsupport first.
	* src/crc/Makefile.in: Regenerate.
	* src/crc32/Makefile.am: Drop libmain. Link libsupport first.
	* src/crc32/Makefile.in: Regenerate.
	* src/ctl-stack/Makefile.am: Drop libmain. Link libsupport first.
	* src/ctl-stack/Makefile.in: Regenerate.
	* src/ctl-string/Makefile.am: Drop libmain. Link libsupport first.
	* src/ctl-string/Makefile.in: Regenerate.
	* src/ctl-vector/Makefile.am: Drop libmain. Link libsupport first.
	* src/ctl-vector/Makefile.in: Regenerate.
	* src/cubic/Makefile.am: Drop libmain. Link libsupport first.
	* src/cubic/Makefile.in: Regenerate.
	* src/dijkstra/Makefile.am: Drop libmain. Link libsupport first.
	* src/dijkstra/Makefile.in: Regenerate.
	* src/dtoa/Makefile.am: Drop libmain. Link libsupport first.
	* src/dtoa/Makefile.in: Regenerate.
	* src/duff/Makefile.am: Drop libmain. Link libsupport first.
	* src/duff/Makefile.in: Regenerate.
	* src/edn/Makefile.am: Drop libmain. Link libsupport first.
	* src/edn/Makefile.in: Regenerate.
	* src/expint/Makefile.am: Drop libmain. Link libsupport first.
	* src/expint/Makefile.in: Regenerate.
	* src/fac/Makefile.am: Drop libmain. Link libsupport first.
	* src/fac/Makefile.in: Regenerate.
	* src/fasta/Makefile.am: Drop libmain. Link libsupport first.
	* src/fasta/Makefile.in: Regenerate.
	* src/fdct/Makefile.am: Drop libmain. Link libsupport first.
	* src/fdct/Makefile.in: Regenerate.
	* src/fibcall/Makefile.am: Drop libmain. Link libsupport first.
	* src/fibcall/Makefile.in: Regenerate.
	* src/fir/Makefile.am: Drop libmain. Link libsupport first.
	* src/fir/Makefile.in: Regenerate.
	* src/frac/Makefile.am: Drop libmain. Link libsupport first.
	* src/frac/Makefile.in: Regenerate.
	* src/huffbench/Makefile.am: Drop libmain. Link libsupport first.
	* src/huffbench/Makefile.in: Regenerate.
	* src/insertsort/Makefile.am: Drop libmain. Link libsupport first.
	* src/insertsort/Makefile.in: Regenerate.
	* src/janne_complex/Makefile.am: Drop libmain. Link libsupport first.
	* src/janne_complex/Makefile.in: Regenerate.
	* src/jfdctint/Makefile.am: Drop libmain. Link libsupport first.
	* src/jfdctint/Makefile.in: Regenerate.
	* src/lcdnum/Makefile.am: Drop libmain. Link libsupport first.
	* src/lcdnum/Makefile.in: Regenerate.
	* src/levenshtein/Makefile.am: Drop libmain. Link libsupport first.
	* src/levenshtein/Makefile.in: Regenerate.
	* src/ludcmp/Makefile.am: Drop libmain. Link libsupport first.
	* src/ludcmp/Makefile.in: Regenerate.
	* src/matmult-float/Makefile.am: Drop libmain. Link libsupport first.
	* src/matmult-float/Makefile.in: Regenerate.
	* src/matmult-int/Makefile.am: Drop libmain. Link libsupport first.
	* src/matmult-int/Makefile.in: Regenerate.
	* src/mergesort/Makefile.am: Drop libmain. Link libsupport first.
	* src/mergesort/Makefile.in: Regenerate.
	* src/miniz/Makefile.am: Drop libmain. Link libsupport first.
	* src/miniz/Makefile.in: Regenerate.
	* src/minver/Makefile.am: Drop libmain. Link libsupport first.
	* src/minver/Makefile.in: Regenerate.
	* src/nbody/Makefile.am: Drop libmain. Link libsupport first.
	* src/nbody/Makefile.in: Regenerate.
	* src/ndes/Makefile.am: Drop libmain. Link libsupport first.
	* src/ndes/Makefile.in: Regenerate.
	* src/nettle-arcfour/Makefile.am: Drop libmain. Link libsupport first.
	* src/nettle-arcfour/Makefile.in: Regenerate.
	* src/nettle-cast128/Makefile.am: Drop libmain. Link libsupport first.
	* src/nettle-cast128/Makefile.in: Regenerate.
	* src/nettle-des/Makefile.am: Drop libmain. Link libsupport first.
	* src/nettle-des/Makefile.in: Regenerate.
	* src/nettle-md5/Makefile.am: Drop libmain. Link libsupport first.
	* src/nettle-md5/Makefile.in: Regenerate.
	* src/nettle-sha256/Makefile.am: Drop libmain. Link libsupport first.
	* src/nettle-sha256/Makefile.in: Regenerate.
	* src/newlib-exp/Makefile.am: Drop libmain. Link libsupport first.
	* src/newlib-exp/Makefile.in: Regenerate.
	* src/newlib-log/Makefile.am: Drop libmain. Link libsupport first.
	* src/newlib-log/Makefile.in: Regenerate.
	* src/newlib-mod/Makefile.am: Drop libmain. Link libsupport first.
	* src/newlib-mod/Makefile.in: Regenerate.
	* src/newlib-sqrt/Makefile.am: Drop libmain. Link libsupport first.
	* src/newlib-sqrt/Makefile.in: Regenerate.
	* src/ns/Makefile.am: Drop libmain. Link libsupport first.
	* src/ns/Makefile.in: Regenerate.
	* src/nsichneu/Makefile.am: Drop libmain. Link libsupport first.
	* src/nsichneu/Makefile.in: Regenerate.
	* src/picojpeg/Makefile.am: Drop libmain. Link libsupport first.
	* src/picojpeg/Makefile.in: Regenerate.
	* src/prime/Makefile.am: Drop libmain. Link libsupport first.
	* src/prime/Makefile.in: Regenerate.
	* src/qrduino/Makefile.am: Drop libmain. Link libsupport first.
	* src/qrduino/Makefile.in: Regenerate.
	* src/qsort/Makefile.am: Drop libmain. Link libsupport first.
	* src/qsort/Makefile.in: Regenerate.
	* src/qurt/Makefile.am: Drop libmain. Link libsupport first.
	* src/qurt/Makefile.in: Regenerate.
	* src/recursion/Makefile.am: Drop libmain. Link libsupport first.
	* src/recursion/Makefile.in: Regenerate.
	* src/rijndael/Makefile.am: Drop libmain. Link libsupport first.
	* src/rijndael/Makefile.in: Regenerate.
	* src/select/Makefile.am: Drop libmain. Link libsupport first.
	* src/select/Makefile.in: Regenerate.
	* src/sglib-arraybinsearch/Makefile.am: Drop libmain. Link libsupport first.
	* src/sglib-arraybinsearch/Makefile.in: Regenerate.
	* src/sglib-arrayheapsort/Makefile.am: Drop libmain. Link libsupport first.
	* src/sglib-arrayheapsort/Makefile.in: Regenerate.
	* src/sglib-arrayquicksort/Makefile.am: Drop libmain. Link libsupport first.
	* src/sglib-arrayquicksort/Makefile.in: Regenerate.
	* src/sglib-dllist/Makefile.am: Drop libmain. Link libsupport first.
	* src/sglib-dllist/Makefile.in: Regenerate.
	* src/sglib-hashtable/Makefile.am: Drop libmain. Link libsupport first.
	* src/sglib-hashtable/Makefile.in: Regenerate.
	* src/sglib-listinsertsort/Makefile.am: Drop libmain. Link libsupport first.
	* src/sglib-listinsertsort/Makefile.in: Regenerate.
	* src/sglib-listsort/Makefile.am: Drop libmain. Link libsupport first.
	* src/sglib-listsort/Makefile.in: Regenerate.
	* src/sglib-queue/Makefile.am: Drop libmain. Link libsupport first.
	* src/sglib-queue/Makefile.in: Regenerate.
	* src/sglib-rbtree/Makefile.am: Drop libmain. Link libsupport first.
	* src/sglib-rbtree/Makefile.in: Regenerate.
	* src/slre/Makefile.am: Drop libmain. Link libsupport first.
	* src/slre/Makefile.in: Regenerate.
	* src/sqrt/Makefile.am: Drop libmain. Link libsupport first.
	* src/sqrt/Makefile.in: Regenerate.
	* src/st/Makefile.am: Drop libmain. Link libsupport first.
	* src/st/Makefile.in: Regenerate.
	* src/statemate/Makefile.am: Drop libmain. Link libsupport first.
	* src/statemate/Makefile.in: Regenerate.
	* src/stb_perlin/Makefile.am: Drop libmain. Link libsupport first.
	* src/stb_perlin/Makefile.in: Regenerate.
	* src/stringsearch1/Makefile.am: Drop libmain. Link libsupport first.
	* src/stringsearch1/Makefile.in: Regenerate.
	* src/strstr/Makefile.am: Drop libmain. Link libsupport first.
	* src/strstr/Makefile.in: Regenerate.
	* src/tarai/Makefile.am: Drop libmain. Link libsupport first.
	* src/tarai/Makefile.in: Regenerate.
	* src/template/Makefile.am: Drop libmain. Link libsupport first.
	* src/template/Makefile.in: Regenerate.
	* src/trio-snprintf/Makefile.am: Drop libmain. Link libsupport first.
	* src/trio-snprintf/Makefile.in: Regenerate.
	* src/trio-sscanf/Makefile.am: Drop libmain. Link libsupport first.
	* src/trio-sscanf/Makefile.in: Regenerate.
	* src/ud/Makefile.am: Drop libmain. Link libsupport first.
	* src/ud/Makefile.in: Regenerate.
	* src/whetstone/Makefile.am: Drop libmain. Link libsupport first.
	* src/whetstone/Makefile.in: Regenerate.
	* src/wikisort/Makefile.am: Drop libmain. Link libsupport first.
	* src/wikisort/Makefile.in: Regenerate.
	* support/Makefile.am: Drop libmain. Put main.c in libsupport.
	* support/Makefile.in: Regenerate.
	* support/chip.c: Include config.h

2019-03-22  Graham Markall  <graham.markall@embecosm.com>

	* support/dummy-libc.c: Undef ferror if it is defined.

2019-03-19  Graham Markall  <graham.markall@embecosm.com>

	* configure: Regenerate.
	* configure.ac: Add nettle-sha256.
	* src/Makefile.am: Add nettle-sha256.
	* src/Makefile.in: Regenerate.
	* src/nettle-sha256/.gitignore: New file.
	* src/nettle-sha256/Makefile.am: New file.
	* src/nettle-sha256/Makefile.in: New file.
	* src/nettle-sha256/nettle-sha256.c: New file.

2019-02-25  Andrew Burgess  <andrew.burgess@embecosm.com>

	* support/dummy-libm.c (sqrtf): New function.
	(floorf): New function.

2019-02-25  Andrew Burgess  <andrew.burgess@embecosm.com>

	* support/dummy-libm.c (sin): New function.

2019-02-24  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/aha-compress/Makefile.in: Regenerate.
	* src/aha-mont64/Makefile.in: Regenerate.
	* src/bs/Makefile.in: Regenerate.
	* src/bubblesort/Makefile.in: Regenerate.
	* src/cnt/Makefile.in: Regenerate.
	* src/common.mk.am: Create new LIBM variable.
	* src/compress/Makefile.in: Regenerate.
	* src/cover/Makefile.in: Regenerate.
	* src/crc/Makefile.in: Regenerate.
	* src/crc32/Makefile.in: Regenerate.
	* src/ctl-stack/Makefile.in: Regenerate.
	* src/ctl-string/Makefile.in: Regenerate.
	* src/ctl-vector/Makefile.in: Regenerate.
	* src/cubic/Makefile.am: Use LIBM variable.
	* src/cubic/Makefile.in: Regenerate.
	* src/dijkstra/Makefile.in: Regenerate.
	* src/dtoa/Makefile.in: Regenerate.
	* src/duff/Makefile.in: Regenerate.
	* src/edn/Makefile.in: Regenerate.
	* src/expint/Makefile.in: Regenerate.
	* src/fac/Makefile.in: Regenerate.
	* src/fasta/Makefile.in: Regenerate.
	* src/fdct/Makefile.in: Regenerate.
	* src/fibcall/Makefile.in: Regenerate.
	* src/fir/Makefile.in: Regenerate.
	* src/frac/Makefile.in: Regenerate.
	* src/huffbench/Makefile.in: Regenerate.
	* src/insertsort/Makefile.in: Regenerate.
	* src/janne_complex/Makefile.in: Regenerate.
	* src/jfdctint/Makefile.in: Regenerate.
	* src/lcdnum/Makefile.in: Regenerate.
	* src/levenshtein/Makefile.in: Regenerate.
	* src/ludcmp/Makefile.in: Regenerate.
	* src/matmult-float/Makefile.am: Remove use of DUMMY_LIBM.
	* src/matmult-float/Makefile.in: Regenerate.
	* src/matmult-int/Makefile.in: Regenerate.
	* src/mergesort/Makefile.in: Regenerate.
	* src/miniz/Makefile.in: Regenerate.
	* src/minver/Makefile.in: Regenerate.
	* src/nbody/Makefile.am: Use LIBM variable.
	* src/nbody/Makefile.in: Regenerate.
	* src/ndes/Makefile.in: Regenerate.
	* src/nettle-arcfour/Makefile.in: Regenerate.
	* src/nettle-cast128/Makefile.in: Regenerate.
	* src/nettle-des/Makefile.in: Regenerate.
	* src/nettle-md5/Makefile.in: Regenerate.
	* src/newlib-exp/Makefile.in: Regenerate.
	* src/newlib-log/Makefile.in: Regenerate.
	* src/newlib-mod/Makefile.in: Regenerate.
	* src/newlib-sqrt/Makefile.in: Regenerate.
	* src/ns/Makefile.in: Regenerate.
	* src/nsichneu/Makefile.in: Regenerate.
	* src/picojpeg/Makefile.in: Regenerate.
	* src/prime/Makefile.in: Regenerate.
	* src/qrduino/Makefile.in: Regenerate.
	* src/qsort/Makefile.in: Regenerate.
	* src/qurt/Makefile.in: Regenerate.
	* src/recursion/Makefile.in: Regenerate.
	* src/rijndael/Makefile.in: Regenerate.
	* src/select/Makefile.in: Regenerate.
	* src/sglib-arraybinsearch/Makefile.in: Regenerate.
	* src/sglib-arrayheapsort/Makefile.in: Regenerate.
	* src/sglib-arrayquicksort/Makefile.in: Regenerate.
	* src/sglib-dllist/Makefile.in: Regenerate.
	* src/sglib-hashtable/Makefile.in: Regenerate.
	* src/sglib-listinsertsort/Makefile.in: Regenerate.
	* src/sglib-listsort/Makefile.in: Regenerate.
	* src/sglib-queue/Makefile.in: Regenerate.
	* src/sglib-rbtree/Makefile.in: Regenerate.
	* src/slre/Makefile.in: Regenerate.
	* src/sqrt/Makefile.in: Regenerate.
	* src/st/Makefile.am: Use LIBM variable.
	* src/st/Makefile.in: Regenerate.
	* src/statemate/Makefile.in: Regenerate.
	* src/stb_perlin/Makefile.am: Use LIBM variable.
	* src/stb_perlin/Makefile.in: Regenerate.
	* src/stringsearch1/Makefile.in: Regenerate.
	* src/strstr/Makefile.in: Regenerate.
	* src/tarai/Makefile.in: Regenerate.
	* src/template/Makefile.in: Regenerate.
	* src/trio-snprintf/Makefile.in: Regenerate.
	* src/trio-sscanf/Makefile.in: Regenerate.
	* src/ud/Makefile.in: Regenerate.
	* src/whetstone/Makefile.am: Use LIBM variable.
	* src/whetstone/Makefile.in: Regenerate.
	* src/wikisort/Makefile.am: Use LIBM variable.
	* src/wikisort/Makefile.in: Regenerate.

2019-02-24  Andrew Burgess  <andrew.burgess@embecosm.com>

	* support/dummy-libm.c (floor): New function.
	(exp): New function.
	(log): New function.

2019-02-24  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/aha-compress/Makefile.am: Change variable syntax.
	* src/aha-compress/Makefile.in: Regenerate.
	* src/aha-mont64/Makefile.am: Change variable syntax.
	* src/aha-mont64/Makefile.in: Regenerate.
	* src/bs/Makefile.am: Change variable syntax.
	* src/bs/Makefile.in: Regenerate.
	* src/bubblesort/Makefile.am: Change variable syntax.
	* src/bubblesort/Makefile.in: Regenerate.
	* src/cnt/Makefile.am: Change variable syntax.
	* src/cnt/Makefile.in: Regenerate.
	* src/compress/Makefile.am: Change variable syntax.
	* src/compress/Makefile.in: Regenerate.
	* src/cover/Makefile.am: Change variable syntax.
	* src/cover/Makefile.in: Regenerate.
	* src/crc/Makefile.am: Change variable syntax.
	* src/crc/Makefile.in: Regenerate.
	* src/crc32/Makefile.am: Change variable syntax.
	* src/crc32/Makefile.in: Regenerate.
	* src/ctl-stack/Makefile.am: Change variable syntax.
	* src/ctl-stack/Makefile.in: Regenerate.
	* src/ctl-string/Makefile.am: Change variable syntax.
	* src/ctl-string/Makefile.in: Regenerate.
	* src/ctl-vector/Makefile.am: Change variable syntax.
	* src/ctl-vector/Makefile.in: Regenerate.
	* src/cubic/Makefile.am: Change variable syntax.
	* src/cubic/Makefile.in: Regenerate.
	* src/dijkstra/Makefile.am: Change variable syntax.
	* src/dijkstra/Makefile.in: Regenerate.
	* src/dtoa/Makefile.am: Change variable syntax.
	* src/dtoa/Makefile.in: Regenerate.
	* src/duff/Makefile.am: Change variable syntax.
	* src/duff/Makefile.in: Regenerate.
	* src/edn/Makefile.am: Change variable syntax.
	* src/edn/Makefile.in: Regenerate.
	* src/expint/Makefile.am: Change variable syntax.
	* src/expint/Makefile.in: Regenerate.
	* src/fac/Makefile.am: Change variable syntax.
	* src/fac/Makefile.in: Regenerate.
	* src/fasta/Makefile.am: Change variable syntax.
	* src/fasta/Makefile.in: Regenerate.
	* src/fdct/Makefile.am: Change variable syntax.
	* src/fdct/Makefile.in: Regenerate.
	* src/fibcall/Makefile.am: Change variable syntax.
	* src/fibcall/Makefile.in: Regenerate.
	* src/fir/Makefile.am: Change variable syntax.
	* src/fir/Makefile.in: Regenerate.
	* src/frac/Makefile.am: Change variable syntax.
	* src/frac/Makefile.in: Regenerate.
	* src/huffbench/Makefile.am: Change variable syntax.
	* src/huffbench/Makefile.in: Regenerate.
	* src/insertsort/Makefile.am: Change variable syntax.
	* src/insertsort/Makefile.in: Regenerate.
	* src/janne_complex/Makefile.am: Change variable syntax.
	* src/janne_complex/Makefile.in: Regenerate.
	* src/jfdctint/Makefile.am: Change variable syntax.
	* src/jfdctint/Makefile.in: Regenerate.
	* src/lcdnum/Makefile.am: Change variable syntax.
	* src/lcdnum/Makefile.in: Regenerate.
	* src/levenshtein/Makefile.am: Change variable syntax.
	* src/levenshtein/Makefile.in: Regenerate.
	* src/ludcmp/Makefile.am: Change variable syntax.
	* src/ludcmp/Makefile.in: Regenerate.
	* src/matmult-float/Makefile.am: Change variable syntax.
	* src/matmult-float/Makefile.in: Regenerate.
	* src/matmult-int/Makefile.am: Change variable syntax.
	* src/matmult-int/Makefile.in: Regenerate.
	* src/mergesort/Makefile.am: Change variable syntax.
	* src/mergesort/Makefile.in: Regenerate.
	* src/miniz/Makefile.am: Change variable syntax.
	* src/miniz/Makefile.in: Regenerate.
	* src/minver/Makefile.am: Change variable syntax.
	* src/minver/Makefile.in: Regenerate.
	* src/nbody/Makefile.am: Change variable syntax.
	* src/nbody/Makefile.in: Regenerate.
	* src/ndes/Makefile.am: Change variable syntax.
	* src/ndes/Makefile.in: Regenerate.
	* src/nettle-arcfour/Makefile.am: Change variable syntax.
	* src/nettle-arcfour/Makefile.in: Regenerate.
	* src/nettle-cast128/Makefile.am: Change variable syntax.
	* src/nettle-cast128/Makefile.in: Regenerate.
	* src/nettle-des/Makefile.am: Change variable syntax.
	* src/nettle-des/Makefile.in: Regenerate.
	* src/nettle-md5/Makefile.am: Change variable syntax.
	* src/nettle-md5/Makefile.in: Regenerate.
	* src/newlib-exp/Makefile.am: Change variable syntax.
	* src/newlib-exp/Makefile.in: Regenerate.
	* src/newlib-log/Makefile.am: Change variable syntax.
	* src/newlib-log/Makefile.in: Regenerate.
	* src/newlib-mod/Makefile.am: Change variable syntax.
	* src/newlib-mod/Makefile.in: Regenerate.
	* src/newlib-sqrt/Makefile.am: Change variable syntax.
	* src/newlib-sqrt/Makefile.in: Regenerate.
	* src/ns/Makefile.am: Change variable syntax.
	* src/ns/Makefile.in: Regenerate.
	* src/nsichneu/Makefile.am: Change variable syntax.
	* src/nsichneu/Makefile.in: Regenerate.
	* src/picojpeg/Makefile.am: Change variable syntax.
	* src/picojpeg/Makefile.in: Regenerate.
	* src/prime/Makefile.am: Change variable syntax.
	* src/prime/Makefile.in: Regenerate.
	* src/qrduino/Makefile.am: Change variable syntax.
	* src/qrduino/Makefile.in: Regenerate.
	* src/qsort/Makefile.am: Change variable syntax.
	* src/qsort/Makefile.in: Regenerate.
	* src/qurt/Makefile.am: Change variable syntax.
	* src/qurt/Makefile.in: Regenerate.
	* src/recursion/Makefile.am: Change variable syntax.
	* src/recursion/Makefile.in: Regenerate.
	* src/rijndael/Makefile.am: Change variable syntax.
	* src/rijndael/Makefile.in: Regenerate.
	* src/select/Makefile.am: Change variable syntax.
	* src/select/Makefile.in: Regenerate.
	* src/sglib-arraybinsearch/Makefile.am: Change variable syntax.
	* src/sglib-arraybinsearch/Makefile.in: Regenerate.
	* src/sglib-arrayheapsort/Makefile.am: Change variable syntax.
	* src/sglib-arrayheapsort/Makefile.in: Regenerate.
	* src/sglib-arrayquicksort/Makefile.am: Change variable syntax.
	* src/sglib-arrayquicksort/Makefile.in: Regenerate.
	* src/sglib-dllist/Makefile.am: Change variable syntax.
	* src/sglib-dllist/Makefile.in: Regenerate.
	* src/sglib-hashtable/Makefile.am: Change variable syntax.
	* src/sglib-hashtable/Makefile.in: Regenerate.
	* src/sglib-listinsertsort/Makefile.am: Change variable syntax.
	* src/sglib-listinsertsort/Makefile.in: Regenerate.
	* src/sglib-listsort/Makefile.am: Change variable syntax.
	* src/sglib-listsort/Makefile.in: Regenerate.
	* src/sglib-queue/Makefile.am: Change variable syntax.
	* src/sglib-queue/Makefile.in: Regenerate.
	* src/sglib-rbtree/Makefile.am: Change variable syntax.
	* src/sglib-rbtree/Makefile.in: Regenerate.
	* src/slre/Makefile.am: Change variable syntax.
	* src/slre/Makefile.in: Regenerate.
	* src/sqrt/Makefile.am: Change variable syntax.
	* src/sqrt/Makefile.in: Regenerate.
	* src/st/Makefile.am: Change variable syntax.
	* src/st/Makefile.in: Regenerate.
	* src/statemate/Makefile.am: Change variable syntax.
	* src/statemate/Makefile.in: Regenerate.
	* src/stb_perlin/Makefile.am: Change variable syntax.
	* src/stb_perlin/Makefile.in: Regenerate.
	* src/stringsearch1/Makefile.am: Change variable syntax.
	* src/stringsearch1/Makefile.in: Regenerate.
	* src/strstr/Makefile.am: Change variable syntax.
	* src/strstr/Makefile.in: Regenerate.
	* src/tarai/Makefile.am: Change variable syntax.
	* src/tarai/Makefile.in: Regenerate.
	* src/template/Makefile.am: Change variable syntax.
	* src/template/Makefile.in: Regenerate.
	* src/trio-snprintf/Makefile.am: Change variable syntax.
	* src/trio-snprintf/Makefile.in: Regenerate.
	* src/trio-sscanf/Makefile.am: Change variable syntax.
	* src/trio-sscanf/Makefile.in: Regenerate.
	* src/ud/Makefile.am: Change variable syntax.
	* src/ud/Makefile.in: Regenerate.
	* src/whetstone/Makefile.am: Change variable syntax.
	* src/whetstone/Makefile.in: Regenerate.
	* src/wikisort/Makefile.am: Change variable syntax.
	* src/wikisort/Makefile.in: Regenerate.

2019-02-11  Andrew Burgess  <andrew.burgess@embecosm.com>

	* configure: Regenerate.
	* configure.ac: Remove unneeded control flags.
	* genmacros.sh: Only generate flags for directories that contain
	benchmark programs.

2019-02-11  Andrew Burgess  <andrew.burgess@embecosm.com>

	* testsuite/lib/beebs.exp (beebs_size_all_benchmarks): Use 'size
	--format=GNU' where possible.

2019-02-11  Andrew Burgess  <andrew.burgess@embecosm.com>

	* support/dummy-libc.c: Add 'time.h' and 'stdio.h' includes.
	(_impure_ptr): Define.
	(memmove): Fix whitespace.
	(memset): Fix whitespace.
	(memcmp): Fix whitespace.
	(strlen): Fix whitespace.
	(strchr): Fix whitespace.
	(strcmp): Fix whitespace.
	(strncmp): New function.
	(strcat): New function.
	(printf): New function.
	(fprintf): New function.
	(sprintf): New function.
	(putchar): New function.
	(puts): New function.
	(clock):New function.
	(atoi):New function.
	(atof):New function.
	(fopen):New function.
	(fflush): New function.
	(ferror): New function.
	(fileno): New function.
	(fscanf):New function.
	(qsort):New function.
	(fgetc):New function.
	(getc): New function.
	(ungetc): New function.
	(fputc): New function.
	(putc): New function.
	(fgets):New function.
	(fclose):New function.
	(fwrite):New function.
	(fputs):New function.
	(fread):New function.
	(exit):New function.
	(getenv): New function.
	(memchr): New function.

2019-02-11  Andrew Burgess  <andrew.burgess@embecosm.com>

	* support/dummy-libgcc.c (__aeabi_ui2f): New function.
	(__floatunsisf): New function.
	(__unordsf2): New function.
	(__aeabi_f2uiz): New function.
	(__fixunssfsi): New function.

2019-02-11  Andrew Burgess  <andrew.burgess@embecosm.com>

	* support/dummy-libm.c (atan): New function.

2019-02-11  Andrew Burgess  <andrew.burgess@embecosm.com>

	* support/dummy-crt0.c (main): Update argument type in
	declaration.

2019-01-16  Graham Markall  <graham.markall@embecosm.com>

	* configure: Regenerate.
	* configure.ac: Disable maintainer mode by default. Replace
	--enable-dummy arguments with USE_DUMMY_ variables.
	* config/arc/chips/compare-nocrt/chip.cfg: Add USE_DUMMY settings.
	* config/arc/chips/compare-nolibc-nolibgcc-nolibm/chip.cfg: New file.
	* config/arc/chips/compare-nolibc-nolibgcc/chip.cfg: Add USE_DUMMY settings.
	* config/arc/chips/compare-nolibc/chip.cfg: Add USE_DUMMY settings.
	* config/arm/chips/compare-nocrt/chip.cfg: Add USE_DUMMY settings.
	* config/arm/chips/compare-nolibc-nolibgcc-nolibm/chip.cfg: New file.
	* config/arm/chips/compare-nolibc-nolibgcc/chip.cfg: Add USE_DUMMY settings.
	* config/arm/chips/compare-nolibc/chip.cfg: Add USE_DUMMY settings.
	* config/riscv32/chips/compare-nocrt/chip.cfg: Add USE_DUMMY settings.
	* config/riscv32/chips/compare-nolibc-nolibgcc-nolibm/chip.cfg: New file.
	* config/riscv32/chips/compare-nolibc-nolibgcc-nolibm/chipsupport.c: New file.
	* config/riscv32/chips/compare-nolibc-nolibgcc-nolibm/chipsupport.h: New file.
	* config/riscv32/chips/compare-nolibc-nolibgcc/chip.cfg: Add USE_DUMMY settings.
	* config/riscv32/chips/compare-nolibc/chip.cfg: Add USE_DUMMY settings.

2019-01-15  Graham Markall  <graham.markall@embecosm.com>

	* Makefile.in: Regenerate.
	* configure: Regenerate.
	* configure.ac: Set ARC conditional. Add -Wl,--start-group to dummy
	libc.
	* ltmain.sh: Regenerate.
	* config/arc/boards/generic/boardsupport.c: New file.
	* config/arc/chips/compare-baseline/chip.cfg: New file.
	* config/arc/chips/compare-nocrt/chip.cfg: New file.
	* config/arc/chips/compare-nolibc-nolibgcc/chip.cfg: New file.
	* config/arc/chips/compare-nolibc/chip.cfg: New file.
	* m4/libtool.m4: Regenerate.
	* support/Makefile.am: Build arc-millicode on ARC.
	* support/Makefile.in: Regenerate.
	* support/arc-millicode.S: New file.
	* support/dummy-crt0.c (__start): New function.
	* support/dummy-libgcc.c (__divsi3): New function.
	(__mulsi3): New function.

2019-01-14  Graham Markall  <graham.markall@embecosm.com>

	* config/arm/chips/compare-nolibc-nolibgcc/chip.cfg: New file.

2019-01-14  Graham Markall  <graham.markall@embecosm.com>

	* config/arm/chips/compare-nolibc/chip.cfg: New file.

2019-01-14  Graham Markall  <graham.markall@embecosm.com>

	* config/arm/chips/compare-nocrt/chip.cfg: New file.

2019-01-14  Graham Markall  <graham.markall@embecosm.com>

	* config/arm/boards/generic/boardsupport.c: New file.
	* config/arm/chips/compare-baseline/chip.cfg: New file.

2019-01-14  Graham Markall  <graham.markall@embecosm.com>

	* config/riscv32/chips/compare-nolibc-nolibgcc/chip.cfg: New file.
	* config/riscv32/chips/compare-nolibc-nolibgcc/chipsupport.c: New file.
	* config/riscv32/chips/compare-nolibc-nolibgcc/chipsupport.h: New file.


2019-01-14  Graham Markall  <graham.markall@embecosm.com>

	* config/riscv32/chips/compare-nolibc/chip.cfg: New file.
	* config/riscv32/chips/compare-nolibc/chipsupport.c: New file.
	* config/riscv32/chips/compare-nolibc/chipsupport.h: New file.
	* support/dummy-libc.c: Add _ctype_.

2019-01-14  Graham Markall  <graham.markall@embecosm.com>

	* config/riscv32/chips/compare-baseline/chip.cfg: Add -Os.
	* config/riscv32/chips/compare-nocrt/chip.cfg: New file.
	* config/riscv32/chips/compare-nocrt/chipsupport.c: New file.
	* config/riscv32/chips/compare-nocrt/chipsupport.h: New file.

2019-01-14  Graham Markall  <graham.markall@embecosm.com>

	* .gitignore: Add generated files.
	* doc/.gitignore: Add beebs.info.
	* doc/beebs.info: Deleted.
	* libtool: Deleted.
	* report-rv32imc/.gitignore: New file.
	* src/aha-compress/.gitignore: New file.
	* src/aha-mont64/.gitignore: New file.
	* src/bs/.gitignore: New file.
	* src/bubblesort/.gitignore: New file.
	* src/cnt/.gitignore: New file.
	* src/compress/.gitignore: New file.
	* src/cover/.gitignore: New file.
	* src/crc/.gitignore: New file.
	* src/crc32/.gitignore: New file.
	* src/ctl-stack/.gitignore: New file.
	* src/ctl-string/.gitignore: New file.
	* src/ctl-vector/.gitignore: New file.
	* src/ctl/.gitignore: New file.
	* src/cubic/.gitignore: New file.
	* src/dijkstra/.gitignore: New file.
	* src/dtoa/.gitignore: New file.
	* src/duff/.gitignore: New file.
	* src/edn/.gitignore: New file.
	* src/expint/.gitignore: New file.
	* src/fac/.gitignore: New file.
	* src/fasta/.gitignore: New file.
	* src/fdct/.gitignore: New file.
	* src/fibcall/.gitignore: New file.
	* src/fir/.gitignore: New file.
	* src/frac/.gitignore: New file.
	* src/huffbench/.gitignore: New file.
	* src/insertsort/.gitignore: New file.
	* src/janne_complex/.gitignore: New file.
	* src/jfdctint/.gitignore: New file.
	* src/lcdnum/.gitignore: New file.
	* src/levenshtein/.gitignore: New file.
	* src/ludcmp/.gitignore: New file.
	* src/matmult-float/.gitignore: New file.
	* src/matmult-int/.gitignore: New file.
	* src/matmult/.gitignore: New file.
	* src/mergesort/.gitignore: New file.
	* src/miniz/.gitignore: New file.
	* src/minver/.gitignore: New file.
	* src/nbody/.gitignore: New file.
	* src/ndes/.gitignore: New file.
	* src/nettle-arcfour/.gitignore: New file.
	* src/nettle-cast128/.gitignore: New file.
	* src/nettle-des/.gitignore: New file.
	* src/nettle-md5/.gitignore: New file.
	* src/newlib-exp/.gitignore: New file.
	* src/newlib-log/.gitignore: New file.
	* src/newlib-mod/.gitignore: New file.
	* src/newlib-sqrt/.gitignore: New file.
	* src/ns/.gitignore: New file.
	* src/nsichneu/.gitignore: New file.
	* src/picojpeg/.gitignore: New file.
	* src/prime/.gitignore: New file.
	* src/qrduino/.gitignore: New file.
	* src/qsort/.gitignore: New file.
	* src/qurt/.gitignore: New file.
	* src/recursion/.gitignore: New file.
	* src/rijndael/.gitignore: New file.
	* src/select/.gitignore: New file.
	* src/sglib-arraybinsearch/.gitignore: New file.
	* src/sglib-arrayheapsort/.gitignore: New file.
	* src/sglib-arrayquicksort/.gitignore: New file.
	* src/sglib-arraysort/.gitignore: New file.
	* src/sglib-dllist/.gitignore: New file.
	* src/sglib-hashtable/.gitignore: New file.
	* src/sglib-listinsertsort/.gitignore: New file.
	* src/sglib-listsort/.gitignore: New file.
	* src/sglib-queue/.gitignore: New file.
	* src/sglib-rbtree/.gitignore: New file.
	* src/slre/.gitignore: New file.
	* src/sqrt/.gitignore: New file.
	* src/st/.gitignore: New file.
	* src/statemate/.gitignore: New file.
	* src/stb_perlin/.gitignore: New file.
	* src/stringsearch1/.gitignore: New file.
	* src/strstr/.gitignore: New file.
	* src/tarai/.gitignore: New file.
	* src/template/.gitignore: New file.
	* src/trio-snprintf/.gitignore: New file.
	* src/trio-sscanf/.gitignore: New file.
	* src/trio/.gitignore: New file.
	* src/ud/.gitignore: New file.
	* src/whetstone/.gitignore: New file.
	* src/wikisort/.gitignore: New file.
	* testsuite/.gitignore: New file.

2019-01-14  Graham Markall  <graham.markall@embecosm.com>

	* config/riscv32/boards/generic/boardsupport.c: New file.
	* config/riscv32/boards/generic/boardsupport.h: New file.
	* config/riscv32/chips/compare-baseline/chip.cfg: New file.
	* config/riscv32/chips/compare-baseline/chipsupport.c: New file.
	* config/riscv32/chips/compare-baseline/chipsupport.h: New file.
	* testsuite/config/generic.exp: New file.

2018-07-26  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	We create dummy versions of C runtime startup, libgcc, libm and
	libc, which are not functional, but include minimal
	implementations of all the needed functions. The C runtime startup
	just calls main (so LTO works), all other functions do nothing if
	they have a void return type and otherwise return zero.

	In the future a dummy version of CompilerRT can be added.

	These are for use when benchmarking code size and are enabled by
	the configuration flags --enable-dummy-crt0,
	--enable-dummy-libgcc, --enable-dummy-libc and
	--enable-dummy-libm.  The flag --enable-dummy-compilerrt is
	provided but for now has no effect.

	* Makefile.in: Regenerated.
	* config/arm/boards/none/boardsupport.c: Created.
	* config/arm/chips/generic/chip.cfg: Created.
	* config/riscv32/chips/picorv32/chip.cfg: Remove optimization
	level from CHIP_CFLAGS.
	* config/riscv32/chips/ri5cy/chip.cfg: Likewise.
	* configure: Regenerated.
	* configure.ac: Add flags to enable dummy libraries (libgcc, libc,
	libm, CompilerRT).
	* doc/Makefile.in: Regenerated.
	* doc/version.texi: Regenerated.
	* src/Makefile.in: Regenerated.
	* src/aha-compress/Makefile.am: Add dummy libraries to the LDADD
	flags.
	* src/aha-compress/Makefile.in: Regenerated.
	* src/aha-mont64/Makefile.am: Add dummy libraries to the LDADD
	flags.
	* src/aha-mont64/Makefile.in: Regenerated.
	* src/bs/Makefile.am: Add dummy libraries to the LDADD flags.
	* src/bs/Makefile.in: Regenerated.
	* src/bubblesort/Makefile.am: Add dummy libraries to the LDADD
	flags.
	* src/bubblesort/Makefile.in: Regenerated.
	* src/cnt/Makefile.am: Add dummy libraries to the LDADD flags.
	* src/cnt/Makefile.in: Regenerated.
	* src/compress/Makefile.am: Add dummy libraries to the LDADD
	flags.
	* src/compress/Makefile.in: Regenerated.
	* src/cover/Makefile.am: Add dummy libraries to the LDADD flags.
	* src/cover/Makefile.in: Regenerated.
	* src/crc/Makefile.am: Add dummy libraries to the LDADD flags.
	* src/crc/Makefile.in: Regenerated.
	* src/crc32/Makefile.am: Add dummy libraries to the LDADD flags.
	* src/crc32/Makefile.in: Regenerated.
	* src/ctl-stack/Makefile.am: Add dummy libraries to the LDADD
	flags.
	* src/ctl-stack/Makefile.in: Regenerated.
	* src/ctl-string/Makefile.am: Add dummy libraries to the LDADD
	flags.
	* src/ctl-string/Makefile.in: Regenerated.
	* src/ctl-vector/Makefile.am: Add dummy libraries to the LDADD
	flags.
	* src/ctl-vector/Makefile.in: Regenerated.
	* src/ctl/Makefile.in: Regenerated.
	* src/cubic/Makefile.am: Add dummy libraries to the LDADD flags.
	* src/cubic/Makefile.in: Regenerated.
	* src/dijkstra/Makefile.am: Add dummy libraries to the LDADD
	flags.
	* src/dijkstra/Makefile.in: Regenerated.
	* src/dtoa/Makefile.am: Add dummy libraries to the LDADD flags.
	* src/dtoa/Makefile.in: Regenerated.
	* src/duff/Makefile.am: Add dummy libraries to the LDADD flags.
	* src/duff/Makefile.in: Regenerated.
	* src/edn/Makefile.am: Add dummy libraries to the LDADD flags.
	* src/edn/Makefile.in: Regenerated.
	* src/expint/Makefile.am: Add dummy libraries to the LDADD flags.
	* src/expint/Makefile.in: Regenerated.
	* src/fac/Makefile.am: Add dummy libraries to the LDADD flags.
	* src/fac/Makefile.in: Regenerated.
	* src/fasta/Makefile.am: Add dummy libraries to the LDADD flags.
	* src/fasta/Makefile.in: Regenerated.
	* src/fdct/Makefile.am: Add dummy libraries to the LDADD flags.
	* src/fdct/Makefile.in: Regenerated.
	* src/fibcall/Makefile.am: Add dummy libraries to the LDADD flags.
	* src/fibcall/Makefile.in: Regenerated.
	* src/fir/Makefile.am: Add dummy libraries to the LDADD flags.
	* src/fir/Makefile.in: Regenerated.
	* src/frac/Makefile.am: Add dummy libraries to the LDADD flags.
	* src/frac/Makefile.in: Regenerated.
	* src/huffbench/Makefile.am: Add dummy libraries to the LDADD
	flags.
	* src/huffbench/Makefile.in: Regenerated.
	* src/insertsort/Makefile.am: Add dummy libraries to the LDADD
	flags.
	* src/insertsort/Makefile.in: Regenerated.
	* src/janne_complex/Makefile.am: Add dummy libraries to the LDADD
	flags.
	* src/janne_complex/Makefile.in: Regenerated.
	* src/jfdctint/Makefile.am: Add dummy libraries to the LDADD
	flags.
	* src/jfdctint/Makefile.in: Regenerated.
	* src/lcdnum/Makefile.am: Add dummy libraries to the LDADD flags.
	* src/lcdnum/Makefile.in: Regenerated.
	* src/levenshtein/Makefile.am: Add dummy libraries to the LDADD
	flags.
	* src/levenshtein/Makefile.in: Regenerated.
	* src/ludcmp/Makefile.am: Add dummy libraries to the LDADD flags.
	* src/ludcmp/Makefile.in: Regenerated.
	* src/matmult-float/Makefile.am: Add dummy libraries to the LDADD
	flags.
	* src/matmult-float/Makefile.in: Regenerated.
	* src/matmult-int/Makefile.am: Add dummy libraries to the LDADD
	flags.
	* src/matmult-int/Makefile.in: Regenerated.
	* src/matmult/Makefile.in: Regenerated.
	* src/mergesort/Makefile.am: Add dummy libraries to the LDADD
	flags.
	* src/mergesort/Makefile.in: Regenerated.
	* src/miniz/Makefile.am: Add dummy libraries to the LDADD flags.
	* src/miniz/Makefile.in: Regenerated.
	* src/minver/Makefile.am: Add dummy libraries to the LDADD flags.
	* src/minver/Makefile.in: Regenerated.
	* src/nbody/Makefile.am: Add dummy libraries to the LDADD flags.
	* src/nbody/Makefile.in: Regenerated.
	* src/ndes/Makefile.am: Add dummy libraries to the LDADD flags.
	* src/ndes/Makefile.in: Regenerated.
	* src/nettle-arcfour/Makefile.am: Add dummy libraries to the LDADD
	flags.
	* src/nettle-arcfour/Makefile.in: Regenerated.
	* src/nettle-cast128/Makefile.am: Add dummy libraries to the LDADD
	flags.
	* src/nettle-cast128/Makefile.in: Regenerated.
	* src/nettle-des/Makefile.am: Add dummy libraries to the LDADD
	flags.
	* src/nettle-des/Makefile.in: Regenerated.
	* src/nettle-md5/Makefile.am: Add dummy libraries to the LDADD
	flags.
	* src/nettle-md5/Makefile.in: Regenerated.
	* src/newlib-exp/Makefile.am: Add dummy libraries to the LDADD
	flags.
	* src/newlib-exp/Makefile.in: Regenerated.
	* src/newlib-log/Makefile.am: Add dummy libraries to the LDADD
	flags.
	* src/newlib-log/Makefile.in: Regenerated.
	* src/newlib-mod/Makefile.am: Add dummy libraries to the LDADD
	flags.
	* src/newlib-mod/Makefile.in: Regenerated.
	* src/newlib-sqrt/Makefile.am: Add dummy libraries to the LDADD
	flags.
	* src/newlib-sqrt/Makefile.in: Regenerated.
	* src/ns/Makefile.am: Add dummy libraries to the LDADD flags.
	* src/ns/Makefile.in: Regenerated.
	* src/nsichneu/Makefile.am: Add dummy libraries to the LDADD
	flags.
	* src/nsichneu/Makefile.in: Regenerated.
	* src/picojpeg/Makefile.am: Add dummy libraries to the LDADD
	flags.
	* src/picojpeg/Makefile.in: Regenerated.
	* src/prime/Makefile.am: Add dummy libraries to the LDADD flags.
	* src/prime/Makefile.in: Regenerated.
	* src/qrduino/Makefile.am: Add dummy libraries to the LDADD flags.
	* src/qrduino/Makefile.in: Regenerated.
	* src/qsort/Makefile.am: Add dummy libraries to the LDADD flags.
	* src/qsort/Makefile.in: Regenerated.
	* src/qurt/Makefile.am: Add dummy libraries to the LDADD flags.
	* src/qurt/Makefile.in: Regenerated.
	* src/recursion/Makefile.am: Add dummy libraries to the LDADD
	flags.
	* src/recursion/Makefile.in: Regenerated.
	* src/rijndael/Makefile.am: Add dummy libraries to the LDADD
	flags.
	* src/rijndael/Makefile.in: Regenerated.
	* src/select/Makefile.am: Add dummy libraries to the LDADD flags.
	* src/select/Makefile.in: Regenerated.
	* src/sglib-arraybinsearch/Makefile.am: Add dummy libraries to the
	LDADD flags.
	* src/sglib-arraybinsearch/Makefile.in: Regenerated.
	* src/sglib-arrayheapsort/Makefile.am: Add dummy libraries to the
	LDADD flags.
	* src/sglib-arrayheapsort/Makefile.in: Regenerated.
	* src/sglib-arrayquicksort/Makefile.am: Add dummy libraries to the
	LDADD flags.
	* src/sglib-arrayquicksort/Makefile.in: Regenerated.
	* src/sglib-arraysort/Makefile.in: Regenerated.
	* src/sglib-dllist/Makefile.am: Add dummy libraries to the LDADD
	flags.
	* src/sglib-dllist/Makefile.in: Regenerated.
	* src/sglib-hashtable/Makefile.am: Add dummy libraries to the
	LDADD flags.
	* src/sglib-hashtable/Makefile.in: Regenerated.
	* src/sglib-listinsertsort/Makefile.am: Add dummy libraries to the
	LDADD flags.
	* src/sglib-listinsertsort/Makefile.in: Regenerated.
	* src/sglib-listsort/Makefile.am: Add dummy libraries to the LDADD
	flags.
	* src/sglib-listsort/Makefile.in: Regenerated.
	* src/sglib-queue/Makefile.am: Add dummy libraries to the LDADD
	flags.
	* src/sglib-queue/Makefile.in: Regenerated.
	* src/sglib-rbtree/Makefile.am: Add dummy libraries to the LDADD
	flags.
	* src/sglib-rbtree/Makefile.in: Regenerated.
	* src/slre/Makefile.am: Add dummy libraries to the LDADD flags.
	* src/slre/Makefile.in: Regenerated.
	* src/sqrt/Makefile.am: Add dummy libraries to the LDADD flags.
	* src/sqrt/Makefile.in: Regenerated.
	* src/st/Makefile.am: Add dummy libraries to the LDADD flags.
	* src/st/Makefile.in: Regenerated.
	* src/statemate/Makefile.am: Add dummy libraries to the LDADD
	flags.
	* src/statemate/Makefile.in: Regenerated.
	* src/stb_perlin/Makefile.am: Add dummy libraries to the LDADD
	flags.
	* src/stb_perlin/Makefile.in: Regenerated.
	* src/stringsearch1/Makefile.am: Add dummy libraries to the LDADD
	flags.
	* src/stringsearch1/Makefile.in: Regenerated.
	* src/strstr/Makefile.am: Add dummy libraries to the LDADD flags.
	* src/strstr/Makefile.in: Regenerated.
	* src/tarai/Makefile.am: Add dummy libraries to the LDADD flags.
	* src/tarai/Makefile.in: Regenerated.
	* src/template/Makefile.am: Add dummy libraries to the LDADD
	flags.
	* src/template/Makefile.in: Regenerated.
	* src/trio-snprintf/Makefile.am: Add dummy libraries to the LDADD
	flags.
	* src/trio-snprintf/Makefile.in: Regenerated.
	* src/trio-sscanf/Makefile.am: Add dummy libraries to the LDADD
	flags.
	* src/trio-sscanf/Makefile.in: Regenerated.
	* src/trio/Makefile.in: Regenerated.
	* src/ud/Makefile.am: Add dummy libraries to the LDADD flags.
	* src/ud/Makefile.in: Regenerated.
	* src/whetstone/Makefile.am: Add dummy libraries to the LDADD
	flags.
	* src/whetstone/Makefile.in: Regenerated.
	* src/wikisort/Makefile.am: Add dummy libraries to the LDADD
	flags.
	* src/wikisort/Makefile.in: Regenerated.
	* support/Makefile.am: Add dummy libraries as targets
	* support/Makefile.in: Regenerated.
	* support/chip.c: Change emacs mode to C from C++
	* support/dummy-crt0.c: Created.
	* support/dummy-libc.c: Created.
	* support/dummy-libgcc.c: Created.
	* support/dummy-libm.c: Created.
	* support/main.c (main): Give full argument set.
	* testsuite/Makefile.in: Regenerated.
	* testsuite/beebs.test/Makefile.in: Regenerated.
	* testsuite/config/Makefile.in: Regenerated.
	* testsuite/lib/Makefile.in: Regenerated.
	* testsuite/lib/beebs.exp (beebs_size_all_benchmarks): Fix
	formatting.
	* update-makefile.sno: Created.
	* update-makefiles.sh: Created.

2018-06-26  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	A major rework to enable DejaGnu testing for size and execution
	time.

	* Makefile.am: Add testsuite as sub-director, reduce EXTRA_DIST to
	just config directory.
	* Makefile.in: Regenerated.
	* beebs.test/mageec-wand.exp: Moved to testsuite/lib/mageec-wand.exp.
	* beebs.test/perf-stat.exp: Moved to testsuite/lib/perf-stat.exp.
	* beebs.test/run.exp: Moved to testsuite/beebs.test/execute.exp
	* config/avr/chips/atmega328p/chip.cfg: Update license header,
	replace EXCLUDED_BENCHMARKS by assignment of benchmark flag values.
	* config/avr/chips/atxmega256a3bu/chip.cfg: Likewise.
	* configure: Regenerated
	* configure.ac: Remove version number from AM_INIT_AUTOMAKE,
	switch to silent rules, add list of all benchmarks, set default
	values of benchmark enable flags, source chip and board headers
	before enable arguments, don't override a benchmark enable flag if not
	given on the command line, use default args for AC_PROG_CC, set up
	DEJAGNU flag, generate Makefiles for testsuite.
	* dejagnu/baseboards/avr-avrdude.exp: Moved to
	testsuite/beebs.test/size.exp
	* dejagnu/baseboards/avrdude.exp: Moved to
	testsuite/config/avrdude.exp.
	* doc/Makefile.in: Regenerated.
	* genmacros.sh: Don't override enable flag if not given on command line.
	* lib/beebs.exp: Moved to testsuite/lib/beebs.exp.
	* site.exp: Moved to testsuite/beebs-conf.exp.
	* src/Makefile.in: Regenerated.
	* src/aha-compress/Makefile.in: Regenerated.
	* src/aha-mont64/Makefile.in: Regenerated.
	* src/bs/Makefile.in: Regenerated.
	* src/bubblesort/Makefile.in: Regenerated.
	* src/cnt/Makefile.in: Regenerated.
	* src/compress/Makefile.in: Regenerated.
	* src/cover/Makefile.in: Regenerated.
	* src/crc/Makefile.in: Regenerated.
	* src/crc32/Makefile.in: Regenerated.
	* src/ctl-stack/Makefile.in: Regenerated.
	* src/ctl-string/Makefile.in: Regenerated.
	* src/ctl-vector/Makefile.in: Regenerated.
	* src/ctl/Makefile.in: Regenerated.
	* src/cubic/Makefile.in: Regenerated.
	* src/dijkstra/Makefile.in: Regenerated.
	* src/dtoa/Makefile.in: Regenerated.
	* src/duff/Makefile.in: Regenerated.
	* src/edn/Makefile.in: Regenerated.
	* src/expint/Makefile.in: Regenerated.
	* src/fac/Makefile.in: Regenerated.
	* src/fasta/Makefile.in: Regenerated.
	* src/fdct/Makefile.in: Regenerated.
	* src/fibcall/Makefile.in: Regenerated.
	* src/fir/Makefile.in: Regenerated.
	* src/frac/Makefile.in: Regenerated.
	* src/huffbench/Makefile.in: Regenerated.
	* src/insertsort/Makefile.in: Regenerated.
	* src/janne_complex/Makefile.in: Regenerated.
	* src/jfdctint/Makefile.in: Regenerated.
	* src/lcdnum/Makefile.in: Regenerated.
	* src/levenshtein/Makefile.in: Regenerated.
	* src/ludcmp/Makefile.in: Regenerated.
	* src/matmult-float/Makefile.in: Regenerated.
	* src/matmult-int/Makefile.in: Regenerated.
	* src/matmult/Makefile.in: Regenerated.
	* src/mergesort/Makefile.in: Regenerated.
	* src/miniz/Makefile.in: Regenerated.
	* src/minver/Makefile.in: Regenerated.
	* src/nbody/Makefile.in: Regenerated.
	* src/ndes/Makefile.in: Regenerated.
	* src/nettle-arcfour/Makefile.in: Regenerated.
	* src/nettle-cast128/Makefile.in: Regenerated.
	* src/nettle-des/Makefile.in: Regenerated.
	* src/nettle-md5/Makefile.in: Regenerated.
	* src/newlib-exp/Makefile.in: Regenerated.
	* src/newlib-log/Makefile.in: Regenerated.
	* src/newlib-mod/Makefile.in: Regenerated.
	* src/newlib-sqrt/Makefile.in: Regenerated.
	* src/ns/Makefile.in: Regenerated.
	* src/nsichneu/Makefile.in: Regenerated.
	* src/picojpeg/Makefile.in: Regenerated.
	* src/prime/Makefile.in: Regenerated.
	* src/qrduino/Makefile.in: Regenerated. Regenerated.
	* src/qsort/Makefile.in: Regenerated.
	* src/qurt/Makefile.in: Regenerated.
	* src/recursion/Makefile.in: Regenerated.
	* src/rijndael/Makefile.in: Regenerated.
	* src/select/Makefile.in: Regenerated.
	* src/sglib-arraybinsearch/Makefile.in Regenerated.:
	* src/sglib-arrayheapsort/Makefile.in: Regenerated.
	* src/sglib-arrayquicksort/Makefile.in: Regenerated.
	* src/sglib-arraysort/Makefile.in: Regenerated.
	* src/sglib-dllist/Makefile.in: Regenerated.
	* src/sglib-hashtable/Makefile.in: Regenerated.
	* src/sglib-listinsertsort/Makefile.in: Regenerated.
	* src/sglib-listsort/Makefile.in: Regenerated.
	* src/sglib-queue/Makefile.in: Regenerated.
	* src/sglib-rbtree/Makefile.in: Regenerated.
	* src/slre/Makefile.in: Regenerated.
	* src/sqrt/Makefile.in: Regenerated.
	* src/st/Makefile.in: Regenerated.
	* src/statemate/Makefile.in: Regenerated.
	* src/stb_perlin/Makefile.in: Regenerated.
	* src/stringsearch1/Makefile.in: Regenerated.
	* src/strstr/Makefile.in: Regenerated.
	* src/tarai/Makefile.in: Regenerated.
	* src/template/Makefile.in: Regenerated.
	* src/trio-snprintf/Makefile.in: Regenerated.
	* src/trio-sscanf/Makefile.in: Regenerated.
	* src/trio/Makefile.in: Regenerated.
	* src/ud/Makefile.in: Regenerated.
	* src/whetstone/Makefile.in: Regenerated.
	* src/wikisort/Makefile.in: Regenerated.
	* support/Makefile.in: Regenerated.
	* testsuite/ChangeLog: Created.

2018-06-21  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* src/ctl/Makefile.am: Correct spelling of two source files and
	add missing header file.
	* src/ctl/Makefile.in: Regenerated.

2018-06-21  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	Tests now all build with the new structure.

	In many cases we had to add a default VERIFY_BENCHMARK function
	and in several cases the automatic editing of Makefiles had gone
	horribly wrong.

	* src/bs/libbs.c (verify_benchmark, initialise_benchmark): Created.
	* src/cnt/Makefile.am: Add missing LDADD line.
	* src/cnt/Makefile.in: Regenerated.
	* src/compress/libcompress.c (verify_benchmark): Created.
	* src/crc/libcrc.c (verify_benchmark): Created.
	* src/ctl-stack/Makefile.am: Add CPPFLAGS to library, not program.
	* src/ctl-stack/Makefile.in: Regenerated.
	* src/ctl-string/Makefile.am: Tidy up layout.
	* src/ctl-vector/Makefile.am: Add CPPFLAGS to library, not program.
	* src/ctl-vector/Makefile.in: Regenerated.
	* src/ctl-vector/stack.h: Deleted.
	* src/ctl-vector/vector.h: Created as symbolic link.
	* src/cubic/Makefile.am: Remove LDFLAGS and add -lm to LDADD line.
	* src/cubic/Makefile.in: Regnerated.
	* src/cubic/basicmath_small.c (verify_benchmark): Created.
	* src/fasta/libfasta.c (verify_benchmark): Created.
	* src/fir/libfir.c (verify_benchmark): Created.
	* src/huffbench/libhuffbench.c (verify_benchmark): Created.
	* src/lcdnum/liblcdnum.c (verify_benchmark): Created.
	* src/matmult-float/Makefile.am: Add -lm flag to LDADD line
	instead of LDFLAGS and apply CPPFLAGS to library, not final binary.
	* src/matmult-float/Makefile.in: Regnerated.
	* src/matmult-int/Makefile.am: Remove unnecesary LDFLAGS and apply
	CPPFLAGS to library, not final binary.
	* src/matmult-int/Makefile.in: Regenerated.
	* src/miniz/Makefile.am: Add missing LDADD line.
	* src/miniz/Makefile.in: Regenerated.
	* src/miniz/miniz_b.c: Restore block of string deleted.
	* src/minver/libminver.c (verify_benchmark): Created.
	* src/nbody/Makefile.am: Add missing LDADD line.
	* src/nbody/Makefile.in: Regenerated.
	* src/nettle-cast128/Makefile.am: Add missing LDADD line.
	* src/nettle-cast128/Makefile.in: Regenerated.
	* src/nettle-md5/Makefile.am: Add missing LDADD line.
	* src/nettle-md5/Makefile.in: Regenerated.
	* src/newlib-exp/ef_exp.c (verify_benchmark): Created.
	* src/newlib-log/ef_log.c (verify_benchmark): Created.
	* src/newlib-mod/ef_mod.c (verify_benchmark): Created.
	* src/ns/libns.c (verify_benchmark): Created.
	* src/picojpeg/picojpeg_test.c (verify_benchmark): Created.
	* src/qsort/libqsort.c (verify_benchmark): Created.
	* src/qurt/libqurt.c (verify_benchmark): Created.
	* src/rijndael/aesxam.c (verify_benchmark): Created.
	* src/select/Makefile.am: Small tidy up of layout.
	* src/select/libselect.c (verify_benchmark): Created.
	* src/sglib-arraybinsearch/Makefile.am: Add missing LDADD line.
	* src/sglib-arraybinsearch/Makefile.in: Regenerated.
	* src/sglib-arrayheapsort/Makefile.am: Apply CPPFLAGS to the
	library and add missing LDADD line.
	* src/sglib-arrayheapsort/Makefile.in: Regenerated.
	* src/sglib-arrayquicksort/Makefile.am: Apply CPPFLAGS to the
	library and add missing LDADD line.
	* src/sglib-arrayquicksort/Makefile.in: Regenerated.
	* src/sglib-arraysort/arraysort.c (verify_benchmark): Created.
	* src/sglib-dllist/dllist.c (verify_benchmark): Created.
	* src/sglib-hashtable/hashtable.c (verify_benchmark): Created.
	* src/stb_perlin/libstb_perlin.c (verify_benchmark): Created.
	* src/stringsearch1/Makefile.am: Add missing LDADD line.
	* src/stringsearch1/Makefile.in: Regenerated.
	* src/template/libtemplate.c (verify_benchmark): Created.
	* src/trio-snprintf/Makefile.am: Apply CPPFLAGS to the
	library and add missing LDADD line.
	* src/trio-snprintf/Makefile.in: Regenerated.
	* src/trio-sscanf/Makefile.am: Apply CPPFLAGS to the
	library and add missing LDADD line.
	* src/trio-sscanf/Makefile.in: Regenerated.
	* src/trio/trio_test.c (verify_benchmark): Created.
	* src/ud/libud.c (verify_benchmark): Created.
	* src/whetstone/libwhetstone.c (verify_benchmark): Created.
	* src/wikisort/libwikisort.c (verify_benchmark): Created.

2018-06-21  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	This is still work in progress.

	Each benchmark is generated as a library.  This allows us to
	control the order of dependencies between the benchmark and the
	libraries to create the final executable.  We have split the
	support libraries into libmain.la which provides the MAIN function
	and libsupport.la which provides all other support functions.  The
	reason is that libmain.la depends on the benchmark but the benchmarks
	in turn depend on libsupport.la.

	Not all functions defined INITIALIZE_BENCHMARK, so we have
	provided this as an empty function.  This approach avoids the need
	to use weak linking, which does nothing to help portability.

	* Makefile.am: Rewritten for new file structure.
	* Makefile.in: Regenerated.
	* doc/.gitignore: Remove directory qualifier.
	* doc/Makefile.in: Regenerated.
	* doc/beebs.info: Likewise.
	* doc/version.texi: Likewise.
	* genmacros.sh: Fixed small details of what is generated.
	* src/Makefile.am: Tidied up list of sub-directories.
	* src/Makefile.in: Generated.
	* src/aha-compress/Makefile.am: Restructured to be based on
	library generation.
	* src/aha-compress/Makefile.in: Regenerated.
	* src/aha-compress/compress_test.c (initialize_benchmark): Created.
	* src/aha-mont64/Makefile.am: Restructured to be based on library
	generation.
	* src/aha-mont64/Makefile.in: Regenerated.
	* src/bs/Makefile.am: Restructured to be based on library
	generation.
	* src/bs/Makefile.in: Regenerated.
	* src/bs/libbs.c (initialize_benchmark): Created.
	* src/bubblesort/Makefile.am: Restructured to be based on library
	generation.
	* src/bubblesort/Makefile.in: Regenerated.
	* src/cnt/Makefile.in: Regenerated.
	* src/common.mk.am
	* src/compress/Makefile.am: Restructured to be based on library
	generation.
	* src/compress/Makefile.in: Regenerated.
	* src/compress/libcompress.c (initialize_benchmark): Created.
	* src/cover/Makefile.am: Restructured to be based on library
	generation.
	* src/cover/Makefile.in: Regenerated.
	* src/cover/libcover.c (initialize_benchmark): Created.
	* src/crc/Makefile.am: Restructured to be based on library
	generation.
	* src/crc/Makefile.in: Regenerated.
	* src/crc/libcrc.c (initialize_benchmark): Created.
	* src/crc32/Makefile.am: Restructured to be based on library
	generation.
	* src/crc32/Makefile.in: Regenerated.
	* src/crc32/crc_32.c (initialize_benchmark): Created.
	* src/ctl-stack/Makefile.am: Restructured to be based on library
	generation.
	* src/ctl-stack/Makefile.in: Regenerated.
	* src/ctl-string/Makefile.am: Restructured to be based on library
	generation.
	* src/ctl-string/Makefile.in: Regenerated.
	* src/ctl-vector/Makefile.am: Restructured to be based on library
	generation.
	* src/ctl-vector/Makefile.in: Regenerated.
	* src/ctl/Makefile.in: Regenerated.
	* src/cubic/Makefile.am: Restructured to be based on library
	generation.
	* src/cubic/Makefile.in: Regenerated.
	* src/cubic/basicmath_small.c (initialize_benchmark): Created.
	* src/dijkstra/Makefile.am: Restructured to be based on library
	generation.
	* src/dijkstra/Makefile.in: Regenerated.
	* src/dijkstra/dijkstra_small.c (initialize_benchmark): Created.
	* src/dtoa/Makefile.am: Restructured to be based on library
	generation.
	* src/dtoa/Makefile.in: Regenerated.
	* src/dtoa/libdtoa.c (initialize_benchmark): Created.
	* src/duff/Makefile.am: Restructured to be based on library
	generation.
	* src/duff/Makefile.in: Regenerated.
	* src/edn/Makefile.am: Restructured to be based on library
	generation.
	* src/edn/Makefile.in: Regenerated.
	* src/edn/libedn.c (initialize_benchmark): Created.
	* src/expint/Makefile.am: Restructured to be based on library
	generation.
	* src/expint/Makefile.in: Regenerated.
	* src/fac/Makefile.am: Restructured to be based on library
	generation.
	* src/fac/Makefile.in: Regenerated.
	* src/fac/libfac.c (initialize_benchmark): Created.
	* src/fasta/Makefile.am: Restructured to be based on library
	generation.
	* src/fasta/Makefile.in: Regenerated.
	* src/fasta/libfasta.c (initialize_benchmark): Created.
	* src/fdct/Makefile.am: Restructured to be based on library
	generation.
	* src/fdct/Makefile.in: Regenerated.
	* src/fdct/libfdct.c (initialize_benchmark): Created.
	* src/fibcall/Makefile.am: Restructured to be based on library
	generation.
	* src/fibcall/Makefile.in: Regenerated.
	* src/fibcall/libfibcall.c (initialize_benchmark): Created.
	* src/fir/Makefile.am: Restructured to be based on library
	generation.
	* src/fir/Makefile.in: Regenerated.
	* src/fir/libfir.c (initialize_benchmark): Created.
	* src/frac/Makefile.am: Restructured to be based on library
	generation.
	* src/frac/Makefile.in: Regenerated.
	* src/frac/libfrac.c (initialize_benchmark): Created.
	* src/huffbench/Makefile.am: Restructured to be based on library
	generation.
	* src/huffbench/Makefile.in: Regenerated.
	* src/huffbench/libhuffbench.c (initialize_benchmark): Created.
	* src/insertsort/Makefile.am: Restructured to be based on library
	generation.
	* src/insertsort/Makefile.in: Regenerated.
	* src/janne_complex/Makefile.am: Restructured to be based on
	library generation.
	* src/janne_complex/Makefile.in: Regenerated.
	* src/jfdctint/Makefile.am: Restructured to be based on library
	generation.
	* src/jfdctint/Makefile.in: Regenerated.
	* src/lcdnum/Makefile.am: Restructured to be based on library
	generation.
	* src/lcdnum/Makefile.in: Regenerated.
	* src/lcdnum/liblcdnum.c (initialize_benchmark): Created.
	* src/levenshtein/Makefile.am: Restructured to be based on library
	generation.
	* src/levenshtein/Makefile.in: Regenerated.
	* src/levenshtein/liblevenshtein.c (initialize_benchmark): Created.
	* src/ludcmp/Makefile.am: Restructured to be based on library
	generation.
	* src/ludcmp/Makefile.in: Regenerated.
	* src/ludcmp/libludcmp.c (initialize_benchmark): Created.
	* src/matmult-float/Makefile.am: Restructured to be based on
	library generation.
	* src/matmult-float/Makefile.in: Regenerated.
	* src/matmult-int/Makefile.am: Restructured to be based on library
	generation.
	* src/matmult-int/Makefile.in: Regenerated.
	* src/matmult/Makefile.in: Regenerated.
	* src/mergesort/Makefile.am: Restructured to be based on library
	generation.
	* src/mergesort/Makefile.in: Regenerated.
	* src/mergesort/libmergesort.c (initialize_benchmark): Created.
	* src/miniz/Makefile.am: Restructured to be based on library
	generation.
	* src/miniz/Makefile.in: Regenerated.
	* src/miniz/miniz_b.c (initialize_benchmark): Created.
	* src/minver/Makefile.am: Restructured to be based on library
	generation.
	* src/minver/Makefile.in: Regenerated.
	* src/minver/libminver.c (initialize_benchmark): Created.
	* src/nbody/Makefile.am: Restructured to be based on library
	generation.
	* src/nbody/Makefile.in: Regenerated.
	* src/nbody/nbody.c (initialize_benchmark): Created.
	* src/ndes/Makefile.am: Restructured to be based on library
	generation.
	* src/ndes/Makefile.in: Regenerated.
	* src/nettle-arcfour/Makefile.am: Restructured to be based on
	library generation.
	* src/nettle-arcfour/Makefile.in: Regenerated.
	* src/nettle-arcfour/arcfour.c (initialize_benchmark): Created.
	* src/nettle-cast128/Makefile.am: Restructured to be based on
	library generation.
	* src/nettle-cast128/Makefile.in: Regenerated.
	* src/nettle-des/Makefile.am: Restructured to be based on library
	generation.
	* src/nettle-des/Makefile.in: Regenerated.
	* src/nettle-des/des.c (initialize_benchmark): Created.
	* src/nettle-md5/Makefile.am: Restructured to be based on library
	generation.
	* src/nettle-md5/Makefile.in: Regenerated.
	* src/nettle-md5/md5.c (initialize_benchmark): Created.
	* src/newlib-exp/Makefile.am: Restructured to be based on library
	generation.
	* src/newlib-exp/Makefile.in: Regenerated.
	* src/newlib-exp/ef_exp.c (initialize_benchmark): Created.
	* src/newlib-log/Makefile.am: Restructured to be based on library
	generation.
	* src/newlib-log/Makefile.in: Regenerated.
	* src/newlib-log/ef_log.c (initialize_benchmark): Created.
	* src/newlib-mod/Makefile.am: Restructured to be based on library
	generation.
	* src/newlib-mod/Makefile.in: Regenerated.
	* src/newlib-mod/ef_mod.c (initialize_benchmark): Created.
	* src/newlib-sqrt/Makefile.am: Restructured to be based on library
	generation.
	* src/newlib-sqrt/Makefile.in: Regenerated.
	* src/ns/Makefile.am: Restructured to be based on library
	generation.
	* src/ns/Makefile.in: Regenerated.
	* src/ns/libns.c (initialize_benchmark): Created.
	* src/nsichneu/Makefile.am: Restructured to be based on library
	generation.
	* src/nsichneu/Makefile.in: Regenerated.
	* src/nsichneu/libnsichneu.c (initialize_benchmark): Created.
	* src/picojpeg/Makefile.am: Restructured to be based on library
	generation.
	* src/picojpeg/Makefile.in: Regenerated.
	* src/picojpeg/picojpeg_test.c (initialize_benchmark): Created.
	* src/prime/Makefile.am: Restructured to be based on library
	generation.
	* src/prime/Makefile.in: Regenerated.
	* src/qrduino/Makefile.am: Restructured to be based on library
	generation.
	* src/qrduino/Makefile.in: Regenerated.
	* src/qsort/Makefile.am: Restructured to be based on library
	generation.
	* src/qsort/Makefile.in: Regenerated.
	* src/qsort/libqsort.c (initialize_benchmark): Created.
	* src/qurt/Makefile.am: Restructured to be based on library
	generation.
	* src/qurt/Makefile.in: Regenerated.
	* src/qurt/libqurt.c (initialize_benchmark): Created.
	* src/recursion/Makefile.am: Restructured to be based on library
	generation.
	* src/recursion/Makefile.in: Regenerated.
	* src/rijndael/Makefile.am: Restructured to be based on library
	generation.
	* src/rijndael/Makefile.in: Regenerated.
	* src/rijndael/aesxam.c (initialize_benchmark): Created.
	* src/select/Makefile.am: Restructured to be based on library
	generation.
	* src/select/Makefile.in: Regenerated.
	* src/sglib-arraybinsearch/Makefile.am: Restructured to be based
	on library generation.
	* src/sglib-arraybinsearch/Makefile.in: Regenerated.
	* src/sglib-arraybinsearch/arraybinsearch.c (initialize_benchmark): Created.
	* src/sglib-arrayheapsort/Makefile.am: Restructured to be based on
	library generation.
	* src/sglib-arrayheapsort/Makefile.in: Regenerated.
	* src/sglib-arrayquicksort/Makefile.am: Restructured to be based
	on library generation.
	* src/sglib-arrayquicksort/Makefile.in: Regenerated.
	* src/sglib-arraysort/Makefile.in: Regenerated.
	* src/sglib-arraysort/arraysort.c (initialize_benchmark): Created.
	* src/sglib-dllist/Makefile.am: Restructured to be based on
	library generation.
	* src/sglib-dllist/Makefile.in: Regenerated.
	* src/sglib-dllist/dllist.c (initialize_benchmark): Created.
	* src/sglib-hashtable/Makefile.am: Restructured to be based on
	library generation.
	* src/sglib-hashtable/Makefile.in: Regenerated.
	* src/sglib-hashtable/hashtable.c (initialize_benchmark): Created.
	* src/sglib-listinsertsort/Makefile.am: Restructured to be based
	on library generation.
	* src/sglib-listinsertsort/Makefile.in: Regenerated.
	* src/sglib-listinsertsort/listinsertsort.c (initialize_benchmark): Created.
	* src/sglib-listsort/Makefile.am: Restructured to be based on
	library generation.
	* src/sglib-listsort/Makefile.in: Regenerated.
	* src/sglib-listsort/listsort.c (initialize_benchmark): Created.
	* src/sglib-queue/Makefile.am: Restructured to be based on library
	generation.
	* src/sglib-queue/Makefile.in: Regenerated.
	* src/sglib-queue/queue.c (initialize_benchmark): Created.
	* src/sglib-rbtree/Makefile.am: Restructured to be based on
	library generation.
	* src/sglib-rbtree/Makefile.in: Regenerated.
	* src/sglib-rbtree/rbtree.c (initialize_benchmark): Created.
	* src/slre/Makefile.am: Restructured to be based on library
	generation.
	* src/slre/Makefile.in: Regenerated.
	* src/slre/libslre.c (initialize_benchmark): Created.
	* src/sqrt/Makefile.am: Restructured to be based on library
	generation.
	* src/sqrt/Makefile.in: Regenerated.
	* src/sqrt/libsqrt.c (initialize_benchmark): Created.
	* src/st/Makefile.am: Restructured to be based on library
	generation.
	* src/st/Makefile.in: Regenerated.
	* src/st/libst.c (initialize_benchmark): Created.
	* src/statemate/Makefile.am: Restructured to be based on library
	generation.
	* src/statemate/Makefile.in: Regenerated.
	* src/stb_perlin/Makefile.am: Restructured to be based on library
	generation.
	* src/stb_perlin/Makefile.in: Regenerated.
	* src/stb_perlin/libstb_perlin.c (initialize_benchmark): Created.
	* src/stringsearch1/Makefile.am: Restructured to be based on
	library generation.
	* src/stringsearch1/Makefile.in: Regenerated.
	* src/strstr/Makefile.am: Restructured to be based on library
	generation.
	* src/strstr/Makefile.in: Regenerated.
	* src/strstr/libstrstr.c (initialize_benchmark): Created.
	* src/tarai/Makefile.am: Restructured to be based on library
	generation.
	* src/tarai/Makefile.in: Regenerated.
	* src/template/Makefile.am: Restructured to be based on library
	generation.
	* src/template/Makefile.in: Regenerated.
	* src/template/libtemplate.c (initialize_benchmark): Created.
	* src/trio-snprintf/Makefile.am: Restructured to be based on
	library generation.
	* src/trio-snprintf/Makefile.in: Regenerated.
	* src/trio-sscanf/Makefile.am: Restructured to be based on library
	generation.
	* src/trio-sscanf/Makefile.in: Regenerated.
	* src/trio/Makefile.in: Regenerated.
	* src/trio/trio_test.c (initialize_benchmark): Created.
	* src/ud/Makefile.am: Restructured to be based on library
	generation.
	* src/ud/Makefile.in: Regenerated.
	* src/ud/libud.c (initialize_benchmark): Created.
	* src/whetstone/Makefile.am: Restructured to be based on library
	generation.
	* src/whetstone/Makefile.in: Regenerated.
	* src/whetstone/libwhetstone.c (initialize_benchmark): Created.
	* src/wikisort/Makefile.am: Restructured to be based on library
	generation.
	* src/wikisort/Makefile.in: Regenerated.
	* src/wikisort/libwikisort.c (initialize_benchmark): Created.
	* support/Makefile.am: Break out main into its own library.
	* support/Makefile.in: Regenerated.
	* support/support.h: Add missing #endif

2018-06-21  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	Note. This is a work in progress.

	To avoid problems with name clashes with autotools, we rename
	source files for benchmarks with a prefix lib to indicate they are
	to go into the library.

	* .gitignore: Remove a lot of clutter from automake.
	* configure: Regenerated.
	* configure.ac: Reworked for new structure.
	* doc/.gitignore: Created.
	* libtool; Created.
	* src/bs/bs.c: Moved to src/bs/libbs.c.
	* src/bs/libbs.c: Moved from src/bs/bs.c.
	* src/bubblesort/bubblesort.c: Moved to
	src/bubblesort/libbubblesort.c.
	* src/bubblesort/libbubblesort.c: Moved from
	src/bubblesort/bubblesort.c.
	* src/compress/compress.c: Moved to src/compress/libcompress.c.
	* src/compress/libcompress.c: Moved from
	src/compress/compress.c.
	* src/cover/cover.c: Moved to src/cover/libcover.c.
	* src/cover/libcover.c: Moved from src/cover/cover.c.
	* src/crc/crc.c: Moved to src/crc/libcrc.c.
	* src/crc/libcrc.c: Moved from src/crc/crc.c.
	* src/cubic/cubic.c: Moved to src/cubic/libcubic.c.
	* src/cubic/libcubic.c: Moved from src/cubic/cubic.c.
	* src/dtoa/dtoa.c: Moved to src/dtoa/libdtoa.c.
	* src/dtoa/libdtoa.c: Moved from src/dtoa/dtoa.c.
	* src/duff/duff.c: Moved to src/duff/libduff.c.
	* src/duff/libduff.c: Moved from src/duff/duff.c.
	* src/edn/edn.c: Moved to src/edn/libedn.c.
	* src/edn/libedn.c: Moved from src/edn/edn.c.
	* src/expint/expint.c: Moved to src/expint/libexpint.c.
	* src/expint/libexpint.c: Moved from src/expint/expint.c.
	* src/fac/fac.c: Moved to src/fac/libfac.c.
	* src/fac/libfac.c: Moved from src/fac/fac.c.
	* src/fasta/fasta.c: Moved to src/fasta/libfasta.c.
	* src/fasta/libfasta.c: Moved from src/fasta/fasta.c.
	* src/fdct/fdct.c: Moved to src/fdct/libfdct.c.
	* src/fdct/libfdct.c: Moved from src/fdct/fdct.c.
	* src/fibcall/fibcall.c: Moved to src/fibcall/libfibcall.c.
	* src/fibcall/libfibcall.c: Moved from src/fibcall/fibcall.c.
	* src/fir/fir.c: Moved to src/fir/libfir.c.
	* src/fir/libfir.c: Moved from src/fir/fir.c.
	* src/frac/frac.c: Moved to src/frac/libfrac.c.
	* src/frac/libfrac.c: Moved from src/frac/frac.c.
	* src/huffbench/huffbench.c: Moved to
	src/huffbench/libhuffbench.c.
	* src/huffbench/libhuffbench.c: Moved from
	src/huffbench/huffbench.c.
	* src/insertsort/insertsort.c: Moved to
	src/insertsort/libinsertsort.c.
	* src/insertsort/libinsertsort.c: Moved from
	src/insertsort/insertsort.c.
	* src/janne_complex/janne_complex.c: Moved to
	src/janne_complex/libjanne_complex.c.
	* src/janne_complex/libjanne_complex.c: Moved from
	src/janne_complex/janne_complex.c.
	* src/jfdctint/jfdctint.c: Moved to src/jfdctint/libjfdctint.c.
	* src/jfdctint/libjfdctint.c: Moved from
	src/jfdctint/jfdctint.c.
	* src/lcdnum/lcdnum.c: Moved to src/lcdnum/liblcdnum.c.
	* src/lcdnum/liblcdnum.c: Moved from src/lcdnum/lcdnum.c.
	* src/levenshtein/levenshtein.c: Moved to
	src/levenshtein/liblevenshtein.c.
	* src/levenshtein/liblevenshtein.c: Moved from
	src/levenshtein/levenshtein.c.
	* src/ludcmp/ludcmp.c: Moved to src/ludcmp/libludcmp.c.
	* src/ludcmp/libludcmp.c: Moved from src/ludcmp/ludcmp.c.
	* src/mergesort/mergesort.c: Moved to
	src/mergesort/libmergesort.c.
	* src/mergesort/libmergesort.c: Moved from
	src/mergesort/mergesort.c.
	* src/minver/minver.c: Moved to src/minver/libminver.c.
	* src/minver/libminver.c: Moved from src/minver/minver.c.
	* src/ndes/ndes.c: Moved to src/ndes/libndes.c.
	* src/ndes/libndes.c: Moved from src/ndes/ndes.c.
	* src/ns/ns.c: Moved to src/ns/libns.c.
	* src/ns/libns.c: Moved from src/ns/ns.c.
	* src/nsichneu/nsichneu.c: Moved to src/nsichneu/libnsichneu.c.
	* src/nsichneu/libnsichneu.c: Moved from
	src/nsichneu/nsichneu.c.
	* src/picojpeg/picojpeg.c: Moved to src/picojpeg/libpicojpeg.c.
	* src/picojpeg/libpicojpeg.c: Moved from
	src/picojpeg/picojpeg.c.
	* src/prime/prime.c: Moved to src/prime/libprime.c.
	* src/prime/libprime.c: Moved from src/prime/prime.c.
	* src/qsort/qsort.c: Moved to src/qsort/libqsort.c.
	* src/qsort/libqsort.c: Moved from src/qsort/qsort.c.
	* src/qurt/qurt.c: Moved to src/qurt/libqurt.c.
	* src/qurt/libqurt.c: Moved from src/qurt/qurt.c.
	* src/recursion/recursion.c: Moved to
	src/recursion/librecursion.c.
	* src/recursion/librecursion.c: Moved from
	src/recursion/recursion.c.
	* src/select/select.c: Moved to src/select/libselect.c.
	* src/select/libselect.c: Moved from src/select/select.c.
	* src/slre/slre.c: Moved to src/slre/libslre.c.
	* src/slre/libslre.c: Moved from src/slre/slre.c.
	* src/sqrt/sqrt.c: Moved to src/sqrt/libsqrt.c.
	* src/sqrt/libsqrt.c: Moved from src/sqrt/sqrt.c.
	* src/st/st.c: Moved to src/st/libst.c.
	* src/st/libst.c: Moved from src/st/st.c.
	* src/statemate/statemate.c: Moved to
	src/statemate/libstatemate.c.
	* src/statemate/libstatemate.c: Moved from
	src/statemate/statemate.c.
	* src/stb_perlin/stb_perlin.c: Moved to
	src/stb_perlin/libstb_perlin.c.
	* src/stb_perlin/libstb_perlin.c: Moved from
	src/stb_perlin/stb_perlin.c.
	* src/strstr/strstr.c: Moved to src/strstr/libstrstr.c.
	* src/strstr/libstrstr.c: Moved from src/strstr/strstr.c.
	* src/tarai/tarai.c: Moved to src/tarai/libtarai.c.
	* src/tarai/libtarai.c: Moved from src/tarai/tarai.c.
	* src/template/template.c: Moved to src/template/libtemplate.c.
	* src/template/libtemplate.c: Moved from
	src/template/template.c.
	* src/ud/ud.c: Moved to src/ud/libud.c.
	* src/ud/libud.c: Moved from src/ud/ud.c.
	* src/whetstone/whetstone.c: Moved to
	src/whetstone/libwhetstone.c.
	* src/whetstone/libwhetstone.c: Moved from
	src/whetstone/whetstone.c.
	* src/wikisort/wikisort.c: Moved to src/wikisort/libwikisort.c.
	* src/wikisort/libwikisort.c: Moved from
	src/wikisort/wikisort.c.

2018-06-15  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	Note. This is work in progress.

	Major restructuring to make everything work more cleanly with
	autotools, including building out-of-tree. The most significant
	change is that we do not rely on source files in
	subdirectories. Everything is built simply in its own
	directory. For benchmarks which are using common sources, we use
	symbolic links to that source into the correct directory.

	* Makefile.am: Rewritten and simplified.
	* Makefile.in: Regenerated.
	* aclocal.m4: Likewise.
	* build-aux/compile: Moved to top level directory and regenerated.
	* build-aux/config.guess: Likewise.
	* build-aux/config.sub:
	* build-aux/depcomp
	* build-aux/install-sh -> install-sh
	* build-aux/ltmain.sh -> ltmain.sh
	* build-aux/mdate-sh -> doc/mdate-sh
	* build-aux/missing -> missing
	* build-aux/texinfo.tex -> doc/texinfo.tex
	* compile: Moved from build-aux directory and regenerated.
	* config.h.in: Regenerated.
	* config/riscv64/boards/none/boardsupport.c: Created.
	* config/riscv64/chips/generic/chip.cfg: Created.
	* config/riscv64/chips/generic/chipsupport.c: Created.
	* config/riscv64/chips/generic/chipsupport.h: Created.
	* config.guess: Moved from build-aux directory and regenerated.
	* config.sub: Likewise.
	* configure: Regenerated.
	* configure.ac: Rewritten and simplified.
	* dejagnu/site.exp.in: Moved to top level directory as site.exp.
	* depcomp: Moved from build-aux directory and regenerated.
	* doc/Makefile.in: Regenerated.
	* doc/mdate-sh: Moved from build-aux directory and regenerated.
	* doc/texinfo.tex: Likewise
	* genmacros.sh: Created.
	* include/support.h: Moved to support directory.
	* install-sh: Moved from build-aux directory and regenerated.
	* ltmain.sh: Likewise.
	* m4/libtool.m4: Regenerated.
	* m4/ltoptions.m4: Likewise.
	* m4/ltsugar.m4: Likewise.
	* m4/ltversion.m4: Likewise.
	* m4/lt~obsolete.m4: Likewise.
	* missing: Moved from build-aux directory and regenerated.
	* site.exp: Moved from dejagnu/site.exp.in.
	* src/Makefile.am: Created.
	* src/aha-compress/Makefile.am: Made conditional, flags made
	program specific and central library linked.
	* src/aha-compress/Makefile.in: Regenerated.
	* src/aha-mont64/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/aha-mont64/Makefile.in: Regenerated.
	* src/bs/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/bs/Makefile.in: Regenerated.
	* src/bubblesort/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/bubblesort/Makefile.in: Regenerated.
	* src/cnt/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/cnt/Makefile.in: Regenerated.
	* src/common.mk.am
	* src/compress/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/compress/Makefile.in: Regenerated.
	* src/cover/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/cover/Makefile.in: Regenerated.
	* src/crc/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/crc/Makefile.in: Regenerated.
	* src/crc32/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/crc32/Makefile.in: Regenerated.
	* src/ctl-stack/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/ctl-stack/Makefile.in: Regenerated.
	* src/ctl-stack/ctl.c: Created.
	* src/ctl-stack/ctl.h: Created.
	* src/ctl-stack/stack.h: Created.
	* src/ctl-string/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/ctl-string/Makefile.in: Regenerated.
	* src/ctl-vector/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/ctl-vector/Makefile.in: Regenerated.
	* src/ctl-vector/ctl.c: Created.
	* src/ctl-vector/ctl.h: Created.
	* src/ctl-vector/stack.h: Created.
	* src/ctl/Makefile.am: Created.
	* src/ctl/Makefile.in: Generated.
	* src/cubic/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/cubic/Makefile.in: Regenerated.
	* src/dijkstra/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/dijkstra/Makefile.in: Regenerated.
	* src/dtoa/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/dtoa/Makefile.in: Regenerated.
	* src/duff/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/duff/Makefile.in: Regenerated.
	* src/edn/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/edn/Makefile.in: Regenerated.
	* src/expint/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/expint/Makefile.in: Regenerated.
	* src/fac/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/fac/Makefile.in: Regenerated.
	* src/fasta/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/fasta/Makefile.in: Regenerated.
	* src/fdct/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/fdct/Makefile.in: Regenerated.
	* src/fibcall/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/fibcall/Makefile.in: Regenerated.
	* src/fir/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/fir/Makefile.in: Regenerated.
	* src/frac/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/frac/Makefile.in: Regenerated.
	* src/huffbench/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/huffbench/Makefile.in: Regenerated.
	* src/insertsort/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/insertsort/Makefile.in: Regenerated.
	* src/janne_complex/Makefile.am: Made conditional, flags made
	program specific and central library linked.
	* src/janne_complex/Makefile.in: Regenerated.
	* src/jfdctint/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/jfdctint/Makefile.in: Regenerated.
	* src/lcdnum/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/lcdnum/Makefile.in: Regenerated.
	* src/levenshtein/Makefile.am: Made conditional, flags made
	program specific and central library linked.
	* src/levenshtein/Makefile.in: Regenerated.
	* src/ludcmp/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/ludcmp/Makefile.in: Regenerated.
	* src/main.c: Moved to support directory.
	* src/matmult-float/Makefile.am: Made conditional, flags made
	program specific and central library linked.
	* src/matmult-float/Makefile.in: Regenerated.
	* src/matmult-float/matmult.c: Created.
	* src/matmult-int/Makefile.am: Made conditional, flags made
	program specific and central library linked.
	* src/matmult-int/Makefile.in: Regenerated.
	* src/matmult-int/matmult.c: Created.
	* src/matmult/Makefile.am: Created.
	* src/matmult/Makefile.in: Generated.
	* src/mergesort/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/mergesort/Makefile.in: Regenerated.
	* src/miniz/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/miniz/Makefile.in: Regenerated.
	* src/minver/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/minver/Makefile.in: Regenerated.
	* src/nbody/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/nbody/Makefile.in: Regenerated.
	* src/ndes/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/ndes/Makefile.in: Regenerated.
	* src/nettle-arcfour/Makefile.am: Made conditional, flags made
	program specific and central library linked.
	* src/nettle-arcfour/Makefile.in: Regenerated.
	* src/nettle-cast128/Makefile.am: Made conditional, flags made
	program specific and central library linked.
	* src/nettle-cast128/Makefile.in: Regenerated.
	* src/nettle-des/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/nettle-des/Makefile.in: Regenerated.
	* src/nettle-md5/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/nettle-md5/Makefile.in: Regenerated.
	* src/newlib-exp/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/newlib-exp/Makefile.in: Regenerated.
	* src/newlib-log/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/newlib-log/Makefile.in: Regenerated.
	* src/newlib-mod/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/newlib-mod/Makefile.in: Regenerated.
	* src/newlib-sqrt/Makefile.am: Made conditional, flags made
	program specific and central library linked.
	* src/newlib-sqrt/Makefile.in: Regenerated.
	* src/ns/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/ns/Makefile.in: Regenerated.
	* src/nsichneu/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/nsichneu/Makefile.in: Regenerated.
	* src/picojpeg/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/picojpeg/Makefile.in: Regenerated.
	* src/prime/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/prime/Makefile.in: Regenerated.
	* src/qrduino/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/qrduino/Makefile.in: Regenerated.
	* src/qsort/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/qsort/Makefile.in: Regenerated.
	* src/qurt/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/qurt/Makefile.in: Regenerated.
	* src/recursion/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/recursion/Makefile.in: Regenerated.
	* src/rijndael/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/rijndael/Makefile.in: Regenerated.
	* src/select/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/select/Makefile.in: Regenerated.
	* src/sglib-arraybinsearch/Makefile.am: Made conditional, flags
	made program specific and central library linked.
	* src/sglib-arraybinsearch/Makefile.in: Regenerated.
	* src/sglib-arrayheapsort/Makefile.am: Made conditional, flags
	made program specific and central library linked.
	* src/sglib-arrayheapsort/Makefile.in: Regenerated.
	* src/sglib-arrayheapsort/arraysort.c: Created.
	* src/sglib-arrayheapsort/sglib.h: Created.
	* src/sglib-arrayquicksort/Makefile.am: Made conditional, flags
	made program specific and central library linked.
	* src/sglib-arrayquicksort/Makefile.in: Regenerated.
	* src/sglib-arrayquicksort/arraysort.c: Created.
	* src/sglib-arrayquicksort/sglib.h: Created.
	* src/sglib-arraysort/Makefile.am: Created.
	* src/sglib-arraysort/Makefile.in: Generated.
	* src/sglib-dllist/Makefile.am: Made conditional, flags made
	program specific and central library linked.
	* src/sglib-dllist/Makefile.in: Regenerated.
	* src/sglib-hashtable/Makefile.am: Made conditional, flags made
	program specific and central library linked.
	* src/sglib-hashtable/Makefile.in: Regenerated.
	* src/sglib-listinsertsort/Makefile.am: Made conditional, flags
	made program specific and central library linked.
	* src/sglib-listinsertsort/Makefile.in: Regenerated.
	* src/sglib-listsort/Makefile.am: Made conditional, flags made
	program specific and central library linked.
	* src/sglib-listsort/Makefile.in: Regenerated.
	* src/sglib-queue/Makefile.am: Made conditional, flags made
	program specific and central library linked.
	* src/sglib-queue/Makefile.in: Regenerated.
	* src/sglib-rbtree/Makefile.am: Made conditional, flags made
	program specific and central library linked.
	* src/sglib-rbtree/Makefile.in: Regenerated.
	* src/slre/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/slre/Makefile.in: Regenerated.
	* src/sqrt/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/sqrt/Makefile.in: Regenerated.
	* src/st/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/st/Makefile.in: Regenerated.
	* src/statemate/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/statemate/Makefile.in: Regenerated.
	* src/stb_perlin/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/stb_perlin/Makefile.in: Regenerated.
	* src/stringsearch1/Makefile.am: Made conditional, flags made
	program specific and central library linked.
	* src/stringsearch1/Makefile.in: Regenerated.
	* src/strstr/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/strstr/Makefile.in: Regenerated.
	* src/tarai/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/tarai/Makefile.in: Regenerated.
	* src/template/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/template/Makefile.in: Regenerated.
	* src/trio-snprintf/Makefile.am: Made conditional, flags made
	program specific and central library linked.
	* src/trio-snprintf/Makefile.in: Regenerated.
	* src/trio-snprintf/trio.c: Created.
	* src/trio-snprintf/trio.h: Created.
	* src/trio-snprintf/trio_test.c: Created.
	* src/trio-snprintf/triodef.h: Created.
	* src/trio-snprintf/triop.h: Created.
	* src/trio-snprintf/triostr.c: Created.
	* src/trio-snprintf/triostr.h: Created.
	* src/trio-sscanf/Makefile.am: Made conditional, flags made
	program specific and central library linked.
	* src/trio-sscanf/Makefile.in: Regenerated.
	* src/trio-sscanf/trio.c: Created.
	* src/trio-sscanf/trio.h: Created.
	* src/trio-sscanf/trio_test.c: Created.
	* src/trio-sscanf/triodef.h: Created.
	* src/trio-sscanf/triop.h: Created.
	* src/trio-sscanf/triostr.c: Created.
	* src/trio-sscanf/triostr.h: Created.
	* src/trio/Makefile.am: Created.
	* src/trio/Makefile.in: Generated.
	* src/ud/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/ud/Makefile.in: Regenerated.
	* src/whetstone/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/whetstone/Makefile.in: Regenerated.
	* src/wikisort/Makefile.am: Made conditional, flags made program
	specific and central library linked.
	* src/wikisort/Makefile.in: Regenerated.
	* support/Makefile.am: Created.
	* support/Makefile.in: Generated.
	* support/board.c: Created.
	* support/chip.c: Created.
	* support/main.c: Moved from src directory.
	* support/support.h: Moved from include directory.

2017-09-08  Graham Markall  <graham.markall@embecosm.com>

	Up RI5CY timeout to 240.

	* ri5cycount.py (execute): Increase timeout to 240 seconds.

2017-09-07  Graham Markall  <graham.markall@embecosm.com>

	Make ri5cycount output a bit nicer, timeout inc to 60.

	* ri5cycount.py (execute): Increase timeout to 60 seconds.
	(parse_output): Nicer output, return cycle count, rather than
	start and stop count.
	(run_benchmark): Use cycle count, rather than start and stop count.

2017-09-07  Graham Markall  <graham.markall@embecosm.com>

	Rename execcount as its picorv32-specific.

	* execcount.py: Moved to picorv32count.
	* picorv32count.py: Moved from execcount.py.

2017-09-07  Graham Markall  <graham.markall@embecosm.com>

	Working measurement of picorv32.

	* execcount.py (execute): Return gdb_output as well as
	gdbserver_output.
	(parse_gdb_output): Created.
	(parse_output): Remove seen_exit code which had been commented
	out, return just the cycle_count, not the exit_code.
	(run_benchmark): Get the exit code from parse_gdb_output.

2017-09-07  Graham Markall  <graham.markall@embecosm.com>

	Picorv32 running, need to check exit code properly.

	* execcount.py (commands): Add breakpoints on exit.
	(parse_output): Comment out seen_exit code.

2017-09-07  Graham Markall  <graham.markall@embecosm.com>

	Some changes towards picorv32 working again.

	* config/riscv32/chips/picorv32/chip.cfg: Export CHIP_LDFLAGS.
	* config/riscv32/chips/picorv32/picorv32.ld: Created.
	* config/riscv32/chips/picorv32/picorv32.spec: Created.
	* execcount.py

2017-07-04  Graham Markall  <graham.markall@embecosm.com>

	Run all benchmarks on RI5CY.

	* ri5cycount.py: Change benchmark list
	(run_benchmark): Reduce timeout to 20 seconds.

2017-07-04  Graham Markall  <graham.markall@embecosm.com>

	Rudimentary parse of ri5cy cycle counts.

	* ri5cycount.py: Created.

2017-07-04  Graham Markall  <graham.markall@embecosm.com>

	Initial add of support for RI5CY.

	* config/riscv32/boards/ri5cyverilator/boardsupport.c: Created.
	* config/riscv32/boards/ri5cyverilator/boardsupport.h: Created.
	* config/riscv32/chips/ri5cy/chip.cfg: Created.
	* config/riscv32/chips/ri5cy/chipsupport.c: Created.
	* config/riscv32/chips/ri5cy/chipsupport.h: Created.

2017-06-22  Graham Markall  <graham.markall@embecosm.com>

	Remove erroneous benchmark name, increase timeout.

	* execcount.py: Remove ctl as a benchmark.
	(run_benchmark): Increase timeout to 60 seconds.

2017-06-22  Graham Markall  <graham.markall@embecosm.com>

	Add all benchmarks and don't die on timeout.

	* execcount.py: Define list of benchmarks
	(run_benchmark): Add timeout

2017-06-22  Graham Markall  <graham.markall@embecosm.com>

	Use syscalls for triggers, compile with -O2

	* config/riscv32/boards/picorv32verilator/boardsupport.c
	(initialize_board): Initialize a0 to zero.
	(start_trigger, stop_trigger): Use syscall to print clock on each
	trigger.
	* config/riscv32/chips/picorv32/chip.cfg: Add -g to CHIP_CFLAGS.

2017-06-22  Graham Markall  <graham.markall@embecosm.com>

	Parse output and print result to stdout

	* execount.py: Make log output configurable.
	(parse_output): Created.
	(run_benchmark): Parse output and catch errors.

2017-06-22  Graham Markall  <graham.markall@embecosm.com>

	Prototype of benchmark function.

	* config/riscv32/chips/picorv32/chip.cfg: export CHIP_CFLAGS.
	* execcount.py: Created.

2017-06-21  Graham Markall  <graham.markall@embecosm.com>

	Correct misleading indentation (compile fail).

	* src/miniz/miniz.c (tdefl_find_match): Fix layout.

2017-06-21  Graham Markall  <graham.markall@embecosm.com>

	Template config for PicoRV32.

	* config/riscv32/boards/picorv32verilator/boardsupport.c: Created.
	* config/riscv32/boards/picorv32verilator/boardsupport.h: Created.
	* config/riscv32/chips/picorv32/chip.cfg: Created.
	* config/riscv32/chips/picorv32/chipsupport.c: Created.
	* config/riscv32/chips/picorv32/chipsupport.h: Created.

2016-03-16  Craig Blackmore  <craig.blackmore@bristol.ac.uk>

	Updated calibration for aha-mont64

	* config/arm/boards/stm32vldiscovery/calibration : updated
	aha-mont64 calibration

2016-07-21  Craig Blackmore  <craig.blackmore@bristol.ac.uk>
	Fixed aha-compress timeout

	* ChangeLog: added missing entries for previous four commits
	* src/aha-compress/compress_test.c (benchmark): initialisation of
	    input array causing timeout. Changed from initialise_benchmark
	    to global array
	* src/ctl/ctl.c (int initialise_benchmark): change return type to void

2016-07-21  Craig Blackmore  <craig.blackmore@bristol.ac.uk>
	statemate initialisation

	Added initialise_benchmark and verify_benchmark to statemate

	* src/statemate/statemate.c: input array Bitlist now initialised in
	    initialise_benchmark. Added self-test

2016-07-21  Craig Blackmore  <craig.blackmore@bristol.ac.uk>
	fixed minor errors in initialisation of 3 benchmarks

	* src/qurt/qurt.c: changed float array to pointer
	* src/recursion/recursion.c: changed return type of
	    initialise_benchmark from int to void
	* src/stringsearch1/stringsearch1.c: added semicolon

2016-07-21  Craig Blackmore  <craig.blackmore@bristol.ac.uk>
	remove new initialise_benchmark from compress.c due to timeout

	The input string is now a global variable which, with link-time
	optimisation disabled, should be enough to prevent the compiler from
	optimising it out.

	* src/compress/compress.c: remove initialise_benchmark

2016-07-21  Craig Blackmore  <craig.blackmore@bristol.ac.uk>
	initialise input data pt1

	Began editing benchmarks to prevent the compiler from optimising based
	on input data which, for real programs, would often be unknown at
	compile time. Link-time optimisation must be disabled for this to
	work.

	initialise_benchmark (in benchmark.c) is called by main (in main.c)
	before calling benchmark (in benchmark.c). Without LTO, the compiler
	cannot assume that initialise_benchmark has been called before the
	benchmark function executes, thus protecting the input data from
	optimisation.

	Where using initialise_benchmark is impractical or overly convoluted,
	inputs are made into global variables which should be enough to
	prevent the compiler from optimising based on them - as it cannot
	assume they are not changed by another object file.

	Also fixed incorrect index ranges in bubblesort.c

	* src/2dfir/fir2dim.c: removed confusing #defines. Input array now
	    initialised in initialise_benchmark 
	* src/adpcm/adpcm.c: amplitude and frequency now initialised in
	    initialised in initialise_benchmark 
	* src/aha-compress/compress_test.c: input array now initialised in
	    initialise_benchmark 
	* src/aha-mont64/mont64.c: input variables now initialised in
	    initialise_benchmark 
	* src/bubblesort/bubblesort.c: fixed incorrect index ranges. Changed
	    existing Initialize function to initialise_benchmark
	* src/cnt/cnt.c: moved InitSeed and Initialize calls to
	    initialise_benchmark 
	* src/compress/compress.c: input array now initialised in
	    initialise_benchmark 
	* src/ctl-string/string.c: inputs now initialised in
	    initialise_benchmark 
	* src/ctl/ctl.c: inputs now initialised in initialise_benchmark and
	    replaced hard coded constants with variables as, realistically,
	    they may vary and their values should not be assumed at compile
	    time
	* src/duff/duff.c: initialize replace with initialise_benchmark 
	* src/edn/edn.c: inputs now initialised in initialise_benchmark 
	* src/expint/expint.c: inputs now initialised in initialise_benchmark 
	* src/insertsort/insertsort.c: input array now initialised in
	    initialise_benchmark 
	* src/janne_complex/janne_complex.c: inputs now initialised in
	    initialise_benchmark 
	* src/jfdctint/jfdctint.c: initialisation preamble moved to
	    initialise_benchmark 
	* src/main.c: added call to initialise_benchmark before each
	    benchmark call - some benchmarks need to be initialised before
	    each repeat
	* src/matmult/matmult.c: initialisation parts moved to
	    initialise_benchmark 
	* src/ndes/ndes.c: input and key now initialised in
	    initialise_benchmark 
	* src/newlib-sqrt/ef_sqrt.c: constant function args now initialised
	    in initialise_benchmark 
	* src/prime/prime.c: inputs now initialised in initialise_benchmark
	* src/qrduino/qrtest.c: input string and size now initialised in
	    initialise_benchmark 
	* src/qurt/qurt.c: input data moved to global floats
	* src/recursion/recursion.c: constant function input now initialised
	    in initialise_benchmark 
	* src/select/select.c: constant function inputs now initialised
	    in initialise_benchmark 
	* src/stringsearch1/stringsearch1.c: string sizes now initialised in
	    initialise_benchmark 
	* src/strstr/strstr.c: search string now global
	* src/tarai/tarai.c: constant function inputs now initialised in
	    initialise_benchmark

2016-07-21  Craig Blackmore  <craig.blackmore@bristol.ac.uk>
	Updated calibration for aha-mont64

	* config/arm/boards/stm32vldiscovery/calibration: updated aha-mont64
	    calibration
2016-07-21  Craig Blackmore  <craig.blackmore@bristol.ac.uk>
	Added verify_benchmark function to implement self-tests.
	Initialised output_count in dijkstra.
	newlib-sqrt added result array so that the function calls are not
	    optimised out

	* include/support.h : added verify_benchmark function prototype
	* src/2dfir/fir2dim.c : added verify_benchmark
	* src/adpcm/adpcm.c : added verify_benchmark
	* src/aha-compress/compress_test.c : added verify_benchmark
	* src/aha-mont64/mont64.c : added verify_benchmark
	* src/bubblesort/bubblesort.c : added verify_benchmark
	* src/cnt/cnt.c : added verify_benchmark
	* src/cover/cover.c : added verify_benchmark
	* src/crc32/crc_32.c : added verify_benchmark
	* src/ctl-string/string.c : added verify_benchmark
	* src/ctl/ctl.c : added verify_benchmark
	* src/dijkstra/dijkstra_small.c : added verify_benchmark and initialised output_count
	* src/dtoa/dtoa.c : added verify_benchmark
	* src/duff/duff.c : added verify_benchmark
	* src/edn/edn.c : added verify_benchmark
	* src/expint/expint.c : added verify_benchmark
	* src/fac/fac.c : added verify_benchmark
	* src/fdct/fdct.c : added verify_benchmark
	* src/fft/fft1.c : scale up repeat factor
	* src/fibcall/fibcall.c : added verify_benchmark and scaled up repeat factor
	* src/frac/frac.c : added verify_benchmark
	* src/insertsort/insertsort.c : added verify_benchmark
	* src/janne_complex/janne_complex.c : added verify_benchmark
	* src/jfdctint/jfdctint.c : added verify_benchmark
	* src/levenshtein/levenshtein.c : added verify_benchmark
	* src/ludcmp/ludcmp.c : added verify_benchmark
	* src/main.c : added call to verify_benchmark and now returns exit code
	* src/matmult/matmult.c : added verify_benchmark
	* src/mergesort/mergesort.c : added verify_benchmark
	* src/nbody/nbody.c : added verify_benchmark
	* src/ndes/ndes.c : added verify_benchmark
	* src/nettle-arcfour/arcfour.c : added verify_benchmark
	* src/nettle-cast128/cast128.c : added verify_benchmark
	* src/nettle-des/des.c : added verify_benchmark
	* src/nettle-md5/md5.c : added verify_benchmark
	* src/newlib-sqrt/ef_sqrt.c : added verify_benchmark and result array
	* src/nsichneu/nsichneu.c : added verify_benchmark
	* src/prime/prime.c : added verify_benchmark
	* src/qrduino/qrtest.c : added verify_benchmark
	* src/recursion/recursion.c : added verify_benchmark
	* src/sglib-arraybinsearch/arraybinsearch.c : added verify_benchmark
	* src/sglib-listinsertsort/listinsertsort.c : added verify_benchmark
	* src/sglib-listsort/listsort.c : added verify_benchmark
	* src/sglib-queue/queue.c : added verify_benchmark
	* src/sglib-rbtree/rbtree.c : added verify_benchmark
	* src/slre/slre.c : added verify_benchmark
	* src/sqrt/sqrt.c : added verify_benchmark
	* src/st/st.c : added verify_benchmark
	* src/stringsearch1/stringsearch1.c : added verify_benchmark
	* src/strstr/strstr.c : added verify_benchmark
	* src/tarai/tarai.c : added verify_benchmark
	* src/trio/trio_test.c : added verify_benchmark

2016-08-01  Andrew Burgess  <andrew.burgess@embecosm.com>

	Remove benchmarks that are not licenced under GPL.

	* configure.ac: Update to remove deleted benchmarks.
	* configure: Regenerated.
	* src/2dfir/Makefile.am: Deleted.
	* src/2dfir/Makefile.in: Deleted.
	* src/2dfir/fir2dim.c: Deleted.
	* src/adpcm/Makefile.am: Deleted.
	* src/adpcm/Makefile.in: Deleted.
	* src/adpcm/adpcm.c: Deleted.
	* src/blowfish/COPYRIGHT: Deleted.
	* src/blowfish/LICENSE: Deleted.
	* src/blowfish/Makefile.am: Deleted.
	* src/blowfish/Makefile.in: Deleted.
	* src/blowfish/bf.c: Deleted.
	* src/blowfish/bf_cfb64.c: Deleted.
	* src/blowfish/bf_enc.c: Deleted.
	* src/blowfish/bf_locl.h: Deleted.
	* src/blowfish/bf_pi.h: Deleted.
	* src/blowfish/bf_skey.c: Deleted.
	* src/blowfish/blowfish.h: Deleted.
	* src/dhrystone/Makefile.am: Deleted.
	* src/dhrystone/Makefile.in: Deleted.
	* src/dhrystone/dhry.h: Deleted.
	* src/dhrystone/dhry_1.c: Deleted.
	* src/dhrystone/dhry_2.c: Deleted.
	* src/fft/Makefile.am: Deleted.
	* src/fft/Makefile.in: Deleted.
	* src/fft/fft1.c: Deleted.
	* src/lms/Makefile.am: Deleted.
	* src/lms/Makefile.in: Deleted.
	* src/lms/lms.c: Deleted.
	* src/sha/Makefile.am: Deleted.
	* src/sha/Makefile.in: Deleted.
	* src/sha/sha.c: Deleted.
	* src/sha/sha.h: Deleted.
	* src/sha/sha_driver.c: Deleted.

2016-07-12  James Pallister  <james.pallister@bristol.ac.uk>

	Calibration update for xmega and board support tweaks

	* config/avr/boards/xmegaa3buxplained/boardsupport.c: Initialise pin
	    after clock
	* config/avr/boards/xmegaa3buxplained/calibration: Correct calibration
	    for blowfish and dijkstra
	* config/avr/chips/atxmega256a3bu/chipsupport.h: Clear the port before
	    initialising direction

2016-07-12  James Pallister  <james.pallister@bristol.ac.uk>

	Added support for the XMEGA A3BU XPLAINED board

	* config/avr/boards/xmegaa3buxplained/boardsupport.c: Trigger and
	    clock set up for the xmegaa3buxpl ained
	* config/avr/boards/xmegaa3buxplained/calibration: Calibration values
	    for the platform
	* config/avr/chips/atxmega256a3bu/chip.cfg: Chip configuration file
	* config/avr/chips/atxmega256a3bu/chipsupport.h: Pin toggling for the
	    chip

2016-07-12  Andrew Burgess  <andrew.burgess@embecosm.com>

	* run-all.sh: Deleted.

2016-07-12  Andrew Burgess  <andrew.burgess@embecosm.com>

	* tools/generate-benchmark.sh: Deleted.

2016-07-12  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/platformcode/Makefile.am: Deleted.
	* src/platformcode/Makefile.in: Deleted.
	* src/platformcode/msp430.s: Deleted.
	* src/platformcode/pic32mx.ld: Deleted.
	* src/platformcode/pic32mx_startup.s: Deleted.
	* src/platformcode/platformcode.c: Deleted.
	* src/platformcode/platformcode.h: Deleted.
	* src/platformcode/sam4lxplained.ld: Deleted.
	* src/platformcode/startup.S: Deleted.
	* src/platformcode/startup.c: Deleted.
	* src/platformcode/stm32f05_flash.ld: Deleted.
	* src/platformcode/stm32vl_flash.ld: Deleted.

2014-12-23  James Pallister  <james.pallister@bristol.ac.uk>
	Added support for the stm32l0discovery board, with cortex-m0+

	* config/arm/boards/stm32l0discovery/board.cfg: Board config for
	    stm32l0discovery
	* config/arm/boards/stm32l0discovery/boardsupport.c: Board support for
	    stm32l0discovery
	* config/arm/boards/stm32l0discovery/calibration: Calibration for
	    stm32l0discovery
	* config/arm/chips/stm32l053/chip.cfg: Chip configuration for
	    stm32l053
	* config/arm/chips/stm32l053/chip.ld: Linker script for stm32l053
	* config/arm/chips/stm32l053/chipsupport.c: Chip support for stm32l053
	* config/arm/chips/stm32l053/chipsupport.h: Chip support for stm32l053

2014-12-11  James Pallister  <james.pallister@bristol.ac.uk>
	Fix output validation for dijkstra

	* src/dijkstra/dijkstra_small.c: output_count needs to be
	    reinitialised for each call to benchmark.

2014-12-11  James Pallister  <james.pallister@bristol.ac.uk>
	Fix scaling for blowfish

	* src/blowfish/bf.c: Remove scaling from inside the benchmark function
	    (performed in main)

2014-12-11  James Pallister  <james.pallister@bristol.ac.uk>
	Enabled the calibration to accept a wider range of values

	* include/support.h: If the calibration factor is negative, scale up
	    the repeat factor

2014-10-03  James Pallister  <james.pallister@bristol.ac.uk>
	Added a calibration file for the STM32VLDISCOVERY benchmarks

	* config/arm/boards/stm32vldiscovery/calibration: Benchmark
	    calibrations for STM32VLDISCOVERY board

2014-09-24  James Pallister  <james.pallister@bristol.ac.uk>
	Added calibration values for stm32f0discovery

	* config/arm/boards/stm32f0discovery/calibration: Calibration file for
	    stm32f0discovery

2014-09-23  James Pallister  <james.pallister@bristol.ac.uk>
	Moved every main function to a single file. Added the ability for a
	benchmark initialisation function. Main and initialise_benchmark are
	weakly linked so that individual benchmarks can override them if
	necessary.

	* doc/beebs.info: Regenerated
	* doc/beebs.texi: Updated documentation to add a section on benchmarks
	* doc/version.texi: Regenerated
	* src/2dfir/Makefile.in: Regenerated
	* src/2dfir/fir2dim.c: Removed main function
	* src/adpcm/Makefile.in: Regenerated
	* src/adpcm/adpcm.c: Removed main function
	* src/aha-compress/Makefile.in: Regenerated
	* src/aha-compress/compress_test.c: Removed main function
	* src/aha-mont64/Makefile.in: Regenerated
	* src/aha-mont64/mont64.c: Removed main function
	* src/blowfish/Makefile.in: Regenerated
	* src/blowfish/bf.c: Removed main function
	* src/bs/Makefile.in: Regenerated
	* src/bs/bs.c: Removed main function
	* src/bubblesort/Makefile.in: Regenerated
	* src/bubblesort/bubblesort.c: Removed main function
	* src/cnt/Makefile.in: Regenerated
	* src/cnt/cnt.c: Removed main function
	* src/common.mk.am: Added main.c to platform sources so it gets
	    compiled.
	* src/compress/Makefile.in: Regenerated
	* src/compress/compress.c: Removed main function
	* src/cover/Makefile.in: Regenerated
	* src/cover/cover.c: Removed main function
	* src/crc/Makefile.in: Regenerated
	* src/crc/crc.c: Removed main function
	* src/crc32/Makefile.in: Regenerated
	* src/crc32/crc_32.c: Removed main function
	* src/ctl-stack/Makefile.in: Regenerated
	* src/ctl-string/Makefile.in: Regenerated
	* src/ctl-string/string.c: Removed main function
	* src/ctl-vector/Makefile.in: Regenerated
	* src/ctl/ctl.c: Removed main function
	* src/cubic/Makefile.in: Regenerated
	* src/cubic/basicmath_small.c: Removed main function
	* src/cubic/cubic.c: Removed main function
	* src/dhrystone/Makefile.in: Regenerated
	* src/dhrystone/dhry_1.c: Removed main function
	* src/dijkstra/Makefile.in: Regenerated
	* src/dijkstra/dijkstra_small.c: Removed main function
	* src/dtoa/Makefile.in: Regenerated
	* src/dtoa/dtoa.c: Removed main function
	* src/duff/Makefile.in: Regenerated
	* src/duff/duff.c: Removed main function
	* src/edn/Makefile.in: Regenerated
	* src/edn/edn.c: Removed main function
	* src/expint/Makefile.in: Regenerated
	* src/expint/expint.c: Removed main function
	* src/fac/Makefile.in: Regenerated
	* src/fac/fac.c: Removed main function
	* src/fasta/Makefile.in: Regenerated
	* src/fasta/fasta.c: Removed main function
	* src/fdct/Makefile.in: Regenerated
	* src/fdct/fdct.c: Removed main function
	* src/fft/Makefile.in: Regenerated
	* src/fft/fft1.c: Removed main function
	* src/fibcall/Makefile.in: Regenerated
	* src/fibcall/fibcall.c: Removed main function
	* src/fir/Makefile.in: Regenerated
	* src/fir/fir.c: Removed main function
	* src/frac/Makefile.in: Regenerated
	* src/frac/frac.c: Removed main function
	* src/huffbench/Makefile.in: Regenerated
	* src/huffbench/huffbench.c: Removed main function
	* src/insertsort/Makefile.in: Regenerated
	* src/insertsort/insertsort.c: Removed main function
	* src/janne_complex/Makefile.in: Regenerated
	* src/janne_complex/janne_complex.c: Removed main function
	* src/jfdctint/Makefile.in: Regenerated
	* src/jfdctint/jfdctint.c: Removed main function
	* src/lcdnum/Makefile.in: Regenerated
	* src/lcdnum/lcdnum.c: Removed main function
	* src/levenshtein/Makefile.in: Regenerated
	* src/levenshtein/levenshtein.c: Removed main function
	* src/lms/Makefile.in: Regenerated
	* src/lms/lms.c: Removed main function
	* src/ludcmp/Makefile.in: Regenerated
	* src/ludcmp/ludcmp.c: Removed main function
	* src/main.c: Generic main function for all the benchmarks
	* src/matmult-float/Makefile.in: Regenerated
	* src/matmult-int/Makefile.in: Regenerated
	* src/matmult/matmult.c: Removed main function
	* src/mergesort/Makefile.in: Regenerated
	* src/mergesort/mergesort.c: Removed main function
	* src/miniz/Makefile.in: Regenerated
	* src/miniz/miniz_b.c: Removed main function
	* src/minver/Makefile.in: Regenerated
	* src/minver/minver.c: Removed main function
	* src/nbody/Makefile.in: Regenerated
	* src/nbody/nbody.c: Removed main function
	* src/ndes/Makefile.in: Regenerated
	* src/ndes/ndes.c: Removed main function
	* src/nettle-arcfour/Makefile.in: Regenerated
	* src/nettle-arcfour/arcfour.c: Removed main function
	* src/nettle-cast128/Makefile.in: Regenerated
	* src/nettle-cast128/cast128.c: Removed main function
	* src/nettle-des/Makefile.in: Regenerated
	* src/nettle-des/des.c: Removed main function
	* src/nettle-md5/Makefile.in: Regenerated
	* src/nettle-md5/md5.c: Removed main function
	* src/newlib-exp/Makefile.in: Regenerated
	* src/newlib-exp/ef_exp.c: Removed main function
	* src/newlib-log/Makefile.in: Regenerated
	* src/newlib-log/ef_log.c: Removed main function
	* src/newlib-mod/Makefile.in: Regenerated
	* src/newlib-mod/ef_mod.c: Removed main function
	* src/newlib-sqrt/Makefile.in: Regenerated
	* src/newlib-sqrt/ef_sqrt.c: Removed main function
	* src/ns/Makefile.in: Regenerated
	* src/ns/ns.c: Removed main function
	* src/nsichneu/Makefile.in: Regenerated
	* src/nsichneu/nsichneu.c: Removed main function
	* src/picojpeg/Makefile.in: Regenerated
	* src/picojpeg/picojpeg_test.c: Removed main function
	* src/prime/Makefile.in: Regenerated
	* src/prime/prime.c: Removed main function
	* src/qrduino/Makefile.in: Regenerated
	* src/qrduino/qrtest.c: Removed main function
	* src/qsort/Makefile.in: Regenerated
	* src/qsort/qsort.c: Removed main function
	* src/qurt/Makefile.in: Regenerated
	* src/qurt/qurt.c: Removed main function
	* src/recursion/Makefile.in: Regenerated
	* src/recursion/recursion.c: Removed main function
	* src/rijndael/Makefile.in: Regenerated
	* src/rijndael/aesxam.c: Removed main function
	* src/select/Makefile.in: Regenerated
	* src/select/select.c: Removed main function
	* src/sglib-arraybinsearch/Makefile.in: Regenerated
	* src/sglib-arraybinsearch/arraybinsearch.c: Removed main function
	* src/sglib-arrayheapsort/Makefile.in: Regenerated
	* src/sglib-arrayquicksort/Makefile.in: Regenerated
	* src/sglib-arraysort/arraysort.c: Removed main function
	* src/sglib-dllist/Makefile.in: Regenerated
	* src/sglib-dllist/dllist.c: Removed main function
	* src/sglib-hashtable/Makefile.in: Regenerated
	* src/sglib-hashtable/hashtable.c: Removed main function
	* src/sglib-listinsertsort/Makefile.in: Regenerated
	* src/sglib-listinsertsort/listinsertsort.c: Removed main function
	* src/sglib-listsort/Makefile.in: Regenerated
	* src/sglib-listsort/listsort.c: Removed main function
	* src/sglib-queue/Makefile.in: Regenerated
	* src/sglib-queue/queue.c: Removed main function
	* src/sglib-rbtree/Makefile.in: Regenerated
	* src/sglib-rbtree/rbtree.c: Removed main function
	* src/sha/Makefile.in: Regenerated
	* src/sha/sha_driver.c: Removed main function
	* src/slre/Makefile.in: Regenerated
	* src/slre/slre.c: Removed main function
	* src/sqrt/Makefile.in: Regenerated
	* src/sqrt/sqrt.c: Removed main function
	* src/st/Makefile.in: Regenerated
	* src/st/st.c: Removed main function
	* src/statemate/Makefile.in: Regenerated
	* src/statemate/statemate.c: Removed main function
	* src/stb_perlin/Makefile.in: Regenerated
	* src/stb_perlin/stb_perlin.c: Removed main function
	* src/stringsearch1/Makefile.in: Regenerated
	* src/stringsearch1/stringsearch1.c: Removed main function
	* src/strstr/Makefile.in: Regenerated
	* src/strstr/strstr.c: Removed main function
	* src/tarai/Makefile.in: Regenerated
	* src/tarai/tarai.c: Removed main function
	* src/template/Makefile.in: Regenerated
	* src/template/template.c: Removed main function
	* src/trio-snprintf/Makefile.in: Regenerated
	* src/trio-sscanf/Makefile.in: Regenerated
	* src/trio/trio_test.c: Removed main function
	* src/ud/Makefile.in: Regenerated
	* src/ud/ud.c: Removed main function
	* src/whetstone/Makefile.in: Regenerated
	* src/whetstone/whetstone.c: Removed main function
	* src/wikisort/Makefile.in: Regenerated
	* src/wikisort/wikisort.c: Removed main function

2014-09-23  James Pallister  <james.pallister@bristol.ac.uk>
	Refactored several benchmarks to have a consistent structure. All
	benchmarks now have a main benchmark function, and similar main
	functions which just initialise the board/triggers and call the
	benchmark.

	* src/2dfir/fir2dim.c: Refactored code into a benchmark function.
	* src/blowfish/bf.c: Likewise
	* src/bs/bs.c: Likewise
	* src/compress/compress.c: Likewise
	* src/crc32/crc_32.c: Likewise
	* src/cubic/basicmath_small.c: Likewise
	* src/dhrystone/dhry_1.c: Likewise
	* src/dijkstra/dijkstra_small.c: Likewise
	* src/fasta/fasta.c: Likewise
	* src/fdct/fdct.c: Likewise
	* src/matmult/matmult.c: Likewise
	* src/nbody/nbody.c: Likewise
	* src/nettle-cast128/cast128.c: Likewise
	* src/rijndael/aesxam.c: Likewise
	* src/sha/sha_driver.c: Likewise
	* src/whetstone/whetstone.c: Likewise

2014-09-06  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/dhrystone/dhry_1.c: Add start and stop triggers.
	* src/whetstone/whetstone.c: Likewise.

2014-09-02  Andrew Burgess  <andrew.burgess@embecosm.com>
	Updates to improve documentation generation.

	* doc/texinfo.tex: Deleted.
	* doc/beebs.texi: Place line break in long title.  Update email
	address.  Remove comment about 'make check' not working.
	* doc/beebs.info: Regenerate.
	* doc/version.texi: Regenerated with recent date.
	* doc/Makefile.in: Regenerated.

2014-09-02  Andrew Burgess  <andrew.burgess@embecosm.com>
	Fix "make distcheck", include dejagnu library and clean up results
	directory.

	* Makefile.am (EXTRA_DIST): Add lib directory.
	(distclean-local): New rule, cleanup results directory.
	* Makefile.in: Regenerate.

2014-09-01  James Pallister  <james.pallister@bristol.ac.uk>
	Fix the pin triggering on stm32f100 chip

	* config/arm/chips/stm32f100/chipsupport.h: The pin initialisation was
	    broken, not setting to output correctly.

2014-08-29  James Pallister  <james.pallister@bristol.ac.uk>
	Added GPL headers to some of the benchmarks for the WCET set.

	* src/cnt/cnt.c: Added GPL header
	* src/compress/compress.c: Added GPL header
	* src/duff/duff.c: Added GPL header
	* src/edn/edn.c: Added GPL header
	* src/matmult/matmult.c: Added GPL header

2014-08-28  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/qrduino/qrtest.c: Update GPL header to correct benchmark
	name.
	* src/qrduino/ecctable.h: Add GPL header.
	* src/qrduino/qrbits.h: Add GPL header.
	* src/qrduino/qrencode.c: Add GPL header.
	* src/qrduino/qrencode.h: Add GPL header.
	* src/qrduino/qrframe.c: Add GPL header.

2014-08-28  Andrew Burgess  <andrew.burgess@embecosm.com>

	* include/support.h (benchmark): Add declaration with noinline
	attribute.
	* src/bubblesort/bubblesort.c (benchmark): Change signature to
	return an int, and do actually return an int.
	* src/cnt/cnt.c (benchmark): Likewise.
	* src/duff/duff.c (benchmark): Likewise.
	* src/expint/expint.c (benchmark): Likewise.
	* src/fac/fac.c (benchmark): Likewise.
	* src/fft/fft1.c (benchmark): Likewise.
	* src/fir/fir.c (benchmark): Likewise.
	* src/insertsort/insertsort.c (benchmark): Likewise.
	* src/jfdctint/jfdctint.c (benchmark): Likewise.
	* src/lms/lms.c (benchmark): Likewise.
	* src/ludcmp/ludcmp.c (benchmark): Likewise.
	* src/minver/minver.c (benchmark): Likewise.
	* src/ndes/ndes.c (benchmark): Likewise.
	* src/nettle-arcfour/arcfour.c (benchmark): Likewise.
	* src/nettle-cast128/cast128.c (benchmark): Likewise.
	* src/nettle-des/des.c (benchmark): Likewise.
	* src/nettle-md5/md5.c (benchmark): Likewise.
	* src/newlib-exp/ef_exp.c (benchmark): Likewise.
	* src/newlib-log/ef_log.c (benchmark): Likewise.
	* src/newlib-mod/ef_mod.c (benchmark): Likewise.
	* src/newlib-sqrt/ef_sqrt.c (benchmark): Likewise.
	* src/ns/ns.c (benchmark): Likewise.
	* src/picojpeg/picojpeg_test.c (benchmark): Likewise.
	* src/prime/prime.c (benchmark): Likewise.
	* src/qrduino/qrtest.c (benchmark): Likewise.
	* src/qsort/qsort.c (benchmark): Likewise.
	* src/qurt/qurt.c (benchmark): Likewise.
	* src/recursion/recursion.c (benchmark): Likewise.
	* src/select/select.c (benchmark): Likewise.
	* src/sqrt/sqrt.c (benchmark): Likewise.
	* src/st/st.c (benchmark): Likewise.
	* src/stringsearch1/stringsearch1.c (benchmark): Likewise.
	* src/template/template.c (benchmark): Likewise.
	* src/trio/trio_test.c (benchmark): Likewise.
	* src/ud/ud.c (benchmark): Likewise.

2014-08-28  Andrew Burgess  <andrew.burgess@embecosm.com>

	* config/arm/chips/stm32f051/chip.ld: Add __end__ symbol.
	* config/arm/chips/stm32f100/chip.ld: Add __end__ symbol.

2014-08-28  Andrew Burgess  <andrew.burgess@embecosm.com>

	* config/avr/chips/atmega328p/chip.cfg (EXCLUDED_BENCHMARKS):
	Update list.

2014-08-23  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/ctl-string/string.c (benchmark): Initialise cnt.
	* src/dtoa/dtoa.c (strtod): Initialise rv0.
	* src/expint/expint.c (expint): Initialise ans.
	* src/frac/frac.c (benchmark): Initialise n.
	* src/ludcmp/ludcmp.c (a, b, x): Increase array sizes to guard
	agains out of bounds accesses.  This is a work around rather than
	a fix.
	* src/miniz/Makefile.am: Add -fno-strict-aliasing CFLAG.
	* src/miniz/Makefile.in: Regenerate.
	* src/minver/minver.c (minver): Initialise r, t, w, and s.
	* src/rijndael/Makefile.am: Add -fno-strict-aliasing CFLAG.
	* src/rijndael/Makefile.in: Regenerate.
	* src/sglib-arraybinsearch/arraybinsearch.c (benchmark):
	Initialise index.
	* src/sglib-listsort/listsort.c (benchmark): Initialise cnt.
	* src/sglib-rbtree/rbtree.c (benchmark): Initialise cnt.
	* src/wikisort/wikisort.c (WikiSort): Initialise level2, levelA,
	and levelB.

2014-08-22  Andrew Burgess  <andrew.burgess@embecosm.com>

	* beebs.test/mageec-wand.exp (beebs_setup_before_all_benchmarks):
	Restore use of ENERGY_DATA environment variable to control path to
	output file.

2014-08-22  Andrew Burgess  <andrew.burgess@embecosm.com>

	* beebs.test/mageec-wand.exp (beebs_setup_before_benchmark_run):
	Rename to ...
	(beebs_setup_before_benchmark): ... this.
	(beebs_cleanup_after_benchmark_run): Rename to ...
	(beebs_cleanup_after_benchmark): ... this.
	(beebs_cleanup_after_benchmark_run): Update, use benchmark not
	filename to identify results.
	* beebs.test/perf-stat.exp (beebs_run_benchmark): Update
	parameters.  The filename is now a full path, use as such.  Use
	benchmark, not directory to identify results.
	* lib/beebs.exp (default_beebs_filter_benchmarks): Renamed to...
	(default_beebs_filter_benchmark): ...this. Rename parameters.
	(default_beebs_setup_before_benchmark): Add filename parameter.
	(default_beebs_cleanup_after_benchmark): Add filename parameter.
	(default_beebs_setup_before_benchmark_run): Deleted.
	(default_beebs_cleanup_after_benchmark_run): Deleted.
	(beebs_get_benchmark_files): Deleted.
	(default_beebs_announce): Remove directory parameter.
	(default_beebs_run_benchmark): Likewise.
	(beebs_run_all_benchmarks): Remove calls to deleted functions.
	Assume only one binary in each benchmark directory.  Update
	parameters on remaining calls.
	(beebs_restore_default_procs): Reorder procedures.  Update
	parameters.

2014-08-21  Andrew Burgess  <andrew.burgess@embecosm.com>

	* lib/beebs.exp (beebs_restore_default_procs): Restore
	beebs_run_benchmark too.

2014-08-21  Andrew Burgess  <andrew.burgess@embecosm.com>

	* beebs.test/mageec-wand.exp (beebs_cleanup_after_all_benchmarks):
	Pull in global env.
	(beebs_setup_before_benchmark_run): Likewise.

2014-08-21  Andrew Burgess  <andrew.burgess@embecosm.com>

	* beebs.test/measure.exp: Deleted.
	* beebs.test/mageec-wand.exp: New file.
	* beebs.test/perf-stat.exp: New file.
	* lib/beebs.exp: New file.
	* beebs.test/run.exp: Update to use beebs.exp support.

2014-08-21  Andrew Burgess  <andrew.burgess@embecosm.com>

	* README.md: Update for latest state of BEEBS.

2014-08-21  Andrew Burgess  <andrew.burgess@embecosm.com>

	* analysis/Makefile.am: Deleted.
	* analysis/Makefile.in: Deleted.
	* analysis/all_stats.py: Deleted.
	* analysis/cmd.arm-none-eabi: Deleted.
	* analysis/cmd.avr-unknown-none: Deleted.
	* analysis/instruction_stats.py: Deleted.
	* analysis/simulator.in: Deleted.

2014-08-21  Andrew Burgess  <andrew.burgess@embecosm.com>

	* configure.ac: Add split benchmarks to benchmark list.
	* configure: Regenerate.
	* src/ctl-stack/Makefile.am: New file.
	* src/ctl-stack/Makefile.in: New file.
	* src/ctl-vector/Makefile.am: New file.
	* src/ctl-vector/Makefile.in: New file.
	* src/ctl/Makefile.in: Removed.
	* src/ctl/Makefile.am: Removed.
	* src/matmult-float/Makefile.am: New file.
	* src/matmult-float/Makefile.in: New file.
	* src/matmult-int/Makefile.am: New file.
	* src/matmult-int/Makefile.in: New file.
	* src/matmult/Makefile.am: Removed.
	* src/matmult/Makefile.in: Removed.
	* src/sglib-arrayheapsort/Makefile.am: New file.
	* src/sglib-arrayheapsort/Makefile.in: New file.
	* src/sglib-arrayquicksort/Makefile.am: New file.
	* src/sglib-arrayquicksort/Makefile.in: New file.
	* src/sglib-arraysort/Makefile.in: Removed.
	* src/sglib-arraysort/Makefile.am: Removed.
	* src/trio-snprintf/Makefile.am: New file.
	* src/trio-snprintf/Makefile.in: New file.
	* src/trio-sscanf/Makefile.am: New file.
	* src/trio-sscanf/Makefile.in: New file.
	* src/trio/Makefile.in: Removed.
	* src/trio/Makefile.am: Removed.

2014-08-18  James Pallister  <james.pallister@bristol.ac.uk>

	Cast the signed char strings to unsigned char to prevent
	warnings with newlib's ctype.h

	* src/ctl-string/string.c: Cast the string to unsigned char.
	* src/slre/slre.c: Cast to unsigned char.

2014-08-14  Andrew Burgess  <andrew.burgess@embecosm.com>

	* analysis/all_stats.py: Add GPL header.
	* analysis/instruction_stats.py: Add GPL header.
	* analysis/simulator.in: Add GPL header.
	* tools/energytool.py: Add GPL header.

2014-08-14  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/common.mk.in: Deleted.

2014-08-14  Andrew Burgess  <andrew.burgess@embecosm.com>

	* config/x86_64/chips/generic/chipsupport.c: New file.
	* src/common.mk.am: Add support.h as a source file.
	* src/miniz/Makefile.am: Add miniz.h as a source file.
	* src/qrduino/Makefile.am: Remove exxtable.h, and add ecctable.h
	qrbits.h to the source file list.
	* src/sglib-rbtree/Makefile.am: Add sglib.h as a source file.
	* src/2dfir/Makefile.in: Regenerate.
	* src/adpcm/Makefile.in: Regenerate.
	* src/aha-compress/Makefile.in: Regenerate.
	* src/aha-mont64/Makefile.in: Regenerate.
	* src/blowfish/Makefile.in: Regenerate.
	* src/bs/Makefile.in: Regenerate.
	* src/bubblesort/Makefile.in: Regenerate.
	* src/cnt/Makefile.in: Regenerate.
	* src/compress/Makefile.in: Regenerate.
	* src/cover/Makefile.in: Regenerate.
	* src/crc/Makefile.in: Regenerate.
	* src/crc32/Makefile.in: Regenerate.
	* src/ctl-string/Makefile.in: Regenerate.
	* src/ctl/Makefile.in: Regenerate.
	* src/cubic/Makefile.in: Regenerate.
	* src/dhrystone/Makefile.in: Regenerate.
	* src/dijkstra/Makefile.in: Regenerate.
	* src/dtoa/Makefile.in: Regenerate.
	* src/duff/Makefile.in: Regenerate.
	* src/edn/Makefile.in: Regenerate.
	* src/expint/Makefile.in: Regenerate.
	* src/fac/Makefile.in: Regenerate.
	* src/fasta/Makefile.in: Regenerate.
	* src/fdct/Makefile.in: Regenerate.
	* src/fft/Makefile.in: Regenerate.
	* src/fibcall/Makefile.in: Regenerate.
	* src/fir/Makefile.in: Regenerate.
	* src/frac/Makefile.in: Regenerate.
	* src/huffbench/Makefile.in: Regenerate.
	* src/insertsort/Makefile.in: Regenerate.
	* src/janne_complex/Makefile.in: Regenerate.
	* src/jfdctint/Makefile.in: Regenerate.
	* src/lcdnum/Makefile.in: Regenerate.
	* src/levenshtein/Makefile.in: Regenerate.
	* src/lms/Makefile.in: Regenerate.
	* src/ludcmp/Makefile.in: Regenerate.
	* src/matmult/Makefile.in: Regenerate.
	* src/mergesort/Makefile.in: Regenerate.
	* src/miniz/Makefile.in: Regenerate.
	* src/minver/Makefile.in: Regenerate.
	* src/nbody/Makefile.in: Regenerate.
	* src/ndes/Makefile.in: Regenerate.
	* src/nettle-arcfour/Makefile.in: Regenerate.
	* src/nettle-cast128/Makefile.in: Regenerate.
	* src/nettle-des/Makefile.in: Regenerate.
	* src/nettle-md5/Makefile.in: Regenerate.
	* src/newlib-exp/Makefile.in: Regenerate.
	* src/newlib-log/Makefile.in: Regenerate.
	* src/newlib-mod/Makefile.in: Regenerate.
	* src/newlib-sqrt/Makefile.in: Regenerate.
	* src/ns/Makefile.in: Regenerate.
	* src/nsichneu/Makefile.in: Regenerate.
	* src/picojpeg/Makefile.in: Regenerate.
	* src/prime/Makefile.in: Regenerate.
	* src/qrduino/Makefile.in: Regenerate.
	* src/qsort/Makefile.in: Regenerate.
	* src/qurt/Makefile.in: Regenerate.
	* src/recursion/Makefile.in: Regenerate.
	* src/rijndael/Makefile.in: Regenerate.
	* src/select/Makefile.in: Regenerate.
	* src/sglib-arraybinsearch/Makefile.in: Regenerate.
	* src/sglib-arraysort/Makefile.in: Regenerate.
	* src/sglib-dllist/Makefile.in: Regenerate.
	* src/sglib-hashtable/Makefile.in: Regenerate.
	* src/sglib-listinsertsort/Makefile.in: Regenerate.
	* src/sglib-listsort/Makefile.in: Regenerate.
	* src/sglib-queue/Makefile.in: Regenerate.
	* src/sglib-rbtree/Makefile.in: Regenerate.
	* src/sha/Makefile.in: Regenerate.
	* src/slre/Makefile.in: Regenerate.
	* src/sqrt/Makefile.in: Regenerate.
	* src/st/Makefile.in: Regenerate.
	* src/statemate/Makefile.in: Regenerate.
	* src/stb_perlin/Makefile.in: Regenerate.
	* src/stringsearch1/Makefile.in: Regenerate.
	* src/strstr/Makefile.in: Regenerate.
	* src/tarai/Makefile.in: Regenerate.
	* src/template/Makefile.in: Regenerate.
	* src/trio/Makefile.in: Regenerate.
	* src/ud/Makefile.in: Regenerate.
	* src/whetstone/Makefile.in: Regenerate.
	* src/wikisort/Makefile.in: Regenerate.

2014-08-14  Andrew Burgess  <andrew.burgess@embecosm.com>

	* tools/generate-benchmark.sh: Remove duplicate word 'Suite' in
	two places.
	* src/common.mk.am: Remove duplicate word 'Suite'.
	* src/common.mk.in: Regenerate.
	* src/2dfir/Makefile.in: Regenerate.
	* src/adpcm/Makefile.in: Regenerate.
	* src/aha-compress/Makefile.in: Regenerate.
	* src/aha-mont64/Makefile.in: Regenerate.
	* src/blowfish/Makefile.in: Regenerate.
	* src/bs/Makefile.in: Regenerate.
	* src/bubblesort/Makefile.in: Regenerate.
	* src/cnt/Makefile.in: Regenerate.
	* src/common.mk.am: Regenerate.
	* src/common.mk.in: Regenerate.
	* src/compress/Makefile.in: Regenerate.
	* src/cover/Makefile.in: Regenerate.
	* src/crc/Makefile.in: Regenerate.
	* src/crc32/Makefile.in: Regenerate.
	* src/ctl-string/Makefile.in: Regenerate.
	* src/ctl/Makefile.in: Regenerate.
	* src/cubic/Makefile.in: Regenerate.
	* src/dhrystone/Makefile.in: Regenerate.
	* src/dijkstra/Makefile.in: Regenerate.
	* src/dtoa/Makefile.in: Regenerate.
	* src/duff/Makefile.in: Regenerate.
	* src/edn/Makefile.in: Regenerate.
	* src/expint/Makefile.in: Regenerate.
	* src/fac/Makefile.in: Regenerate.
	* src/fasta/Makefile.in: Regenerate.
	* src/fdct/Makefile.in: Regenerate.
	* src/fft/Makefile.in: Regenerate.
	* src/fibcall/Makefile.in: Regenerate.
	* src/fir/Makefile.in: Regenerate.
	* src/frac/Makefile.in: Regenerate.
	* src/huffbench/Makefile.in: Regenerate.
	* src/insertsort/Makefile.in: Regenerate.
	* src/janne_complex/Makefile.in: Regenerate.
	* src/jfdctint/Makefile.in: Regenerate.
	* src/lcdnum/Makefile.in: Regenerate.
	* src/levenshtein/Makefile.in: Regenerate.
	* src/lms/Makefile.in: Regenerate.
	* src/ludcmp/Makefile.in: Regenerate.
	* src/matmult/Makefile.in: Regenerate.
	* src/mergesort/Makefile.in: Regenerate.
	* src/miniz/Makefile.in: Regenerate.
	* src/minver/Makefile.in: Regenerate.
	* src/nbody/Makefile.in: Regenerate.
	* src/ndes/Makefile.in: Regenerate.
	* src/nettle-arcfour/Makefile.in: Regenerate.
	* src/nettle-cast128/Makefile.in: Regenerate.
	* src/nettle-des/Makefile.in: Regenerate.
	* src/nettle-md5/Makefile.in: Regenerate.
	* src/newlib-exp/Makefile.in: Regenerate.
	* src/newlib-log/Makefile.in: Regenerate.
	* src/newlib-mod/Makefile.in: Regenerate.
	* src/newlib-sqrt/Makefile.in: Regenerate.
	* src/ns/Makefile.in: Regenerate.
	* src/nsichneu/Makefile.in: Regenerate.
	* src/picojpeg/Makefile.in: Regenerate.
	* src/prime/Makefile.in: Regenerate.
	* src/qrduino/Makefile.in: Regenerate.
	* src/qsort/Makefile.in: Regenerate.
	* src/qurt/Makefile.in: Regenerate.
	* src/recursion/Makefile.in: Regenerate.
	* src/rijndael/Makefile.in: Regenerate.
	* src/select/Makefile.in: Regenerate.
	* src/sglib-arraybinsearch/Makefile.in: Regenerate.
	* src/sglib-arraysort/Makefile.in: Regenerate.
	* src/sglib-dllist/Makefile.in: Regenerate.
	* src/sglib-hashtable/Makefile.in: Regenerate.
	* src/sglib-listinsertsort/Makefile.in: Regenerate.
	* src/sglib-listsort/Makefile.in: Regenerate.
	* src/sglib-queue/Makefile.in: Regenerate.
	* src/sglib-rbtree/Makefile.in: Regenerate.
	* src/sha/Makefile.in: Regenerate.
	* src/slre/Makefile.in: Regenerate.
	* src/sqrt/Makefile.in: Regenerate.
	* src/st/Makefile.in: Regenerate.
	* src/statemate/Makefile.in: Regenerate.
	* src/stb_perlin/Makefile.in: Regenerate.
	* src/stringsearch1/Makefile.in: Regenerate.
	* src/strstr/Makefile.in: Regenerate.
	* src/tarai/Makefile.in: Regenerate.
	* src/template/Makefile.in: Regenerate.
	* src/trio/Makefile.in: Regenerate.
	* src/ud/Makefile.in: Regenerate.
	* src/whetstone/Makefile.in: Regenerate.
	* src/wikisort/Makefile.in: Regenerate.

2014-08-14  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/rijndael/LICENSE: Removed.
	* src/rijndael/Makefile.am: Remove reference to LICENCE file.
	* src/rijndael/Makefile.in: Regenerate.
	* src/rijndael/aes.c: Add GPL header.
	* src/rijndael/aes.h: Add GPL header.
	* src/rijndael/aestab.h: Add GPL header.
	* src/rijndael/aesxam.c: Add GPL header.

2014-08-13  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/nbody/nbody.c: Add GPL header, and original licence and
	copyright information.

2014-08-13  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/fasta/fasta.c: Add GPL header, and original licence and
	copyright information.

2014-08-13  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/trio/trio.c: Add GPL header.
	* src/trio/trio.h: Add GPL header.
	* src/trio/triodef.h: Add GPL header.
	* src/trio/triop.h: Add GPL header.
	* src/trio/triostr.c: Add GPL header.
	* src/trio/triostr.h: Add GPL header.

2014-08-13  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/cubic/LICENCE: Removed.
	* src/cubic/Makefile.am (EXTRA_DIST): Removed.
	* src/cubic/Makefile.in: Regenerate.

2014-08-12  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/cubic/basicmath_small.c: Add GPL header.
	* src/cubic/cubic.c: Add GPL header.
	* src/cubic/pi.h: Add GPL header.
	* src/cubic/snipmath.h: Add GPL header.
	* src/cubic/sniptype.h: Add GPL header.

2014-08-12  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/compress/compress.c (main): Use SCALE_FACTOR not
	REPEAT_FACTOR.

2014-08-12  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/platformcode/msp430.s: Add GPL header.
	* src/platformcode/pic32mx.ld: Add GPL header.
	* src/platformcode/pic32mx_startup.s: Add GPL header.
	* src/platformcode/platformcode.h: Add GPL header.
	* src/platformcode/sam4lxplained.ld: Add GPL header.
	* src/platformcode/startup.S: Add GPL header.
	* src/platformcode/startup.c: Add GPL header.
	* src/platformcode/stm32f05_flash.ld: Add GPL header.
	* src/platformcode/stm32vl_flash.ld: Add GPL header.

2014-08-12  Andrew Burgess  <andrew.burgess@embecosm.com>

	* Makefile.am: Remove duplicate 'Suite' in header comment.
	* analysis/Makefile.am: Likewise.
	* src/2dfir/Makefile.am: Likewise.
	* src/adpcm/Makefile.am: Likewise.
	* src/aha-compress/Makefile.am: Likewise.
	* src/aha-mont64/Makefile.am: Likewise.
	* src/bs/Makefile.am: Likewise.
	* src/bubblesort/Makefile.am: Likewise.
	* src/cnt/Makefile.am: Likewise.
	* src/compress/Makefile.am: Likewise.
	* src/cover/Makefile.am: Likewise.
	* src/crc/Makefile.am: Likewise.
	* src/ctl-string/Makefile.am: Likewise.
	* src/ctl/Makefile.am: Likewise.
	* src/dhrystone/Makefile.am: Likewise.
	* src/dtoa/Makefile.am: Likewise.
	* src/duff/Makefile.am: Likewise.
	* src/edn/Makefile.am: Likewise.
	* src/expint/Makefile.am: Likewise.
	* src/fac/Makefile.am: Likewise.
	* src/fasta/Makefile.am: Likewise.
	* src/fdct/Makefile.am: Likewise.
	* src/fft/Makefile.am: Likewise.
	* src/fibcall/Makefile.am: Likewise.
	* src/fir/Makefile.am: Likewise.
	* src/frac/Makefile.am: Likewise.
	* src/huffbench/Makefile.am: Likewise.
	* src/insertsort/Makefile.am: Likewise.
	* src/janne_complex/Makefile.am: Likewise.
	* src/jfdctint/Makefile.am: Likewise.
	* src/lcdnum/Makefile.am: Likewise.
	* src/levenshtein/Makefile.am: Likewise.
	* src/lms/Makefile.am: Likewise.
	* src/ludcmp/Makefile.am: Likewise.
	* src/matmult/Makefile.am: Likewise.
	* src/mergesort/Makefile.am: Likewise.
	* src/miniz/Makefile.am: Likewise.
	* src/minver/Makefile.am: Likewise.
	* src/nbody/Makefile.am: Likewise.
	* src/ndes/Makefile.am: Likewise.
	* src/nettle-arcfour/Makefile.am: Likewise.
	* src/nettle-cast128/Makefile.am: Likewise.
	* src/nettle-des/Makefile.am: Likewise.
	* src/nettle-md5/Makefile.am: Likewise.
	* src/newlib-exp/Makefile.am: Likewise.
	* src/newlib-log/Makefile.am: Likewise.
	* src/newlib-mod/Makefile.am: Likewise.
	* src/newlib-sqrt/Makefile.am: Likewise.
	* src/ns/Makefile.am: Likewise.
	* src/nsichneu/Makefile.am: Likewise.
	* src/picojpeg/Makefile.am: Likewise.
	* src/platformcode/Makefile.am: Likewise.
	* src/prime/Makefile.am: Likewise.
	* src/qrduino/Makefile.am: Likewise.
	* src/qsort/Makefile.am: Likewise.
	* src/qurt/Makefile.am: Likewise.
	* src/recursion/Makefile.am: Likewise.
	* src/select/Makefile.am: Likewise.
	* src/sglib-arraybinsearch/Makefile.am: Likewise.
	* src/sglib-arraysort/Makefile.am: Likewise.
	* src/sglib-dllist/Makefile.am: Likewise.
	* src/sglib-hashtable/Makefile.am: Likewise.
	* src/sglib-listinsertsort/Makefile.am: Likewise.
	* src/sglib-listsort/Makefile.am: Likewise.
	* src/sglib-queue/Makefile.am: Likewise.
	* src/sglib-rbtree/Makefile.am: Likewise.
	* src/slre/Makefile.am: Likewise.
	* src/sqrt/Makefile.am: Likewise.
	* src/st/Makefile.am: Likewise.
	* src/statemate/Makefile.am: Likewise.
	* src/stb_perlin/Makefile.am: Likewise.
	* src/stringsearch1/Makefile.am: Likewise.
	* src/strstr/Makefile.am: Likewise.
	* src/tarai/Makefile.am: Likewise.
	* src/template/Makefile.am: Likewise.
	* src/trio/Makefile.am: Likewise.
	* src/ud/Makefile.am: Likewise.
	* src/whetstone/Makefile.am: Likewise.
	* src/wikisort/Makefile.am: Likewise.
	* Makefile.in: Regenerate.
	* src/2dfir/Makefile.in: Regenerate.
	* src/adpcm/Makefile.in: Regenerate.
	* src/aha-compress/Makefile.in: Regenerate.
	* src/aha-mont64/Makefile.in: Regenerate.
	* src/bs/Makefile.in: Regenerate.
	* src/bubblesort/Makefile.in: Regenerate.
	* src/cnt/Makefile.in: Regenerate.
	* src/compress/Makefile.in: Regenerate.
	* src/cover/Makefile.in: Regenerate.
	* src/crc/Makefile.in: Regenerate.
	* src/ctl-string/Makefile.in: Regenerate.
	* src/ctl/Makefile.in: Regenerate.
	* src/dhrystone/Makefile.in: Regenerate.
	* src/dtoa/Makefile.in: Regenerate.
	* src/duff/Makefile.in: Regenerate.
	* src/edn/Makefile.in: Regenerate.
	* src/expint/Makefile.in: Regenerate.
	* src/fac/Makefile.in: Regenerate.
	* src/fasta/Makefile.in: Regenerate.
	* src/fdct/Makefile.in: Regenerate.
	* src/fft/Makefile.in: Regenerate.
	* src/fibcall/Makefile.in: Regenerate.
	* src/fir/Makefile.in: Regenerate.
	* src/frac/Makefile.in: Regenerate.
	* src/huffbench/Makefile.in: Regenerate.
	* src/insertsort/Makefile.in: Regenerate.
	* src/janne_complex/Makefile.in: Regenerate.
	* src/jfdctint/Makefile.in: Regenerate.
	* src/lcdnum/Makefile.in: Regenerate.
	* src/levenshtein/Makefile.in: Regenerate.
	* src/lms/Makefile.in: Regenerate.
	* src/ludcmp/Makefile.in: Regenerate.
	* src/matmult/Makefile.in: Regenerate.
	* src/mergesort/Makefile.in: Regenerate.
	* src/miniz/Makefile.in: Regenerate.
	* src/minver/Makefile.in: Regenerate.
	* src/nbody/Makefile.in: Regenerate.
	* src/ndes/Makefile.in: Regenerate.
	* src/nettle-arcfour/Makefile.in: Regenerate.
	* src/nettle-cast128/Makefile.in: Regenerate.
	* src/nettle-des/Makefile.in: Regenerate.
	* src/nettle-md5/Makefile.in: Regenerate.
	* src/newlib-exp/Makefile.in: Regenerate.
	* src/newlib-log/Makefile.in: Regenerate.
	* src/newlib-mod/Makefile.in: Regenerate.
	* src/newlib-sqrt/Makefile.in: Regenerate.
	* src/ns/Makefile.in: Regenerate.
	* src/nsichneu/Makefile.in: Regenerate.
	* src/picojpeg/Makefile.in: Regenerate.
	* src/platformcode/Makefile.in: Regenerate.
	* src/prime/Makefile.in: Regenerate.
	* src/qrduino/Makefile.in: Regenerate.
	* src/qsort/Makefile.in: Regenerate.
	* src/qurt/Makefile.in: Regenerate.
	* src/recursion/Makefile.in: Regenerate.
	* src/select/Makefile.in: Regenerate.
	* src/sglib-arraybinsearch/Makefile.in: Regenerate.
	* src/sglib-arraysort/Makefile.in: Regenerate.
	* src/sglib-dllist/Makefile.in: Regenerate.
	* src/sglib-hashtable/Makefile.in: Regenerate.
	* src/sglib-listinsertsort/Makefile.in: Regenerate.
	* src/sglib-listsort/Makefile.in: Regenerate.
	* src/sglib-queue/Makefile.in: Regenerate.
	* src/sglib-rbtree/Makefile.in: Regenerate.
	* src/slre/Makefile.in: Regenerate.
	* src/sqrt/Makefile.in: Regenerate.
	* src/st/Makefile.in: Regenerate.
	* src/statemate/Makefile.in: Regenerate.
	* src/stb_perlin/Makefile.in: Regenerate.
	* src/stringsearch1/Makefile.in: Regenerate.
	* src/strstr/Makefile.in: Regenerate.
	* src/tarai/Makefile.in: Regenerate.
	* src/template/Makefile.in: Regenerate.
	* src/trio/Makefile.in: Regenerate.
	* src/ud/Makefile.in: Regenerate.
	* src/whetstone/Makefile.in: Regenerate.
	* src/wikisort/Makefile.in: Regenerate.

2014-08-11  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/sglib-arraybinsearch/sglib.h: Add GPL header.
	* src/sglib-arraysort/sglib.h: Add GPL header.
	* src/sglib-dllist/sglib.h: Add GPL header.
	* src/sglib-hashtable/sglib.h: Add GPL header.
	* src/sglib-listinsertsort/sglib.h: Add GPL header.
	* src/sglib-listsort/sglib.h: Add GPL header.
	* src/sglib-queue/sglib.h: Add GPL header.
	* src/sglib-rbtree/sglib.h: Add GPL header.

2014-08-11  Andrew Burgess  <andrew.burgess@embecosm.com>

	* configure.ac: Remove sglib-arraysort1.
	* configure: Regenerate.
	* src/sglib-arraysort/Makefile.am: Add support for quick sort and
	heap sort variants.
	* src/sglib-arraysort/Makefile.in: Regenerate.
	* src/sglib-arraysort/arraysort.c (benchmark): Add quick sort and
	heap sort variants.
	* src/sglib-arraysort/sglib.h (SGLIB___ARRAY_HEAP_DOWN): Remove
	unused variable _t_.
	* src/sglib-arraysort1/Makefile.am: Removed.
	* src/sglib-arraysort1/arraysort1.c: Removed.
	* src/sglib-arraysort1/sglib.h: Removed.
	* src/sglib-arraysort1/Makefile.in: Removed.

2014-08-11  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/dijkstra/Makefile.in: Regenerate after commit 64e1ea3.

2014-08-11  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/picojpeg/picojpeg.c: Add GPL header.
	* src/picojpeg/picojpeg.h: Add GPL header.

2014-08-11  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/nettle-des/keymap.h: Add GPL header.
	* src/nettle-des/rotors.h: Add GPL header.

2014-08-11  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/miniz/miniz.c: Add GPL header.
	* src/miniz/miniz.h: Add GPL header.

2014-08-11  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/dijkstra/LICENSE: Removed.
	* src/dijkstra/Makefile.am: Remove reference to LICENCE file.
	* src/dijkstra/dijkstra_small.c: Add GPL header, and copy in the
	original contents of the LICENCE file.

2014-08-11  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/bs/bs.c: Add GPL header.

2014-08-11  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/ctl/ctl.h: Add GPL header.
	* src/ctl/stack.h: Add GPL header.
	* src/ctl/vector.h: Add GPL header.

2014-08-11  Andrew Burgess  <andrew.burgess@embecosm.com>

	* configure.ac: Remove ctl-stack and ctl-vector, add ctl.
	* configure: Regenerate.
	* src/ctl-stack/Makefile.am: Remove.
	* src/ctl-stack/Makefile.in: Remove.
	* src/ctl-stack/ctl.h: Remove.
	* src/ctl-stack/stack.c: Remove.
	* src/ctl-vector/Makefile.am: Remove.
	* src/ctl-vector/Makefile.in: Remove.
	* src/ctl-vector/vector.c: Remove.
	* src/ctl-vector/ctl.h: Move to src/ctl/ctl.h.
	* src/ctl-stack/stack.h: Move to src/ctl/stack.h.
	* src/ctl-vector/vector.h: Move to src/ctl/vector.h.
	* src/ctl/Makefile.am: New file.
	* src/ctl/Makefile.in: Generated.
	* src/ctl/ctl.c New file, merging old stack.c and vector.c.
	* src/ctl/ctl.h: Moved from src/ctl-vector/ctl.h.
	* src/ctl/stack.h: Moved from src/ctl-vector/stack.h.
	* src/ctl/vector.h: Moved from src/ctl-vector/vector.h.

2014-08-11  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/crc32/LICENSE: Removed.
	* src/crc32/crc.h: Removed.
	* src/crc32/crc_32.c: Add licence information originally from
	LICENCE, add a GPL header.  Add in contents of header file.
	(updateCRC32): Remove, unused.
	* src/crc32/Makefile.am: Remove crc.h and LICENCE references.
	* src/crc32/Makefile.in: Regenerate.

2014-08-08  Andrew Burgess  <andrew.burgess@embecosm.com>

	* configure.ac: Remove all the gdb-* tests.
	* configure: Regenerate.
	* src/gdb-advance/Makefile.am: Deleted.
	* src/gdb-advance/Makefile.in: Deleted.
	* src/gdb-advance/advance.c: Deleted.
	* src/gdb-all-types/Makefile.am: Deleted.
	* src/gdb-all-types/Makefile.in: Deleted.
	* src/gdb-all-types/all-types.c: Deleted.
	* src/gdb-anon/Makefile.am: Deleted.
	* src/gdb-anon/Makefile.in: Deleted.
	* src/gdb-anon/anon.c: Deleted.
	* src/gdb-arrayidx/Makefile.am: Deleted.
	* src/gdb-arrayidx/Makefile.in: Deleted.
	* src/gdb-arrayidx/arrayidx.c: Deleted.
	* src/gdb-async/Makefile.am: Deleted.
	* src/gdb-async/Makefile.in: Deleted.
	* src/gdb-async/async.c: Deleted.
	* src/gdb-auxv/Makefile.am: Deleted.
	* src/gdb-auxv/Makefile.in: Deleted.
	* src/gdb-auxv/auxv.c: Deleted.
	* src/gdb-bitfields/Makefile.am: Deleted.
	* src/gdb-bitfields/Makefile.in: Deleted.
	* src/gdb-bitfields/bitfields.c: Deleted.
	* src/gdb-constvars/Makefile.am: Deleted.
	* src/gdb-constvars/Makefile.in: Deleted.
	* src/gdb-constvars/constvars.c: Deleted.
	* src/gdb-store/Makefile.am: Deleted.
	* src/gdb-store/Makefile.in: Deleted.
	* src/gdb-store/store.c: Deleted.

2014-08-08  Andrew Burgess  <andrew.burgess@embecosm.com>

	* configure.ac: Remove sglib-listinsertsort1.
	* configure: Regenerate.
	* src/sglib-listinsertsort/Makefile.am: Remove general automake
	HOWTO comment.
	* src/sglib-listinsertsort/Makefile.in: Regenerate.
	* src/sglib-listinsertsort/listinsertsort.c: Copied from old
	listinsertsort1.
	* src/sglib-listinsertsort/sglib.h (SGLIB_LIST_LEN): Remove
	declaraion of _ce_.
	* src/sglib-listinsertsort1/Makefile.am: Removed.
	* src/sglib-listinsertsort1/Makefile.in: Removed.
	* src/sglib-listinsertsort1/listinsertsort1.c: Removed.
	* src/sglib-listinsertsort1/sglib.h: Removed.

2014-08-08  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/bubblesort/Makefile.am: Remove bubblesort_quick test.
	* src/bubblesort/Makefile.in: Regenerate.
	* src/bubblesort/bubblesort.c (BUBBLESORT_RSHIFT): Remove.
	(SCALE_FACTOR): No longer rely on BUBBLESORT_RSHIFT.

2014-08-08  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/fasta/fasta.c (SCALE_FACTOR): Whitespace fixes.

2014-08-08  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/cubic/basicmath_small.c (SCALE_FACTOR): Remove the +1.

2014-08-08  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/bubblesort/bubblesort.c: Remove stdio.h include.

2014-08-07  Andrew Burgess  <andrew.burgess@embecosm.com>

	* configure.ac: Remove int_matmult and float_matmult, add matmult.
	* configure: Regenerate.
	* src/float_matmult/Makefile.in: Removed.
	* src/float_matmult/matmult.c: Removed.
	* src/float_matmult/Makefile.am: Removed.
	* src/int_matmult/Makefile.am: Removed.
	* src/int_matmult/Makefile.in: Removed.
	* src/int_matmult/matmult.c: Removed.
	* src/matmult/Makefile.am: New file.
	* src/matmult/Makefile.in: New file.
	* src/matmult/matmult.c: New file.

2014-08-07  Andrew Burgess  <andrew.burgess@embecosm.com>

	* 2dfir/fir2dim.c (SCALE_FACTOR): Added.
	(main) Switch to use SCALE_FACTOR.
	* blowfish/bf.c: Likewise.
	* crc32/crc_32.c: Likewise.
	* cubic/basicmath_small.c: Likewise.
	* dijkstra/dijkstra_small.c: Likewise.
	* fdct/fdct.c: Likewise.
	* float_matmult/matmult.c: Likewise.
	* int_matmult/matmult.c: Likewise.
	* rijndael/aesxam.c: Likewise.
	* sha/sha_driver.c: Likewise.

2014-08-07  James Pallister  <james.pallister@bristol.ac.uk>
	The flags defined in trio's enum overflow on 16 bit
	architectures. At the point of overflow, convert to unsigned long
	so we don't overflow

	* src/trio/trio.c: Added UL suffix to the multiplicand

2014-08-06  Andrew Burgess  <andrew.burgess@embecosm.com>

	* configure.ac: Add -Wno-portability to the automake options.

2014-08-06  Andrew Burgess  <andrew.burgess@embecosm.com>

	* configure.ac: Remove trio-sscanf and trio-snprintf, add trio.
	* configure: Regenerate.
	* src/trio/Makefile.am: New file.
	* src/trio/Makefile.in: Generated.
	* src/trio/trio_test.c: New file based on merging the old versions
	from src/trio-snprintf/ and src/trio-sscanf/.
	* src/trio/trio.c: New file is identical to old versions in
	src/trio-snprintf/ and src/trio-sscanf/.
	* src/trio/trio.h: Likewise.
	* src/trio/triodef.h: Likewise.
	* src/trio/triop.h: Likewise.
	* src/trio/triostr.c: Likewise.
	* src/trio/triostr.h: Likewise.
	* src/trio-snprintf/Makefile.am: Deleted.
	* src/trio-snprintf/Makefile.in: Deleted.
	* src/trio-snprintf/trio.c: Deleted.
	* src/trio-snprintf/trio.h: Deleted.
	* src/trio-snprintf/trio_test.c: Deleted.
	* src/trio-snprintf/triodef.h: Deleted.
	* src/trio-snprintf/triop.h: Deleted.
	* src/trio-snprintf/triostr.c: Deleted.
	* src/trio-snprintf/triostr.h: Deleted.
	* src/trio-sscanf/Makefile.am: Deleted.
	* src/trio-sscanf/Makefile.in: Deleted.
	* src/trio-sscanf/trio.c: Deleted.
	* src/trio-sscanf/trio.h: Deleted.
	* src/trio-sscanf/trio_test.c: Deleted.
	* src/trio-sscanf/triodef.h: Deleted.
	* src/trio-sscanf/triop.h: Deleted.
	* src/trio-sscanf/triostr.c: Deleted.
	* src/trio-sscanf/triostr.h: Deleted.

2014-08-06  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* configure.ac: Added gdb-auxv.
	* configure: Regenerated.
	* src/gdb-auxv/Makefile.am: Created.
	* src/gdb-auxv/Makefile.in: Generated.
	* src/gdb-auxv/auxv.c: Created.

2014-08-05  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/bsort100/Makefile.am: Deleted.
	* src/bsort100/Makefile.in: Deleted.
	* src/bsort100/bsort100.c: Deleted.
	* src/bubblesort/Makefile.am: Add rules for building second
	variation of bubblesort program.
	* src/bubblesort/Makefile.in: Regenerate.
	* src/bubblesort/bubblesort.c: Add GPL header.  Restructure code
	in line with old contents of bsort100.c.
	* configure.ac: Remove bsort100.
	* configure: Regenerate.

2014-08-05  Andrew Burgess  <andrew.burgess@embecosm.com>

	* beebs.test/measure.exp: Add GPL header.
	* beebs.test/run.exp: Likewise.
	* include/support.h: Likewise.
	* config/arm/boards/stm32f0discovery/boardsupport.c: Likewise.
	* config/arm/boards/stm32vldiscovery/boardsupport.c: Likewise.
	* config/arm/chips/stm32f051/chip.ld: Likewise.
	* config/arm/chips/stm32f051/chipsupport.c: Likewise.
	* config/arm/chips/stm32f051/chipsupport.h: Likewise.
	* config/arm/chips/stm32f100/chip.ld: Likewise.
	* config/arm/chips/stm32f100/chipsupport.c: Likewise.
	* config/arm/chips/stm32f100/chipsupport.h: Likewise.
	* config/avr/boards/shrimp/boardsupport.c: Likewise.
	* config/avr/boards/shrimp/calibration: Likewise.
	* config/avr/chips/atmega328p/chipsupport.h: Likewise.
	* config/default.exp: Likewise.
	* config/x86_64/boards/none/boardsupport.c: Likewise.

2014-08-05  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/common.mk.am: Expect binary names to appear at the start of
	a line in the calibration file, add '^' to the grep pattern.
	* src/2dfir/Makefile.in: Regenerate.
	* src/adpcm/Makefile.in: Regenerate.
	* src/aha-compress/Makefile.in: Regenerate.
	* src/aha-mont64/Makefile.in: Regenerate.
	* src/blowfish/Makefile.in: Regenerate.
	* src/bs/Makefile.in: Regenerate.
	* src/bsort100/Makefile.in: Regenerate.
	* src/bubblesort/Makefile.in: Regenerate.
	* src/cnt/Makefile.in: Regenerate.
	* src/common.mk.am: Regenerate.
	* src/compress/Makefile.in: Regenerate.
	* src/cover/Makefile.in: Regenerate.
	* src/crc/Makefile.in: Regenerate.
	* src/crc32/Makefile.in: Regenerate.
	* src/ctl-stack/Makefile.in: Regenerate.
	* src/ctl-string/Makefile.in: Regenerate.
	* src/ctl-vector/Makefile.in: Regenerate.
	* src/cubic/Makefile.in: Regenerate.
	* src/dhrystone/Makefile.in: Regenerate.
	* src/dijkstra/Makefile.in: Regenerate.
	* src/dtoa/Makefile.in: Regenerate.
	* src/duff/Makefile.in: Regenerate.
	* src/edn/Makefile.in: Regenerate.
	* src/expint/Makefile.in: Regenerate.
	* src/fac/Makefile.in: Regenerate.
	* src/fasta/Makefile.in: Regenerate.
	* src/fdct/Makefile.in: Regenerate.
	* src/fft/Makefile.in: Regenerate.
	* src/fibcall/Makefile.in: Regenerate.
	* src/fir/Makefile.in: Regenerate.
	* src/float_matmult/Makefile.in: Regenerate.
	* src/frac/Makefile.in: Regenerate.
	* src/gdb-advance/Makefile.in: Regenerate.
	* src/gdb-all-types/Makefile.in: Regenerate.
	* src/gdb-anon/Makefile.in: Regenerate.
	* src/gdb-arrayidx/Makefile.in: Regenerate.
	* src/gdb-async/Makefile.in: Regenerate.
	* src/gdb-bitfields/Makefile.in: Regenerate.
	* src/gdb-constvars/Makefile.in: Regenerate.
	* src/gdb-store/Makefile.in: Regenerate.
	* src/huffbench/Makefile.in: Regenerate.
	* src/insertsort/Makefile.in: Regenerate.
	* src/int_matmult/Makefile.in: Regenerate.
	* src/janne_complex/Makefile.in: Regenerate.
	* src/jfdctint/Makefile.in: Regenerate.
	* src/lcdnum/Makefile.in: Regenerate.
	* src/levenshtein/Makefile.in: Regenerate.
	* src/lms/Makefile.in: Regenerate.
	* src/ludcmp/Makefile.in: Regenerate.
	* src/mergesort/Makefile.in: Regenerate.
	* src/miniz/Makefile.in: Regenerate.
	* src/minver/Makefile.in: Regenerate.
	* src/nbody/Makefile.in: Regenerate.
	* src/ndes/Makefile.in: Regenerate.
	* src/nettle-arcfour/Makefile.in: Regenerate.
	* src/nettle-cast128/Makefile.in: Regenerate.
	* src/nettle-des/Makefile.in: Regenerate.
	* src/nettle-md5/Makefile.in: Regenerate.
	* src/newlib-exp/Makefile.in: Regenerate.
	* src/newlib-log/Makefile.in: Regenerate.
	* src/newlib-mod/Makefile.in: Regenerate.
	* src/newlib-sqrt/Makefile.in: Regenerate.
	* src/ns/Makefile.in: Regenerate.
	* src/nsichneu/Makefile.in: Regenerate.
	* src/picojpeg/Makefile.in: Regenerate.
	* src/prime/Makefile.in: Regenerate.
	* src/qrduino/Makefile.in: Regenerate.
	* src/qsort/Makefile.in: Regenerate.
	* src/qurt/Makefile.in: Regenerate.
	* src/recursion/Makefile.in: Regenerate.
	* src/rijndael/Makefile.in: Regenerate.
	* src/select/Makefile.in: Regenerate.
	* src/sglib-arraybinsearch/Makefile.in: Regenerate.
	* src/sglib-arraysort/Makefile.in: Regenerate.
	* src/sglib-arraysort1/Makefile.in: Regenerate.
	* src/sglib-dllist/Makefile.in: Regenerate.
	* src/sglib-hashtable/Makefile.in: Regenerate.
	* src/sglib-listinsertsort/Makefile.in: Regenerate.
	* src/sglib-listinsertsort1/Makefile.in: Regenerate.
	* src/sglib-listsort/Makefile.in: Regenerate.
	* src/sglib-queue/Makefile.in: Regenerate.
	* src/sglib-rbtree/Makefile.in: Regenerate.
	* src/sha/Makefile.in: Regenerate.
	* src/slre/Makefile.in: Regenerate.
	* src/sqrt/Makefile.in: Regenerate.
	* src/st/Makefile.in: Regenerate.
	* src/statemate/Makefile.in: Regenerate.
	* src/stb_perlin/Makefile.in: Regenerate.
	* src/stringsearch1/Makefile.in: Regenerate.
	* src/strstr/Makefile.in: Regenerate.
	* src/tarai/Makefile.in: Regenerate.
	* src/template/Makefile.in: Regenerate.
	* src/trio-snprintf/Makefile.in: Regenerate.
	* src/trio-sscanf/Makefile.in: Regenerate.
	* src/ud/Makefile.in: Regenerate.
	* src/whetstone/Makefile.in: Regenerate.
	* src/wikisort/Makefile.in: Regenerate.

2014-08-05  Andrew Burgess  <andrew.burgess@embecosm.com>

	* LICENCE.GPL: Removed, see COPYING instead.

2014-08-05  Simon Cook <simon.cook@embecosm.com>

	* configure.ac: Fix comparison using > to actually use -gt.
	* configure: Rengerate.

2014-08-05  Jeremy Bennett  <jeremy.bennett@embecosm.com>
	    Andrew Burgess  <andrew.burgess@embecosm.com>

	* configure.ac: Switch from AC_CANONICAL_SYSTEM to
	AC_CANONICAL_BUILD and AC_CANONICAL_HOST.
	* Makefile.in: Regenerate.
	* configure: Regenerate.
	* doc/Makefile.in: Regenerate.
	* src/2dfir/Makefile.in: Regenerate.
	* src/adpcm/Makefile.in: Regenerate.
	* src/aha-compress/Makefile.in: Regenerate.
	* src/aha-mont64/Makefile.in: Regenerate.
	* src/blowfish/Makefile.in: Regenerate.
	* src/bs/Makefile.in: Regenerate.
	* src/bsort100/Makefile.in: Regenerate.
	* src/bubblesort/Makefile.in: Regenerate.
	* src/cnt/Makefile.in: Regenerate.
	* src/compress/Makefile.in: Regenerate.
	* src/cover/Makefile.in: Regenerate.
	* src/crc/Makefile.in: Regenerate.
	* src/crc32/Makefile.in: Regenerate.
	* src/ctl-stack/Makefile.in: Regenerate.
	* src/ctl-string/Makefile.in: Regenerate.
	* src/ctl-vector/Makefile.in: Regenerate.
	* src/cubic/Makefile.in: Regenerate.
	* src/dhrystone/Makefile.in: Regenerate.
	* src/dijkstra/Makefile.in: Regenerate.
	* src/dtoa/Makefile.in: Regenerate.
	* src/duff/Makefile.in: Regenerate.
	* src/edn/Makefile.in: Regenerate.
	* src/expint/Makefile.in: Regenerate.
	* src/fac/Makefile.in: Regenerate.
	* src/fasta/Makefile.in: Regenerate.
	* src/fdct/Makefile.in: Regenerate.
	* src/fft/Makefile.in: Regenerate.
	* src/fibcall/Makefile.in: Regenerate.
	* src/fir/Makefile.in: Regenerate.
	* src/float_matmult/Makefile.in: Regenerate.
	* src/frac/Makefile.in: Regenerate.
	* src/gdb-advance/Makefile.in: Regenerate.
	* src/gdb-all-types/Makefile.in: Regenerate.
	* src/gdb-anon/Makefile.in: Regenerate.
	* src/gdb-arrayidx/Makefile.in: Regenerate.
	* src/gdb-async/Makefile.in: Regenerate.
	* src/gdb-bitfields/Makefile.in: Regenerate.
	* src/gdb-constvars/Makefile.in: Regenerate.
	* src/gdb-store/Makefile.in: Regenerate.
	* src/huffbench/Makefile.in: Regenerate.
	* src/insertsort/Makefile.in: Regenerate.
	* src/int_matmult/Makefile.in: Regenerate.
	* src/janne_complex/Makefile.in: Regenerate.
	* src/jfdctint/Makefile.in: Regenerate.
	* src/lcdnum/Makefile.in: Regenerate.
	* src/levenshtein/Makefile.in: Regenerate.
	* src/lms/Makefile.in: Regenerate.
	* src/ludcmp/Makefile.in: Regenerate.
	* src/mergesort/Makefile.in: Regenerate.
	* src/miniz/Makefile.in: Regenerate.
	* src/minver/Makefile.in: Regenerate.
	* src/nbody/Makefile.in: Regenerate.
	* src/ndes/Makefile.in: Regenerate.
	* src/nettle-arcfour/Makefile.in: Regenerate.
	* src/nettle-cast128/Makefile.in: Regenerate.
	* src/nettle-des/Makefile.in: Regenerate.
	* src/nettle-md5/Makefile.in: Regenerate.
	* src/newlib-exp/Makefile.in: Regenerate.
	* src/newlib-log/Makefile.in: Regenerate.
	* src/newlib-mod/Makefile.in: Regenerate.
	* src/newlib-sqrt/Makefile.in: Regenerate.
	* src/ns/Makefile.in: Regenerate.
	* src/nsichneu/Makefile.in: Regenerate.
	* src/picojpeg/Makefile.in: Regenerate.
	* src/prime/Makefile.in: Regenerate.
	* src/qrduino/Makefile.in: Regenerate.
	* src/qsort/Makefile.in: Regenerate.
	* src/qurt/Makefile.in: Regenerate.
	* src/recursion/Makefile.in: Regenerate.
	* src/rijndael/Makefile.in: Regenerate.
	* src/select/Makefile.in: Regenerate.
	* src/sglib-arraybinsearch/Makefile.in: Regenerate.
	* src/sglib-arraysort/Makefile.in: Regenerate.
	* src/sglib-arraysort1/Makefile.in: Regenerate.
	* src/sglib-dllist/Makefile.in: Regenerate.
	* src/sglib-hashtable/Makefile.in: Regenerate.
	* src/sglib-listinsertsort/Makefile.in: Regenerate.
	* src/sglib-listinsertsort1/Makefile.in: Regenerate.
	* src/sglib-listsort/Makefile.in: Regenerate.
	* src/sglib-queue/Makefile.in: Regenerate.
	* src/sglib-rbtree/Makefile.in: Regenerate.
	* src/sha/Makefile.in: Regenerate.
	* src/slre/Makefile.in: Regenerate.
	* src/sqrt/Makefile.in: Regenerate.
	* src/st/Makefile.in: Regenerate.
	* src/statemate/Makefile.in: Regenerate.
	* src/stb_perlin/Makefile.in: Regenerate.
	* src/stringsearch1/Makefile.in: Regenerate.
	* src/strstr/Makefile.in: Regenerate.
	* src/tarai/Makefile.in: Regenerate.
	* src/template/Makefile.in: Regenerate.
	* src/trio-snprintf/Makefile.in: Regenerate.
	* src/trio-sscanf/Makefile.in: Regenerate.
	* src/ud/Makefile.in: Regenerate.
	* src/whetstone/Makefile.in: Regenerate.
	* src/wikisort/Makefile.in: Regenerate.

2014-08-04  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/adpcm/adpcm.c: Convert dos style line endings to unix style
	line endings.
	* src/bs/bs.c: Likewise.
	* src/bsort100/bsort100.c: Likewise.
	* src/bubblesort/bubblesort.c: Likewise.
	* src/cnt/cnt.c: Likewise.
	* src/ctl-stack/ctl.h: Likewise.
	* src/ctl-stack/stack.h: Likewise.
	* src/ctl-vector/ctl.h: Likewise.
	* src/ctl-vector/vector.h: Likewise.
	* src/duff/duff.c: Likewise.
	* src/fft/fft1.c: Likewise.
	* src/janne_complex/janne_complex.c: Likewise.
	* src/miniz/miniz.c: Likewise.
	* src/ns/ns.c: Likewise.
	* src/nsichneu/nsichneu.c: Likewise.
	* src/picojpeg/picojpeg.c: Likewise.
	* src/picojpeg/picojpeg.h: Likewise.
	* src/qsort/qsort.c: Likewise.
	* src/st/st.c: Likewise.
	* src/ud/ud.c: Likewise.

2014-08-04  Andrew Burgess  <andrew.burgess@embecosm.com>

	* doc/beebs.info: Regenerate after recent commits that changed
	doc/beebs.texi.
	* doc/version.texi: Regenerate a more upto date version file.

2014-08-04  Andrew Burgess  <andrew.burgess@embecosm.com>

	* configure.ac: When no --with-chip is specified, the default is
	now generic.
	* configure: Regenerate.

2014-08-04  Andrew Burgess  <andrew.burgess@embecosm.com>

	* Makefile.am: Correct the expansion of the BEEBS acronym.
	* Makefile.in: Likewise.
	* README.md: Likewise.
	* analysis/Makefile.am: Likewise.
	* analysis/Makefile.in: Likewise.
	* doc/beebs.texi: Likewise.
	* src/2dfir/Makefile.am: Likewise.
	* src/2dfir/Makefile.in: Likewise.
	* src/adpcm/Makefile.am: Likewise.
	* src/adpcm/Makefile.in: Likewise.
	* src/aha-compress/Makefile.am: Likewise.
	* src/aha-compress/Makefile.in: Likewise.
	* src/aha-compress/compress_test.c: Likewise.
	* src/aha-mont64/Makefile.am: Likewise.
	* src/aha-mont64/Makefile.in: Likewise.
	* src/aha-mont64/mont64.c: Likewise.
	* src/blowfish/Makefile.am: Likewise.
	* src/blowfish/Makefile.in: Likewise.
	* src/bs/Makefile.am: Likewise.
	* src/bs/Makefile.in: Likewise.
	* src/bsort100/Makefile.am: Likewise.
	* src/bsort100/Makefile.in: Likewise.
	* src/bsort100/bsort100.c: Likewise.
	* src/bubblesort/Makefile.am: Likewise.
	* src/bubblesort/Makefile.in: Likewise.
	* src/cnt/Makefile.am: Likewise.
	* src/cnt/Makefile.in: Likewise.
	* src/common.mk.am: Likewise.
	* src/common.mk.in: Likewise.
	* src/compress/Makefile.am: Likewise.
	* src/compress/Makefile.in: Likewise.
	* src/cover/Makefile.am: Likewise.
	* src/cover/Makefile.in: Likewise.
	* src/cover/cover.c: Likewise.
	* src/crc/Makefile.am: Likewise.
	* src/crc/Makefile.in: Likewise.
	* src/crc/crc.c: Likewise.
	* src/crc32/Makefile.am: Likewise.
	* src/crc32/Makefile.in: Likewise.
	* src/ctl-stack/Makefile.am: Likewise.
	* src/ctl-stack/Makefile.in: Likewise.
	* src/ctl-stack/stack.c: Likewise.
	* src/ctl-string/Makefile.am: Likewise.
	* src/ctl-string/Makefile.in: Likewise.
	* src/ctl-string/string.c: Likewise.
	* src/ctl-vector/Makefile.am: Likewise.
	* src/ctl-vector/Makefile.in: Likewise.
	* src/ctl-vector/vector.c: Likewise.
	* src/cubic/Makefile.am: Likewise.
	* src/cubic/Makefile.in: Likewise.
	* src/dhrystone/Makefile.am: Likewise.
	* src/dhrystone/Makefile.in: Likewise.
	* src/dijkstra/Makefile.am: Likewise.
	* src/dijkstra/Makefile.in: Likewise.
	* src/dtoa/Makefile.am: Likewise.
	* src/dtoa/Makefile.in: Likewise.
	* src/dtoa/dtoa.c: Likewise.
	* src/duff/Makefile.am: Likewise.
	* src/duff/Makefile.in: Likewise.
	* src/edn/Makefile.am: Likewise.
	* src/edn/Makefile.in: Likewise.
	* src/expint/Makefile.am: Likewise.
	* src/expint/Makefile.in: Likewise.
	* src/expint/expint.c: Likewise.
	* src/fac/Makefile.am: Likewise.
	* src/fac/Makefile.in: Likewise.
	* src/fac/fac.c: Likewise.
	* src/fasta/Makefile.am: Likewise.
	* src/fasta/Makefile.in: Likewise.
	* src/fdct/Makefile.am: Likewise.
	* src/fdct/Makefile.in: Likewise.
	* src/fft/Makefile.am: Likewise.
	* src/fft/Makefile.in: Likewise.
	* src/fibcall/Makefile.am: Likewise.
	* src/fibcall/Makefile.in: Likewise.
	* src/fibcall/fibcall.c: Likewise.
	* src/fir/Makefile.am: Likewise.
	* src/fir/Makefile.in: Likewise.
	* src/fir/fir.c: Likewise.
	* src/float_matmult/Makefile.am: Likewise.
	* src/float_matmult/Makefile.in: Likewise.
	* src/frac/Makefile.am: Likewise.
	* src/frac/Makefile.in: Likewise.
	* src/frac/frac.c: Likewise.
	* src/gdb-advance/Makefile.am: Likewise.
	* src/gdb-advance/Makefile.in: Likewise.
	* src/gdb-advance/advance.c: Likewise.
	* src/gdb-all-types/Makefile.am: Likewise.
	* src/gdb-all-types/Makefile.in: Likewise.
	* src/gdb-all-types/all-types.c: Likewise.
	* src/gdb-anon/Makefile.am: Likewise.
	* src/gdb-anon/Makefile.in: Likewise.
	* src/gdb-anon/anon.c: Likewise.
	* src/gdb-arrayidx/Makefile.am: Likewise.
	* src/gdb-arrayidx/Makefile.in: Likewise.
	* src/gdb-arrayidx/arrayidx.c: Likewise.
	* src/gdb-async/Makefile.am: Likewise.
	* src/gdb-async/Makefile.in: Likewise.
	* src/gdb-async/async.c: Likewise.
	* src/gdb-bitfields/Makefile.am: Likewise.
	* src/gdb-bitfields/Makefile.in: Likewise.
	* src/gdb-bitfields/bitfields.c: Likewise.
	* src/gdb-constvars/Makefile.am: Likewise.
	* src/gdb-constvars/Makefile.in: Likewise.
	* src/gdb-constvars/constvars.c: Likewise.
	* src/gdb-store/Makefile.am: Likewise.
	* src/gdb-store/Makefile.in: Likewise.
	* src/gdb-store/store.c: Likewise.
	* src/huffbench/Makefile.am: Likewise.
	* src/huffbench/Makefile.in: Likewise.
	* src/huffbench/huffbench.c: Likewise.
	* src/insertsort/Makefile.am: Likewise.
	* src/insertsort/Makefile.in: Likewise.
	* src/insertsort/insertsort.c: Likewise.
	* src/int_matmult/Makefile.am: Likewise.
	* src/int_matmult/Makefile.in: Likewise.
	* src/janne_complex/Makefile.am: Likewise.
	* src/janne_complex/Makefile.in: Likewise.
	* src/janne_complex/janne_complex.c: Likewise.
	* src/jfdctint/Makefile.am: Likewise.
	* src/jfdctint/Makefile.in: Likewise.
	* src/jfdctint/jfdctint.c: Likewise.
	* src/lcdnum/Makefile.am: Likewise.
	* src/lcdnum/Makefile.in: Likewise.
	* src/lcdnum/lcdnum.c: Likewise.
	* src/levenshtein/Makefile.am: Likewise.
	* src/levenshtein/Makefile.in: Likewise.
	* src/levenshtein/levenshtein.c: Likewise.
	* src/lms/Makefile.am: Likewise.
	* src/lms/Makefile.in: Likewise.
	* src/ludcmp/Makefile.am: Likewise.
	* src/ludcmp/Makefile.in: Likewise.
	* src/ludcmp/ludcmp.c: Likewise.
	* src/mergesort/Makefile.am: Likewise.
	* src/mergesort/Makefile.in: Likewise.
	* src/mergesort/mergesort.c: Likewise.
	* src/miniz/Makefile.am: Likewise.
	* src/miniz/Makefile.in: Likewise.
	* src/miniz/miniz_b.c: Likewise.
	* src/minver/Makefile.am: Likewise.
	* src/minver/Makefile.in: Likewise.
	* src/minver/minver.c: Likewise.
	* src/nbody/Makefile.am: Likewise.
	* src/nbody/Makefile.in: Likewise.
	* src/ndes/Makefile.am: Likewise.
	* src/ndes/Makefile.in: Likewise.
	* src/ndes/ndes.c: Likewise.
	* src/nettle-arcfour/Makefile.am: Likewise.
	* src/nettle-arcfour/Makefile.in: Likewise.
	* src/nettle-arcfour/arcfour.c: Likewise.
	* src/nettle-cast128/Makefile.am: Likewise.
	* src/nettle-cast128/Makefile.in: Likewise.
	* src/nettle-cast128/cast128.c: Likewise.
	* src/nettle-des/Makefile.am: Likewise.
	* src/nettle-des/Makefile.in: Likewise.
	* src/nettle-des/des.c: Likewise.
	* src/nettle-des/desCode.h: Likewise.
	* src/nettle-md5/Makefile.am: Likewise.
	* src/nettle-md5/Makefile.in: Likewise.
	* src/nettle-md5/md5.c: Likewise.
	* src/newlib-exp/Makefile.am: Likewise.
	* src/newlib-exp/Makefile.in: Likewise.
	* src/newlib-exp/ef_exp.c: Likewise.
	* src/newlib-log/Makefile.am: Likewise.
	* src/newlib-log/Makefile.in: Likewise.
	* src/newlib-log/ef_log.c: Likewise.
	* src/newlib-mod/Makefile.am: Likewise.
	* src/newlib-mod/Makefile.in: Likewise.
	* src/newlib-mod/ef_mod.c: Likewise.
	* src/newlib-sqrt/Makefile.am: Likewise.
	* src/newlib-sqrt/Makefile.in: Likewise.
	* src/newlib-sqrt/ef_sqrt.c: Likewise.
	* src/ns/Makefile.am: Likewise.
	* src/ns/Makefile.in: Likewise.
	* src/ns/ns.c: Likewise.
	* src/nsichneu/Makefile.am: Likewise.
	* src/nsichneu/Makefile.in: Likewise.
	* src/nsichneu/nsichneu.c: Likewise.
	* src/picojpeg/Makefile.am: Likewise.
	* src/picojpeg/Makefile.in: Likewise.
	* src/picojpeg/picojpeg_test.c: Likewise.
	* src/platformcode/Makefile.am: Likewise.
	* src/platformcode/Makefile.in: Likewise.
	* src/platformcode/platformcode.c: Likewise.
	* src/prime/Makefile.am: Likewise.
	* src/prime/Makefile.in: Likewise.
	* src/prime/prime.c: Likewise.
	* src/qrduino/Makefile.am: Likewise.
	* src/qrduino/Makefile.in: Likewise.
	* src/qsort/Makefile.am: Likewise.
	* src/qsort/Makefile.in: Likewise.
	* src/qsort/qsort.c: Likewise.
	* src/qurt/Makefile.am: Likewise.
	* src/qurt/Makefile.in: Likewise.
	* src/qurt/qurt.c: Likewise.
	* src/recursion/Makefile.am: Likewise.
	* src/recursion/Makefile.in: Likewise.
	* src/recursion/recursion.c: Likewise.
	* src/rijndael/Makefile.am: Likewise.
	* src/rijndael/Makefile.in: Likewise.
	* src/select/Makefile.am: Likewise.
	* src/select/Makefile.in: Likewise.
	* src/select/select.c: Likewise.
	* src/sglib-arraybinsearch/Makefile.am: Likewise.
	* src/sglib-arraybinsearch/Makefile.in: Likewise.
	* src/sglib-arraybinsearch/arraybinsearch.c: Likewise.
	* src/sglib-arraysort/Makefile.am: Likewise.
	* src/sglib-arraysort/Makefile.in: Likewise.
	* src/sglib-arraysort/arraysort.c: Likewise.
	* src/sglib-arraysort1/Makefile.am: Likewise.
	* src/sglib-arraysort1/Makefile.in: Likewise.
	* src/sglib-arraysort1/arraysort1.c: Likewise.
	* src/sglib-dllist/Makefile.am: Likewise.
	* src/sglib-dllist/Makefile.in: Likewise.
	* src/sglib-dllist/dllist.c: Likewise.
	* src/sglib-hashtable/Makefile.am: Likewise.
	* src/sglib-hashtable/Makefile.in: Likewise.
	* src/sglib-hashtable/hashtable.c: Likewise.
	* src/sglib-listinsertsort/Makefile.am: Likewise.
	* src/sglib-listinsertsort/Makefile.in: Likewise.
	* src/sglib-listinsertsort/listinsertsort.c: Likewise.
	* src/sglib-listinsertsort1/Makefile.am: Likewise.
	* src/sglib-listinsertsort1/Makefile.in: Likewise.
	* src/sglib-listinsertsort1/listinsertsort1.c: Likewise.
	* src/sglib-listsort/Makefile.am: Likewise.
	* src/sglib-listsort/Makefile.in: Likewise.
	* src/sglib-listsort/listsort.c: Likewise.
	* src/sglib-queue/Makefile.am: Likewise.
	* src/sglib-queue/Makefile.in: Likewise.
	* src/sglib-queue/queue.c: Likewise.
	* src/sglib-rbtree/Makefile.am: Likewise.
	* src/sglib-rbtree/Makefile.in: Likewise.
	* src/sglib-rbtree/rbtree.c: Likewise.
	* src/sha/Makefile.am: Likewise.
	* src/sha/Makefile.in: Likewise.
	* src/slre/Makefile.am: Likewise.
	* src/slre/Makefile.in: Likewise.
	* src/slre/slre.c: Likewise.
	* src/slre/slre.h: Likewise.
	* src/sqrt/Makefile.am: Likewise.
	* src/sqrt/Makefile.in: Likewise.
	* src/sqrt/sqrt.c: Likewise.
	* src/st/Makefile.am: Likewise.
	* src/st/Makefile.in: Likewise.
	* src/st/st.c: Likewise.
	* src/statemate/Makefile.am: Likewise.
	* src/statemate/Makefile.in: Likewise.
	* src/statemate/statemate.c: Likewise.
	* src/stb_perlin/Makefile.am: Likewise.
	* src/stb_perlin/Makefile.in: Likewise.
	* src/stb_perlin/stb_perlin.c: Likewise.
	* src/stringsearch1/Makefile.am: Likewise.
	* src/stringsearch1/Makefile.in: Likewise.
	* src/stringsearch1/fast.fwd.inc.c: Likewise.
	* src/stringsearch1/fast.rev.d12.c: Likewise.
	* src/stringsearch1/stringsearch1.c: Likewise.
	* src/strstr/Makefile.am: Likewise.
	* src/strstr/Makefile.in: Likewise.
	* src/strstr/strstr.c: Likewise.
	* src/tarai/Makefile.am: Likewise.
	* src/tarai/Makefile.in: Likewise.
	* src/tarai/tarai.c: Likewise.
	* src/template/Makefile.am: Likewise.
	* src/template/Makefile.in: Likewise.
	* src/template/template.c: Likewise.
	* src/trio-snprintf/Makefile.am: Likewise.
	* src/trio-snprintf/Makefile.in: Likewise.
	* src/trio-snprintf/trio_test.c: Likewise.
	* src/trio-sscanf/Makefile.am: Likewise.
	* src/trio-sscanf/Makefile.in: Likewise.
	* src/trio-sscanf/trio_test.c: Likewise.
	* src/ud/Makefile.am: Likewise.
	* src/ud/Makefile.in: Likewise.
	* src/ud/ud.c: Likewise.
	* src/whetstone/Makefile.am: Likewise.
	* src/whetstone/Makefile.in: Likewise.
	* src/whetstone/whetstone.c: Likewise.
	* src/wikisort/Makefile.am: Likewise.
	* src/wikisort/Makefile.in: Likewise.
	* src/wikisort/wikisort.c: Likewise.
	* tools/generate-benchmark.sh: Likewise.

2014-08-01  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/trio-snprintf/trio.c (TRIO_ARGS5): Remove unused local
	variable.
	* src/trio-sscanf/trio.c (TRIO_ARGS5): Likewise.

2014-08-01  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/whetstone/whetstone.c (main): Remove unused local variables,
	and comment out an unused label LCONT.

2014-08-01  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/wikisort/wikisort.c (benchmark): Remove unused variables.

2014-08-01  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/ud/ud.c (benchmark): Make chkerr a global.
	(chkerr): New global.

2014-08-01  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/sqrt/sqrt.c (fabs, fabs_float): Rename fabs to fabs_float to
	avoid using the name of a standard library function.
	(sqrtfcn): Change use of fabs to fabs_float.

2014-08-01  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/stringsearch1/fast.fwd.inc.c: Add string.h and stdlib.h
	includes.
	(prep1): Add return type, remove use of K&R style arguments,
	remove unused variables.
	(exec1): Add return type, remove use of K&R style arguments,
	provide explicit type int to parameters and variables that were
	previously defaulting to int, remove unused variables.
	* src/stringsearch1/fast.rev.d12.c: Add missing includes.
	(prep2, exec2): Add return type, remove use of K&R style
	arguments, make int type explicit for some parameter and
	variables, remove unused variables.
	* src/stringsearch1/stringsearch1.c: Add string.h include.
	(buf, search): Change type to match initialisation by string
	literal.
	(prep1, prep2, exec1, exec2): Change parameter types on
	declaration to match definition.
	(benchmark): Cast string literal data to correct type for calls.

2014-08-01  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/st/st.c (benchmark): Change return type to void.

2014-08-01  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/slre/slre.c (text, regexes): Change types so for
	initialisation by string literal.

2014-08-01  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/sha/sha.c: Add stdlib.h include.

2014-08-01  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/sglib-arraybinsearch/arraybinsearch.c (benchmark): Make
	found a global.
	(found): New global.
	* src/sglib-arraysort/arraysort.c (benchmark): Remove unused
	locals.
	* src/sglib-arraysort/sglib.h (GLIB_ARRAY_QUICK_SORT): Remove
	unused variable.
	* src/sglib-arraysort1/arraysort1.c (benchmark): Remove unused
	variables.
	* src/sglib-arraysort1/sglib.h (SGLIB___ARRAY_HEAP_DOWN): Remove
	unused variable.
	* src/sglib-dllist/dllist.c: Add missing stdlib.h include.
	* src/sglib-dllist/sglib.h (SGLIB_LIST_LEN, SGLIB_DL_LIST_SORT):
	Remove unused variable.
	* src/sglib-hashtable/hashtable.c: Add stdlib.h include.
	(benchmark): Remove unused variables.
	* src/sglib-hashtable/sglib.h (SGLIB_LIST_LEN): Remove unused
	variables.
	* src/sglib-listinsertsort/listinsertsort.c: Add stdlib.h include.
	(benchmark): Remove unused variables.
	* src/sglib-listinsertsort1/listinsertsort1.c: Add stdlib.h
	include.
	(benchmark): Remove unused variable.
	* src/sglib-listinsertsort1/sglib.h (SGLIB_LIST_LEN): Remove
	unused variables.
	* src/sglib-listsort/listsort.c: Add stdlib.h include.
	(benchmark): Remove unused variables.
	* src/sglib-queue/queue.c: Add stdlib.h include.
	* src/sglib-queue/sglib.h (SGLIB___ARRAY_HEAP_DOWN): Remove unused
	variable.
	* src/sglib-rbtree/rbtree.c: Add stdlib.h include.
	(benchmark): Remove unused variables.
	* src/sglib-rbtree/sglib.h:
	(SGLIB___RBTREE_FIX_INSERTION_DISCREPANCY): Remove unused
	variables, including definitions that are then never used.
	(SGLIB___RBTREE_FIX_DELETION_DISCREPANCY): Likewise.

2014-08-01  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/rijndael/aes.c (c_name): Add parenthesis to make precedence
	more obvious.
	* src/rijndael/aesxam.c (fillrand): Change types parameters, to
	match how function is used.
	(encfile, decfile, main): Change type of parameters and variables,
	to match how function is used.  Remove unused variables.

2014-08-01  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/qurt/qurt.c (benchmark): Make result a global.
	(result): New global.

2014-08-01  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/qsort/qsort.c (sort): Remove unused variable.
	(benchmark): Add return type.

2014-08-01  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/qrduino/qrencode.h (freeecc): Add declaration.
	* src/qrduino/qrframe.c: Guard code with __AVR__.
	* src/qrduino/qrtest.c: Add string.h include.

2014-08-01  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/prime/prime.c (uint, ulong): Change uint to ulong.
	(divides, even, prime, swap): Change uint parameters to uint,
	change all uint variables to ulong.
	(benchmark): Change uint variables to ulong.  Make variable result
	a volatile global.
	(result): New global.

2014-08-01  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/picojpeg/picojpeg.c (readSOSMarker): Move local variables
	out to be volatile globals, preventing the compiler from
	optimising away function calls.
	(spectral_start, spectral_end, successive_high, successive_low):
	New globals from readSOSMarker.
	(findEOI): Remove unused function.
	(checkHuffTables): Re-write undefined code.
	(convertCr): Re-write undefined code.
	* src/picojpeg/picojpeg_test.c: Add string.h include.

2014-08-01  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/newlib-exp/ef_exp.c (result): New global.
	(benchmark): Make result into a new global.
	* src/newlib-log/ef_log.c: Likewise.
	* src/newlib-mod/ef_mod.c: Likewise.
	* src/newlib-sqrt/ef_sqrt.c: Likewise.

2014-08-01  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/ndes/ndes.c (des, ks, cyfun): Remove use of undefined
	behaviour where '<<=' is used within assignment.

2014-08-01  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/minver/minver.c (data_sink): Added.
	(minver): Write defined but unused variables into the data_sink.

2014-08-01  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/miniz/miniz.h: New file.
	* src/miniz/miniz.c: Add miniz.h include.
	(MINIZ_NO_ARCHIVE_WRITING_APIS): Move definition earlier in the
	file.
	(def_realloc_func): Guard declaration with
	MINIZ_NO_ARCHIVE_WRITING_APIS.
	(mz_ulong, mz_uncompress): Move into header file.
	* src/miniz/miniz_b.c: Add string.h and miniz.h includes.
	(benchmark): Remove unused variable. Cast data before calling
	mz_compress2.

2014-08-01  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/mergesort/mergesort.c (benchmark): Remove unused variables.

2014-08-01  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/int_matmult/matmult.c (matrix): Change from int to long.

2014-08-01  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/ludcmp/ludcmp.c (chkerr): Added as global.
	(benchmark): Variable chkerr moved from here.

2014-08-01  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/huffbench/huffbench.c (benchmark): Remove unused variables,
	and commented out code.

2014-08-01  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/gdb-constvars/constvars.c (benchmark): Cast defined but
	unused variables to void.

2014-08-01  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/aha-mont64/mont64.c (xbinGCD): Make parameters volatile to
	match the data being passed in.
	(benchmark): Remove unused variable.

2014-08-01  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/aha-compress/compress_test.c (compress4): Add parentheses to
	make meaning clearer, use long rather than int.
	(compress3): Use long rather than int.
	(benchmark): Use long rather than int.

2014-08-01  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/expint/expint.c (benchmark_result): Added.
	(benchmark): Write result of call to benchmark_result.

2014-07-31  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/gdb-async/async.c (baz): Forward declaration, remove blank
	line before definition.
	(benchmark): Change return type, and cast defined but unused
	variable to void.
	(main): Remove blank line before definition.

2014-07-31  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/gdb-arrayidx/arrayidx.c (benchmark): Change return type.

2014-07-31  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/gdb-anon/anon.c (benchmark): Change return type.

2014-07-31  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/gdb-all-types/all-types.c (benchmark): Change return type,
	remove blank line.

2014-07-31  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/gdb-advance/advance.c (func2): Move definition before use.
	Change return type to void.
	(func3): Change return type to void.
	(benchmark): Change return type to int.  Cast defined but unused
	variable to void.

2014-07-31  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/frac/frac.c (frac): Add a return at the end of the function.

2014-07-31  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/fir/fir.c (fir_filter_int): Make parameters and variables
	const to match input data.

2014-07-31  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/fft/fft1.c (benchmark): Cast defined but unused variable to
	void.

2014-07-31  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/fasta/fasta.c (random_fasta): Cast defined but unused
	variable to void.

2014-07-31  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/expint/expint.c (foo): Make possibly ambiguous code clearer.

2014-07-31  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/edn/edn.c (codebook): Remove commented out code.

2014-07-31  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/dtoa/dtoa.c: Remove support for KR_headers (K&R style
	function headers) through out this file.
	(DBL_MAX_EXP, Exp_msk1, Frac_mask): Mark these costants as
	unsigned long to reflect how they are used and to prevent integer
	overflow on 16-bit platforms.
	(strtod): Remove unused variables.

2014-07-31  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/dhrystone/dhry.h (Proc_1, Proc_2, Proc_3, Proc_4): Add
	forward declarations.
	(Proc_5, Proc_6, Proc_7, Proc_8): Likewise
	(Func_1, Func_2, Func_3): Likewise.
	* src/dhrystone/dhry_1.c: Add missing includes.
	(main): Return a value.
	* src/dhrystone/dhry_2.c: Add missing include.

2014-07-31  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/cubic/basicmath_small.c (main): Remove unused variables.

2014-07-31  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/ctl-vector/vector.h (ctl_##type##VectorGetAt): Remove.

2014-07-31  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/ctl-string/string.c: Add include for ctype.h.
	(ctl_StringSetSubStr): Remove unused variable.

2014-07-31  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/crc32/crc_32.c: Add include for stdlib.h.
	(main): Comment out check_output, cast defined but unused variable
	'output' to void.

2014-07-31  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/crc/crc.c (icrc1): Rewrite undefined code.
	(benchmark): Discard unused variable by casting to void.

2014-07-31  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/compress/compress.c (HSIZE, BITS): Remove duplicate
	definitions, use last definition for HSIZE, BITS was always 16.
	(PBITS): Unused, so remove.

2014-07-31  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/cnt/cnt.c (Test): Remove unused variables.

2014-07-31  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/bubblesort/bubblesort.c (Inisialize): Add declaration.
	(BubbleSort): Add declaration, remove unused variables.

2014-07-31  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/bsort100/bsort100.c (Initialize): Add declaration.
	(benchmark): Remove unused variables, and commented out code.
	(BubbleSort): Add declaration.  Remove unused variables.

2014-07-31  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/bs/bs.c (binary_search): Add return type to function.

2014-07-31  Andrew Burgess  <andrew.burgess@embecosm.com>
	Add, or fix whitespace in GPL headers on Makefile.am files.

	* analysis/Makefile.am: Add GPL header, or fix whitespace around
	existing header.
	* src/2dfir/Makefile.am: Likewise.
	* src/adpcm/Makefile.am: Likewise.
	* src/aha-compress/Makefile.am: Likewise.
	* src/aha-mont64/Makefile.am: Likewise.
	* src/blowfish/Makefile.am: Likewise.
	* src/bs/Makefile.am: Likewise.
	* src/bsort100/Makefile.am: Likewise.
	* src/bubblesort/Makefile.am: Likewise.
	* src/cnt/Makefile.am: Likewise.
	* src/compress/Makefile.am: Likewise.
	* src/cover/Makefile.am: Likewise.
	* src/crc/Makefile.am: Likewise.
	* src/crc32/Makefile.am: Likewise.
	* src/ctl-stack/Makefile.am: Likewise.
	* src/ctl-string/Makefile.am: Likewise.
	* src/ctl-vector/Makefile.am: Likewise.
	* src/dhrystone/Makefile.am: Likewise.
	* src/dijkstra/Makefile.am: Likewise.
	* src/dtoa/Makefile.am: Likewise.
	* src/duff/Makefile.am: Likewise.
	* src/edn/Makefile.am: Likewise.
	* src/expint/Makefile.am: Likewise.
	* src/fac/Makefile.am: Likewise.
	* src/fasta/Makefile.am: Likewise.
	* src/fdct/Makefile.am: Likewise.
	* src/fft/Makefile.am: Likewise.
	* src/fibcall/Makefile.am: Likewise.
	* src/fir/Makefile.am: Likewise.
	* src/float_matmult/Makefile.am: Likewise.
	* src/frac/Makefile.am: Likewise.
	* src/gdb-advance/Makefile.am: Likewise.
	* src/gdb-all-types/Makefile.am: Likewise.
	* src/gdb-anon/Makefile.am: Likewise.
	* src/gdb-arrayidx/Makefile.am: Likewise.
	* src/gdb-async/Makefile.am: Likewise.
	* src/gdb-bitfields/Makefile.am: Likewise.
	* src/gdb-constvars/Makefile.am: Likewise.
	* src/gdb-store/Makefile.am: Likewise.
	* src/int_matmult/Makefile.am: Likewise.
	* src/levenshtein/Makefile.am: Likewise.
	* src/jfdctint/Makefile.am: Likewise.
	* src/lcdnum/Makefile.am: Likewise.
	* src/ludcmp/Makefile.am: Likewise.
	* src/mergesort/Makefile.am: Likewise.
	* src/miniz/Makefile.am: Likewise.
	* src/minver/Makefile.am: Likewise.
	* src/nbody/Makefile.am: Likewise.
	* src/ndes/Makefile.am: Likewise.
	* src/nettle-arcfour/Makefile.am: Likewise.
	* src/nettle-cast128/Makefile.am: Likewise.
	* src/nettle-des/Makefile.am: Likewise.
	* src/nettle-md5/Makefile.am: Likewise.
	* src/newlib-exp/Makefile.am: Likewise.
	* src/newlib-log/Makefile.am: Likewise.
	* src/newlib-mod/Makefile.am: Likewise.
	* src/newlib-sqrt/Makefile.am: Likewise.
	* src/ns/Makefile.am: Likewise.
	* src/nsichneu/Makefile.am: Likewise.
	* src/picojpeg/Makefile.am: Likewise.
	* src/platformcode/Makefile.am: Likewise.
	* src/prime/Makefile.am: Likewise.
	* src/qurt/Makefile.am: Likewise.
	* src/select/Makefile.am: Likewise.
	* src/sglib-arraybinsearch/Makefile.am: Likewise.
	* src/sglib-arraysort/Makefile.am: Likewise.
	* src/sglib-arraysort1/Makefile.am: Likewise.
	* src/sglib-dllist/Makefile.am: Likewise.
	* src/sglib-hashtable/Makefile.am: Likewise.
	* src/sglib-listinsertsort/Makefile.am: Likewise.
	* src/sglib-listsort/Makefile.am: Likewise.
	* src/sglib-queue/Makefile.am: Likewise.
	* src/sglib-rbtree/Makefile.am: Likewise.
	* src/sha/Makefile.am: Likewise.
	* src/slre/Makefile.am: Likewise.
	* src/sqrt/Makefile.am: Likewise.
	* src/st/Makefile.am: Likewise.
	* src/statemate/Makefile.am: Likewise.
	* src/stb_perlin/Makefile.am: Likewise.
	* src/stringsearch1/Makefile.am: Likewise.
	* src/strstr/Makefile.am: Likewise.
	* src/tarai/Makefile.am: Likewise.
	* src/template/Makefile.am: Likewise.
	* src/trio-snprintf/Makefile.am: Likewise.
	* src/trio-sscanf/Makefile.am: Likewise.
	* src/ud/Makefile.am: Likewise.
	* src/whetstone/Makefile.am: Likewise.
	* src/wikisort/Makefile.am: Likewise.
	* src/common.mk.am: Likewise.
	* src/2dfir/Makefile.in: Regenerate.
	* src/adpcm/Makefile.in: Regenerate.
	* src/aha-compress/Makefile.in: Regenerate.
	* src/aha-mont64/Makefile.in: Regenerate.
	* src/blowfish/Makefile.in: Regenerate.
	* src/bs/Makefile.in: Regenerate.
	* src/bsort100/Makefile.in: Regenerate.
	* src/bubblesort/Makefile.in: Regenerate.
	* src/cnt/Makefile.in: Regenerate.
	* src/compress/Makefile.in: Regenerate.
	* src/cover/Makefile.in: Regenerate.
	* src/crc/Makefile.in: Regenerate.
	* src/crc32/Makefile.in: Regenerate.
	* src/ctl-stack/Makefile.in: Regenerate.
	* src/ctl-string/Makefile.in: Regenerate.
	* src/ctl-vector/Makefile.in: Regenerate.
	* src/cubic/Makefile.in: Regenerate.
	* src/dhrystone/Makefile.in: Regenerate.
	* src/dijkstra/Makefile.in: Regenerate.
	* src/dtoa/Makefile.in: Regenerate.
	* src/duff/Makefile.in: Regenerate.
	* src/edn/Makefile.in: Regenerate.
	* src/expint/Makefile.in: Regenerate.
	* src/fac/Makefile.in: Regenerate.
	* src/fasta/Makefile.in: Regenerate.
	* src/fdct/Makefile.in: Regenerate.
	* src/fft/Makefile.in: Regenerate.
	* src/fibcall/Makefile.in: Regenerate.
	* src/fir/Makefile.in: Regenerate.
	* src/float_matmult/Makefile.in: Regenerate.
	* src/frac/Makefile.in: Regenerate.
	* src/gdb-advance/Makefile.in: Regenerate.
	* src/gdb-all-types/Makefile.in: Regenerate.
	* src/gdb-anon/Makefile.in: Regenerate.
	* src/gdb-arrayidx/Makefile.in: Regenerate.
	* src/gdb-async/Makefile.in: Regenerate.
	* src/gdb-bitfields/Makefile.in: Regenerate.
	* src/gdb-constvars/Makefile.in: Regenerate.
	* src/gdb-store/Makefile.in: Regenerate.
	* src/int_matmult/Makefile.in: Regenerate.
	* src/jfdctint/Makefile.in: Regenerate.
	* src/lcdnum/Makefile.in: Regenerate.
	* src/levenshtein/Makefile.in: Regenerate.
	* src/ludcmp/Makefile.in: Regenerate.
	* src/mergesort/Makefile.in: Regenerate.
	* src/miniz/Makefile.in: Regenerate.
	* src/minver/Makefile.in: Regenerate.
	* src/nbody/Makefile.in: Regenerate.
	* src/ndes/Makefile.in: Regenerate.
	* src/nettle-arcfour/Makefile.in: Regenerate.
	* src/nettle-cast128/Makefile.in: Regenerate.
	* src/nettle-des/Makefile.in: Regenerate.
	* src/nettle-md5/Makefile.in: Regenerate.
	* src/newlib-exp/Makefile.in: Regenerate.
	* src/newlib-log/Makefile.in: Regenerate.
	* src/newlib-mod/Makefile.in: Regenerate.
	* src/newlib-sqrt/Makefile.in: Regenerate.
	* src/ns/Makefile.in: Regenerate.
	* src/nsichneu/Makefile.in: Regenerate.
	* src/picojpeg/Makefile.in: Regenerate.
	* src/prime/Makefile.in: Regenerate.
	* src/qurt/Makefile.in: Regenerate.
	* src/select/Makefile.in: Regenerate.
	* src/sglib-arraybinsearch/Makefile.in: Regenerate.
	* src/sglib-arraysort/Makefile.in: Regenerate.
	* src/sglib-arraysort1/Makefile.in: Regenerate.
	* src/sglib-dllist/Makefile.in: Regenerate.
	* src/sglib-hashtable/Makefile.in: Regenerate.
	* src/sglib-listinsertsort/Makefile.in: Regenerate.
	* src/sglib-listsort/Makefile.in: Regenerate.
	* src/sglib-queue/Makefile.in: Regenerate.
	* src/sglib-rbtree/Makefile.in: Regenerate.
	* src/sha/Makefile.in: Regenerate.
	* src/slre/Makefile.in: Regenerate.
	* src/sqrt/Makefile.in: Regenerate.
	* src/st/Makefile.in: Regenerate.
	* src/statemate/Makefile.in: Regenerate.
	* src/stb_perlin/Makefile.in: Regenerate.
	* src/stringsearch1/Makefile.in: Regenerate.
	* src/strstr/Makefile.in: Regenerate.
	* src/tarai/Makefile.in: Regenerate.
	* src/template/Makefile.in: Regenerate.
	* src/trio-snprintf/Makefile.in: Regenerate.
	* src/trio-sscanf/Makefile.in: Regenerate.
	* src/ud/Makefile.in: Regenerate.
	* src/whetstone/Makefile.in: Regenerate.
	* src/wikisort/Makefile.in: Regenerate.

2014-07-31  Andrew Burgess  <andrew.burgess@embecosm.com>
	    Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* config/arm/boards/stm32f0discovery/board.cfg: Add GPL header.
	* config/arm/boards/stm32vldiscovery/board.cfg: Likewise.
	* config/avr/chips/atmega328p/chip.cfg: Likewise.
	* config/arm/chips/stm32f051/chip.cfg: Likewise.
	* config/arm/chips/stm32f100/chip.cfg: Likewise.
	* dejagnu/site.exp.in: Likewise.

2014-07-31  Andrew Burgess  <andrew.burgess@embecosm.com>
	Add support for Wall and Werror.

	* configure.ac: Add support for Wall and Werror.
	* src/common.mk.am: Add the warning and error flags into the
	AM_CFLAGS.
	* Makefile.in: Regenerate.
	* configure: Regenerate.
	* doc/Makefile.in: Regenerate.
	* src/2dfir/Makefile.in: Regenerate.
	* src/adpcm/Makefile.in: Regenerate.
	* src/aha-compress/Makefile.in: Regenerate.
	* src/aha-mont64/Makefile.in: Regenerate.
	* src/blowfish/Makefile.in: Regenerate.
	* src/bs/Makefile.in: Regenerate.
	* src/bsort100/Makefile.in: Regenerate.
	* src/bubblesort/Makefile.in: Regenerate.
	* src/cnt/Makefile.in: Regenerate.
	* src/compress/Makefile.in: Regenerate.
	* src/cover/Makefile.in: Regenerate.
	* src/crc/Makefile.in: Regenerate.
	* src/crc32/Makefile.in: Regenerate.
	* src/ctl-stack/Makefile.in: Regenerate.
	* src/ctl-string/Makefile.in: Regenerate.
	* src/ctl-vector/Makefile.in: Regenerate.
	* src/cubic/Makefile.in: Regenerate.
	* src/dhrystone/Makefile.in: Regenerate.
	* src/dijkstra/Makefile.in: Regenerate.
	* src/dtoa/Makefile.in: Regenerate.
	* src/duff/Makefile.in: Regenerate.
	* src/edn/Makefile.in: Regenerate.
	* src/expint/Makefile.in: Regenerate.
	* src/fac/Makefile.in: Regenerate.
	* src/fasta/Makefile.in: Regenerate.
	* src/fdct/Makefile.in: Regenerate.
	* src/fft/Makefile.in: Regenerate.
	* src/fibcall/Makefile.in: Regenerate.
	* src/fir/Makefile.in: Regenerate.
	* src/float_matmult/Makefile.in: Regenerate.
	* src/frac/Makefile.in: Regenerate.
	* src/gdb-advance/Makefile.in: Regenerate.
	* src/gdb-all-types/Makefile.in: Regenerate.
	* src/gdb-anon/Makefile.in: Regenerate.
	* src/gdb-arrayidx/Makefile.in: Regenerate.
	* src/gdb-async/Makefile.in: Regenerate.
	* src/gdb-bitfields/Makefile.in: Regenerate.
	* src/gdb-constvars/Makefile.in: Regenerate.
	* src/gdb-store/Makefile.in: Regenerate.
	* src/huffbench/Makefile.in: Regenerate.
	* src/insertsort/Makefile.in: Regenerate.
	* src/int_matmult/Makefile.in: Regenerate.
	* src/janne_complex/Makefile.in: Regenerate.
	* src/jfdctint/Makefile.in: Regenerate.
	* src/lcdnum/Makefile.in: Regenerate.
	* src/levenshtein/Makefile.in: Regenerate.
	* src/lms/Makefile.in: Regenerate.
	* src/ludcmp/Makefile.in: Regenerate.
	* src/mergesort/Makefile.in: Regenerate.
	* src/miniz/Makefile.in: Regenerate.
	* src/minver/Makefile.in: Regenerate.
	* src/nbody/Makefile.in: Regenerate.
	* src/ndes/Makefile.in: Regenerate.
	* src/nettle-arcfour/Makefile.in: Regenerate.
	* src/nettle-cast128/Makefile.in: Regenerate.
	* src/nettle-des/Makefile.in: Regenerate.
	* src/nettle-md5/Makefile.in: Regenerate.
	* src/newlib-exp/Makefile.in: Regenerate.
	* src/newlib-log/Makefile.in: Regenerate.
	* src/newlib-mod/Makefile.in: Regenerate.
	* src/newlib-sqrt/Makefile.in: Regenerate.
	* src/ns/Makefile.in: Regenerate.
	* src/nsichneu/Makefile.in: Regenerate.
	* src/picojpeg/Makefile.in: Regenerate.
	* src/prime/Makefile.in: Regenerate.
	* src/qrduino/Makefile.in: Regenerate.
	* src/qsort/Makefile.in: Regenerate.
	* src/qurt/Makefile.in: Regenerate.
	* src/recursion/Makefile.in: Regenerate.
	* src/rijndael/Makefile.in: Regenerate.
	* src/select/Makefile.in: Regenerate.
	* src/sglib-arraybinsearch/Makefile.in: Regenerate.
	* src/sglib-arraysort/Makefile.in: Regenerate.
	* src/sglib-arraysort1/Makefile.in: Regenerate.
	* src/sglib-dllist/Makefile.in: Regenerate.
	* src/sglib-hashtable/Makefile.in: Regenerate.
	* src/sglib-listinsertsort/Makefile.in: Regenerate.
	* src/sglib-listinsertsort1/Makefile.in: Regenerate.
	* src/sglib-listsort/Makefile.in: Regenerate.
	* src/sglib-queue/Makefile.in: Regenerate.
	* src/sglib-rbtree/Makefile.in: Regenerate.
	* src/sha/Makefile.in: Regenerate.
	* src/slre/Makefile.in: Regenerate.
	* src/sqrt/Makefile.in: Regenerate.
	* src/st/Makefile.in: Regenerate.
	* src/statemate/Makefile.in: Regenerate.
	* src/stb_perlin/Makefile.in: Regenerate.
	* src/stringsearch1/Makefile.in: Regenerate.
	* src/strstr/Makefile.in: Regenerate.
	* src/tarai/Makefile.in: Regenerate.
	* src/template/Makefile.in: Regenerate.
	* src/trio-snprintf/Makefile.in: Regenerate.
	* src/trio-sscanf/Makefile.in: Regenerate.
	* src/ud/Makefile.in: Regenerate.
	* src/whetstone/Makefile.in: Regenerate.
	* src/wikisort/Makefile.in: Regenerate.

2014-07-31  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/nbody/a.out: Delete.

2014-07-31  Andrew Burgess  <andrew.burgess@embecosm.com>
	General clean up in the configure.ac script.

	* configure.ac: Add GPL header.  Change contact email address.
	Remove unused argument simulate.  Move AC_CANONICAL_SYSTEM earlier
	in the script to resolve an autoreconf warning.  Use host_cpu
	rather than target_cpu.  Remove custom cross-compiler support,
	rely instead on the default checks.  Remove use of
	AC_PROG_LIBTOOL, and make LIBTOOL_DEPS available.  Finally, say
	'host' rather than 'target' in the summary message, to better
	match the auto-tools usage of those words.
	* Makefile.am: Add rule for regenerating libtool.
	* Makefile.in: Regenerated.
	* configure: Regenerated.
	* doc/Makefile.in: Regenerated.
	* src/2dfir/Makefile.in: Regenerated.
	* src/adpcm/Makefile.in: Regenerated.
	* src/aha-compress/Makefile.in: Regenerated.
	* src/aha-mont64/Makefile.in: Regenerated.
	* src/blowfish/Makefile.in: Regenerated.
	* src/bs/Makefile.in: Regenerated.
	* src/bsort100/Makefile.in: Regenerated.
	* src/bubblesort/Makefile.in: Regenerated.
	* src/cnt/Makefile.in: Regenerated.
	* src/compress/Makefile.in: Regenerated.
	* src/cover/Makefile.in: Regenerated.
	* src/crc/Makefile.in: Regenerated.
	* src/crc32/Makefile.in: Regenerated.
	* src/ctl-stack/Makefile.in: Regenerated.
	* src/ctl-string/Makefile.in: Regenerated.
	* src/ctl-vector/Makefile.in: Regenerated.
	* src/cubic/Makefile.in: Regenerated.
	* src/dhrystone/Makefile.in: Regenerated.
	* src/dijkstra/Makefile.in: Regenerated.
	* src/dtoa/Makefile.in: Regenerated.
	* src/duff/Makefile.in: Regenerated.
	* src/edn/Makefile.in: Regenerated.
	* src/expint/Makefile.in: Regenerated.
	* src/fac/Makefile.in: Regenerated.
	* src/fasta/Makefile.in: Regenerated.
	* src/fdct/Makefile.in: Regenerated.
	* src/fft/Makefile.in: Regenerated.
	* src/fibcall/Makefile.in: Regenerated.
	* src/fir/Makefile.in: Regenerated.
	* src/float_matmult/Makefile.in: Regenerated.
	* src/frac/Makefile.in: Regenerated.
	* src/gdb-advance/Makefile.in: Regenerated.
	* src/gdb-all-types/Makefile.in: Regenerated.
	* src/gdb-anon/Makefile.in: Regenerated.
	* src/gdb-arrayidx/Makefile.in: Regenerated.
	* src/gdb-async/Makefile.in: Regenerated.
	* src/gdb-bitfields/Makefile.in: Regenerated.
	* src/gdb-constvars/Makefile.in: Regenerated.
	* src/gdb-store/Makefile.in: Regenerated.
	* src/huffbench/Makefile.in: Regenerated.
	* src/insertsort/Makefile.in: Regenerated.
	* src/int_matmult/Makefile.in: Regenerated.
	* src/janne_complex/Makefile.in: Regenerated.
	* src/jfdctint/Makefile.in: Regenerated.
	* src/lcdnum/Makefile.in: Regenerated.
	* src/levenshtein/Makefile.in: Regenerated.
	* src/lms/Makefile.in: Regenerated.
	* src/ludcmp/Makefile.in: Regenerated.
	* src/mergesort/Makefile.in: Regenerated.
	* src/miniz/Makefile.in: Regenerated.
	* src/minver/Makefile.in: Regenerated.
	* src/nbody/Makefile.in: Regenerated.
	* src/ndes/Makefile.in: Regenerated.
	* src/nettle-arcfour/Makefile.in: Regenerated.
	* src/nettle-cast128/Makefile.in: Regenerated.
	* src/nettle-des/Makefile.in: Regenerated.
	* src/nettle-md5/Makefile.in: Regenerated.
	* src/newlib-exp/Makefile.in: Regenerated.
	* src/newlib-log/Makefile.in: Regenerated.
	* src/newlib-mod/Makefile.in: Regenerated.
	* src/newlib-sqrt/Makefile.in: Regenerated.
	* src/ns/Makefile.in: Regenerated.
	* src/nsichneu/Makefile.in: Regenerated.
	* src/picojpeg/Makefile.in: Regenerated.
	* src/prime/Makefile.in: Regenerated.
	* src/qrduino/Makefile.in: Regenerated.
	* src/qsort/Makefile.in: Regenerated.
	* src/qurt/Makefile.in: Regenerated.
	* src/recursion/Makefile.in: Regenerated.
	* src/rijndael/Makefile.in: Regenerated.
	* src/select/Makefile.in: Regenerated.
	* src/sglib-arraybinsearch/Makefile.in: Regenerated.
	* src/sglib-arraysort/Makefile.in: Regenerated.
	* src/sglib-arraysort1/Makefile.in: Regenerated.
	* src/sglib-dllist/Makefile.in: Regenerated.
	* src/sglib-hashtable/Makefile.in: Regenerated.
	* src/sglib-listinsertsort/Makefile.in: Regenerated.
	* src/sglib-listinsertsort1/Makefile.in: Regenerated.
	* src/sglib-listsort/Makefile.in: Regenerated.
	* src/sglib-queue/Makefile.in: Regenerated.
	* src/sglib-rbtree/Makefile.in: Regenerated.
	* src/sha/Makefile.in: Regenerated.
	* src/slre/Makefile.in: Regenerated.
	* src/sqrt/Makefile.in: Regenerated.
	* src/st/Makefile.in: Regenerated.
	* src/statemate/Makefile.in: Regenerated.
	* src/stb_perlin/Makefile.in: Regenerated.
	* src/stringsearch1/Makefile.in: Regenerated.
	* src/strstr/Makefile.in: Regenerated.
	* src/tarai/Makefile.in: Regenerated.
	* src/template/Makefile.in: Regenerated.
	* src/trio-snprintf/Makefile.in: Regenerated.
	* src/trio-sscanf/Makefile.in: Regenerated.
	* src/ud/Makefile.in: Regenerated.
	* src/whetstone/Makefile.in: Regenerated.
	* src/wikisort/Makefile.in: Regenerated.

2014-07-31  Andrew Burgess  <andrew.burgess@embecosm.com>

	* config/avr/chips/atmega328p/chip.cfg (EXCLUDED_BENCHMARKS):
	Include any existing benchmarks in the chip specific list.

2014-07-31  Andrew Burgess  <andrew.burgess@embecosm.com>

	* configure.ac: Turn on AM_SILENT_RULES by default.
	* configure: Regenerate.

2014-07-31  Andrew Burgess  <andrew.burgess@embecosm.com>

	* configure.ac: Move AM_INIT_AUTOMAKE earlier in the file, require
	automake 1.11 or later.
	* configure: Regenerate.

2014-07-31  Andrew Burgess  <andrew.burgess@embecosm.com>

	* .gitignore: Add doc/stamp-vti.

2014-07-31  Andrew Burgess  <andrew.burgess@embecosm.com>

	* configure.ac: Turn on maintainer mode by default.
	* configure: Regenerate.

2014-07-31  Andrew Burgess  <andrew.burgess@embecosm.com>

	* src/trio-snprintf/triop.h: Change file mode to remove execute
	permissions.

2014-07-31  Andrew Burgess  <andrew.burgess@embecosm.com>
	Import libtool.m4 from libtool 2.4.2

	* m4/libtool.m4: Import latest from libtool 2.4.2.
	* configure: Regenerate.

2014-07-31  Andrew Burgess  <andrew.burgess@embecosm.com>
	Reimport helper scripts from automake 1.14.1.

	* INSTALL: Take latest version from automake 1.14.1.
	* build-aux/config.guess: Likewise.
	* build-aux/config.sub: Likewise.
	* build-aux/depcomp: Likewise.
	* build-aux/mdate-sh: Likewise.
	* build-aux/missing: Likewise.
	* build-aux/texinfo.tex: Likewise.

2014-07-30  Andrew Burgess  <andrew.burgess@embecosm.com>
	Add support for building for x86_64 platforms.

	* config/x86_64/chips/generic/chip.cfg: New file.
	* config/x86_64/chips/generic/chipsupport.h: New file.

2014-07-24  James Pallister  <james.pallister@bristol.ac.uk>
	Small fixes to build system for calibration

	* configure: Regenerated
	* configure.ac: Fix: correctly use variable (missing $)
	* include/support.h: Define BOARD_REPEAT_FACTOR if the header does not
	* src/2dfir/Makefile.in: Regenerated
	* src/adpcm/Makefile.in: Regenerated
	* src/aha-compress/Makefile.in: Regenerated
	* src/aha-mont64/Makefile.in: Regenerated
	* src/blowfish/Makefile.in: Regenerated
	* src/bs/Makefile.in: Regenerated
	* src/bsort100/Makefile.in: Regenerated
	* src/bubblesort/Makefile.in: Regenerated
	* src/cnt/Makefile.in: Regenerated
	* src/common.mk.am: Fix: Bracket the first expression, since || takes
	    precedence over |
	* src/compress/Makefile.in: Regenerated
	* src/cover/Makefile.in: Regenerated
	* src/crc/Makefile.in: Regenerated
	* src/crc32/Makefile.in: Regenerated
	* src/ctl-stack/Makefile.in: Regenerated
	* src/ctl-string/Makefile.in: Regenerated
	* src/ctl-vector/Makefile.in: Regenerated
	* src/cubic/Makefile.in: Regenerated
	* src/dhrystone/Makefile.in: Regenerated
	* src/dijkstra/Makefile.in: Regenerated
	* src/dtoa/Makefile.in: Regenerated
	* src/duff/Makefile.in: Regenerated
	* src/edn/Makefile.in: Regenerated
	* src/expint/Makefile.in: Regenerated
	* src/fac/Makefile.in: Regenerated
	* src/fasta/Makefile.in: Regenerated
	* src/fdct/Makefile.in: Regenerated
	* src/fft/Makefile.in: Regenerated
	* src/fibcall/Makefile.in: Regenerated
	* src/fir/Makefile.in: Regenerated
	* src/float_matmult/Makefile.in: Regenerated
	* src/frac/Makefile.in: Regenerated
	* src/gdb-advance/Makefile.in: Regenerated
	* src/gdb-all-types/Makefile.in: Regenerated
	* src/gdb-anon/Makefile.in: Regenerated
	* src/gdb-arrayidx/Makefile.in: Regenerated
	* src/gdb-async/Makefile.in: Regenerated
	* src/gdb-bitfields/Makefile.in: Regenerated
	* src/gdb-constvars/Makefile.in: Regenerated
	* src/gdb-store/Makefile.in: Regenerated
	* src/huffbench/Makefile.in: Regenerated
	* src/insertsort/Makefile.in: Regenerated
	* src/int_matmult/Makefile.in: Regenerated
	* src/janne_complex/Makefile.in: Regenerated
	* src/jfdctint/Makefile.in: Regenerated
	* src/lcdnum/Makefile.in: Regenerated
	* src/levenshtein/Makefile.in: Regenerated
	* src/lms/Makefile.in: Regenerated
	* src/ludcmp/Makefile.in: Regenerated
	* src/mergesort/Makefile.in: Regenerated
	* src/miniz/Makefile.in: Regenerated
	* src/minver/Makefile.in: Regenerated
	* src/nbody/Makefile.in: Regenerated
	* src/ndes/Makefile.in: Regenerated
	* src/nettle-arcfour/Makefile.in: Regenerated
	* src/nettle-cast128/Makefile.in: Regenerated
	* src/nettle-des/Makefile.in: Regenerated
	* src/nettle-md5/Makefile.in: Regenerated
	* src/newlib-exp/Makefile.in: Regenerated
	* src/newlib-log/Makefile.in: Regenerated
	* src/newlib-mod/Makefile.in: Regenerated
	* src/newlib-sqrt/Makefile.in: Regenerated
	* src/ns/Makefile.in: Regenerated
	* src/nsichneu/Makefile.in: Regenerated
	* src/picojpeg/Makefile.in: Regenerated
	* src/prime/Makefile.in: Regenerated
	* src/qrduino/Makefile.in: Regenerated
	* src/qsort/Makefile.in: Regenerated
	* src/qurt/Makefile.in: Regenerated
	* src/recursion/Makefile.in: Regenerated
	* src/rijndael/Makefile.in: Regenerated
	* src/select/Makefile.in: Regenerated
	* src/sglib-arraybinsearch/Makefile.in: Regenerated
	* src/sglib-arraysort/Makefile.in: Regenerated
	* src/sglib-arraysort1/Makefile.in: Regenerated
	* src/sglib-dllist/Makefile.in: Regenerated
	* src/sglib-hashtable/Makefile.in: Regenerated
	* src/sglib-listinsertsort/Makefile.in: Regenerated
	* src/sglib-listinsertsort1/Makefile.in: Regenerated
	* src/sglib-listsort/Makefile.in: Regenerated
	* src/sglib-queue/Makefile.in: Regenerated
	* src/sglib-rbtree/Makefile.in: Regenerated
	* src/sha/Makefile.in: Regenerated
	* src/slre/Makefile.in: Regenerated
	* src/sqrt/Makefile.in: Regenerated
	* src/st/Makefile.in: Regenerated
	* src/statemate/Makefile.in: Regenerated
	* src/stb_perlin/Makefile.in: Regenerated
	* src/stringsearch1/Makefile.in: Regenerated
	* src/strstr/Makefile.in: Regenerated
	* src/tarai/Makefile.in: Regenerated
	* src/template/Makefile.in: Regenerated
	* src/trio-snprintf/Makefile.in: Regenerated
	* src/trio-sscanf/Makefile.in: Regenerated
	* src/ud/Makefile.in: Regenerated
	* src/whetstone/Makefile.in: Regenerated
	* src/wikisort/Makefile.in: Regenerated

2014-07-22  James Pallister  <james.pallister@bristol.ac.uk>
	Added initial calibration file for AVR shrimp

	* config/avr/boards/shrimp/calibration: Initial calibration file with
	    values for 2dfir and crc32

2014-07-22  James Pallister  <james.pallister@bristol.ac.uk>
	Calibration for each benchmark can be specified on a per board basis.
	A calibration file can be specified in the config directory, which is
	used at compile time to specify the per benchmark scaling factor.

	* configure.ac: Test whether a calibration file is present. If so,
	    report which benchmarks are uncalibrated.
	* doc/beebs.info: Updated documentation to mention calibration, and
	    the changed REPEAT_FACTOR
	* doc/beebs.texi: Updated documentation to mention calibration, and
	    the changed REPEAT_FACTOR
	* include/support.h: Change REPEAT_FACTOR to BOARD_REPEAT_FACTOR and
	    add new definition of REPEAT_FACTOR
	* src/common.mk.am: Grep through the calibration file to find the
	    number needed, and add this to the CFLAGS for this benchmark.

	* src/*/Makefile.in: Regenerated
	* config.h.in: Regenerated
	* configure: Regenerated

2014-07-22  James Pallister  <james.pallister@bristol.ac.uk>
	Fix compilation of trio benchmarks on AVR

	* src/trio-snprintf/trio.c: Remove references to mblen
	* src/trio-snprintf/triostr.h: Remove dependency on time.h
	* src/trio-sscanf/trio.c: Remove references to mblen
	* src/trio-sscanf/triostr.h: Remove dependency on time.h

2014-07-22  James Pallister  <james.pallister@bristol.ac.uk>
	Fix expint so that it does not get compiled away with optimizations

	* src/expint/expint.c: Make the return value volatile so it does not
	    get optimized away

2014-07-19  James Pallister  <james.pallister@bristol.ac.uk>
	Added the qrduino benchmark

	* configure: Regenerated
	* configure.ac: Added the qrduino benchmark
	* src/qrduino/Makefile.am: Makefile for qrduino
	* src/qrduino/Makefile.in: Generated
	* src/qrduino/ecctable.h: qrduino library code
	* src/qrduino/qrbits.h: qrduino library code
	* src/qrduino/qrencode.c: qrduino library code
	* src/qrduino/qrencode.h: qrduino library code
	* src/qrduino/qrframe.c: qrduino library code
	* src/qrduino/qrtest.c: qrduino test code

2014-07-14  James Pallister  <james.pallister@bristol.ac.uk>
	Add the compress and mont64 benchmarks from the Hacker's Delight
	book's code

	* configure: Regenerated
	* configure.ac: Add aha-compress and aha-mont64
	* src/aha-compress/Makefile.am: Makefile for aha-compress
	* src/aha-compress/Makefile.in: Regenerated
	* src/aha-compress/compress_test.c: Benchmark test for compress
	* src/aha-mont64/Makefile.am: Makefile for aha-mont64
	* src/aha-mont64/Makefile.in: Regenerated
	* src/aha-mont64/mont64.c: Benchmark file for montgomery
	    multiplication

2014-06-06  Pierre Langlois  <pierre.langlois@embecosm.com>

	* src/bsort100/bsort100.c: Remove K&R style functions.
	* src/bubblesort/bubblesort.c: Likewise.
	* src/dhrystone/dhry.h: Likewise.
	* src/dhrystone/dhry_1.c: Likewise.
	* src/dhrystone/dhry_2.c: Likewise.
	* src/frac/frac.c: Likewise.
	* src/lms/lms.c: Likewise.
	* src/qurt/qurt.c: Likewise.
	* src/st/st.c: Likewise.

2014-07-09  George Field  <george.field@bristol.ac.uk>
	Make stb_perlin self checking and fix some bugs, including array
	out-of-bounds access. Adjusted SCALE_FACTOR to a reasonable timeframe.

	* src/stb_perlin/stb_perlin.c: Fixed array access bug and made
	    benchmark self-checking.

2014-07-07  George Field  <george.field@bristol.ac.uk>
	Rewrite LDFLAGS configuration for stb_perlin to avoid overriding
	AM_LDFLAGS

	* src/stb_perlin/Makefile.am: Rewrite to add LDFLAGS to AM_LDFLAGS
	* src/stb_perlin/Makefile.in: Regenerated

2014-07-07  George Field  <george.field@bristol.ac.uk>
	Added stb_perlin benchmark

	* configure: Regenerated
	* configure.ac: Added stb_perlin benchmark
	* src/stb_perlin/Makefile.am: Makefile.am for stb_perlin
	* src/stb_perlin/Makefile.in: Generated
	* src/stb_perlin/stb_perlin.c: Benchmarking perlin noise generation

2014-07-07  James Pallister  <james.pallister@bristol.ac.uk>
	Added picojpeg benchmark

	* configure: Regenerated
	* configure.ac: Added picojpeg benchmark
	* src/picojpeg/Makefile.am: Makefile.am for picojpeg
	* src/picojpeg/Makefile.in: Regenerated
	* src/picojpeg/picojpeg.c: Library file for picojpeg
	* src/picojpeg/picojpeg.h: Library file for picojpeg
	* src/picojpeg/picojpeg_test.c: Benchmark file for picojpeg

2014-07-07  James Pallister  <james.pallister@bristol.ac.uk>
	Rewrite the saving of LDFLAGS in configure. save_LDFLAGS is used
	internally by autoconf, so destroys our variable. The previous value
	must be saved otherwise LDFLAGS gets substituted in twice, causing
	duplicate libraries and linkerscripts on some platforms. Duplicate
	linkerscripts is particularly a problem, causing everything to go
	horrifically wrong.

	* configure: Regenerated
	* configure.ac: Use confsave_LDFLAGS instead of save_LDFLAGS
	* src/cubic/Makefile.am: Rewrite to add LDFLAGS to AM_LDFLAGS, since
	    using program_LDFLAGS causes AM_LDFLAGS not to be included
	* src/cubic/Makefile.in: Regenerated
	* src/fft/Makefile.am: Rewrite to add LDFLAGS to AM_LDFLAGS, since
	    using program_LDFLAGS causes AM_LDFLAGS not to be included
	* src/fft/Makefile.in: Regenerated
	* src/float_matmult/Makefile.am: Rewrite to add LDFLAGS to AM_LDFLAGS,
	    since using program_LDFLAGS causes AM_LDFLAGS not to be included
	* src/float_matmult/Makefile.in: Regenerated
	* src/nbody/Makefile.am: Rewrite to add LDFLAGS to AM_LDFLAGS, since
	    using program_LDFLAGS causes AM_LDFLAGS not to be included
	* src/nbody/Makefile.in: Regenerated
	* src/st/Makefile.am: Rewrite to add LDFLAGS to AM_LDFLAGS, since
	    using program_LDFLAGS causes AM_LDFLAGS not to be included
	* src/st/Makefile.in: Regenerated
	* src/trio-snprintf/Makefile.in: Rewrite to add LDFLAGS to AM_LDFLAGS,
	    since using program_LDFLAGS causes AM_LDFLAGS not to be included
	* src/trio-sscanf/Makefile.in: Regenerated
	* src/whetstone/Makefile.am: Rewrite to add LDFLAGS to AM_LDFLAGS,
	    since using program_LDFLAGS causes AM_LDFLAGS not to be included
	* src/whetstone/Makefile.in: Regenerated
	* src/wikisort/Makefile.am: Rewrite to add LDFLAGS to AM_LDFLAGS,
	    since using program_LDFLAGS causes AM_LDFLAGS not to be included
	* src/wikisort/Makefile.in: Regenerated

2014-07-07  James Pallister  <james.pallister@bristol.ac.uk>
	Revert commit 74409cb, we do need to save the CFLAGS and LDFLAGS. It
	however needs to be done properly.

	* Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Reverted
	* src/2dfir/Makefile.in: Regenerated
	* src/adpcm/Makefile.in: Regenerated
	* src/blowfish/Makefile.in: Regenerated
	* src/bs/Makefile.in: Regenerated
	* src/bsort100/Makefile.in: Regenerated
	* src/bubblesort/Makefile.in: Regenerated
	* src/cnt/Makefile.in: Regenerated
	* src/common.mk.am: Reverted
	* src/compress/Makefile.in: Regenerated
	* src/cover/Makefile.in: Regenerated
	* src/crc/Makefile.in: Regenerated
	* src/crc32/Makefile.in: Regenerated
	* src/ctl-stack/Makefile.in: Regenerated
	* src/ctl-string/Makefile.in: Regenerated
	* src/ctl-vector/Makefile.in: Regenerated
	* src/cubic/Makefile.in: Regenerated
	* src/dhrystone/Makefile.in: Regenerated
	* src/dijkstra/Makefile.in: Regenerated
	* src/dtoa/Makefile.in: Regenerated
	* src/duff/Makefile.in: Regenerated
	* src/edn/Makefile.in: Regenerated
	* src/expint/Makefile.in: Regenerated
	* src/fac/Makefile.in: Regenerated
	* src/fasta/Makefile.in: Regenerated
	* src/fdct/Makefile.in: Regenerated
	* src/fft/Makefile.in: Regenerated
	* src/fibcall/Makefile.in: Regenerated
	* src/fir/Makefile.in: Regenerated
	* src/float_matmult/Makefile.in: Regenerated
	* src/frac/Makefile.in: Regenerated
	* src/gdb-advance/Makefile.in: Regenerated
	* src/gdb-all-types/Makefile.in: Regenerated
	* src/gdb-anon/Makefile.in: Regenerated
	* src/gdb-arrayidx/Makefile.in: Regenerated
	* src/gdb-async/Makefile.in: Regenerated
	* src/gdb-bitfields/Makefile.in: Regenerated
	* src/gdb-constvars/Makefile.in: Regenerated
	* src/gdb-store/Makefile.in: Regenerated
	* src/huffbench/Makefile.in: Regenerated
	* src/insertsort/Makefile.in: Regenerated
	* src/int_matmult/Makefile.in: Regenerated
	* src/janne_complex/Makefile.in: Regenerated
	* src/jfdctint/Makefile.in: Regenerated
	* src/lcdnum/Makefile.in: Regenerated
	* src/levenshtein/Makefile.in: Regenerated
	* src/lms/Makefile.in: Regenerated
	* src/ludcmp/Makefile.in: Regenerated
	* src/mergesort/Makefile.in: Regenerated
	* src/miniz/Makefile.in: Regenerated
	* src/minver/Makefile.in: Regenerated
	* src/nbody/Makefile.in: Regenerated
	* src/ndes/Makefile.in: Regenerated
	* src/nettle-arcfour/Makefile.in: Regenerated
	* src/nettle-cast128/Makefile.in: Regenerated
	* src/nettle-des/Makefile.in: Regenerated
	* src/nettle-md5/Makefile.in: Regenerated
	* src/newlib-exp/Makefile.in: Regenerated
	* src/newlib-log/Makefile.in: Regenerated
	* src/newlib-mod/Makefile.in: Regenerated
	* src/newlib-sqrt/Makefile.in: Regenerated
	* src/ns/Makefile.in: Regenerated
	* src/nsichneu/Makefile.in: Regenerated
	* src/prime/Makefile.in: Regenerated
	* src/qsort/Makefile.in: Regenerated
	* src/qurt/Makefile.in: Regenerated
	* src/recursion/Makefile.in: Regenerated
	* src/rijndael/Makefile.in: Regenerated
	* src/select/Makefile.in: Regenerated
	* src/sglib-arraybinsearch/Makefile.in: Regenerated
	* src/sglib-arraysort/Makefile.in: Regenerated
	* src/sglib-arraysort1/Makefile.in: Regenerated
	* src/sglib-dllist/Makefile.in: Regenerated
	* src/sglib-hashtable/Makefile.in: Regenerated
	* src/sglib-listinsertsort/Makefile.in: Regenerated
	* src/sglib-listinsertsort1/Makefile.in: Regenerated
	* src/sglib-listsort/Makefile.in: Regenerated
	* src/sglib-queue/Makefile.in: Regenerated
	* src/sglib-rbtree/Makefile.in: Regenerated
	* src/sha/Makefile.in: Regenerated
	* src/slre/Makefile.in: Regenerated
	* src/sqrt/Makefile.in: Regenerated
	* src/st/Makefile.in: Regenerated
	* src/statemate/Makefile.in: Regenerated
	* src/stringsearch1/Makefile.in: Regenerated
	* src/strstr/Makefile.in: Regenerated
	* src/tarai/Makefile.in: Regenerated
	* src/template/Makefile.in: Regenerated
	* src/ud/Makefile.in: Regenerated
	* src/whetstone/Makefile.in: Regenerated
	* src/wikisort/Makefile.in: Regenerated

2014-07-07  James Pallister  <james.pallister@bristol.ac.uk>
	Added trio-sscanf benchmark

	* configure: Regenerated
	* configure.ac: Added trio-sscanf benchmark
	* src/trio-sscanf/Makefile.am: Makefile.am for trio-sscanf
	* src/trio-sscanf/Makefile.in: Generated
	* src/trio-sscanf/trio.c: Library file for trio
	* src/trio-sscanf/trio.h: Library file for trio
	* src/trio-sscanf/trio_test.c: Benchmarking trio_sscanf
	* src/trio-sscanf/triodef.h: Library file for trio
	* src/trio-sscanf/triop.h: Library file for trio
	* src/trio-sscanf/triostr.c: Library file for trio
	* src/trio-sscanf/triostr.h: Library file for trio

2014-07-07  James Pallister  <james.pallister@bristol.ac.uk>
	Compilation fix for trio-snprintf and renamed benchmark to be trio-
	snprintf

	* src/trio-snprintf/Makefile.am: Renamed trio to trio-snprintf
	* src/trio-snprintf/Makefile.in: Regenerated
	* src/trio-snprintf/trio.c: Removed dependencies on trionan.{c,h}

2014-07-07  James Pallister  <james.pallister@bristol.ac.uk>
	Added a test of the snprintf function provided by the trio library

	* configure: Regenerated
	* configure.ac: Added trio-snprintf benchmark
	* src/trio-snprintf/Makefile.am: Makefile.am for trio-snprintf
	* src/trio-snprintf/Makefile.in: Regenerated
	* src/trio-snprintf/trio.c: Main library file for trio
	* src/trio-snprintf/trio.h: Main header for trio
	* src/trio-snprintf/trio_test.c: Benchmark test file for trio-snprintf
	* src/trio-snprintf/triodef.h: Part of trio library
	* src/trio-snprintf/triop.h: Part of trio library
	* src/trio-snprintf/triostr.c: Part of trio library
	* src/trio-snprintf/triostr.h: Part of trio library

2014-07-02  James Pallister  <james.pallister@bristol.ac.uk>
	Added the ability to use a chipsupport.c file, if present. This is
	implemented as an automake conditional, decided at configure time on
	whether the file exists

	* config/arm/chips/stm32f051/chipsupport.c: Chip support file for the
	    stm32f051 chip
	* config/arm/chips/stm32f100/chipsupport.c: Chip support file for the
	    stm32f051 chip
	* configure: Regenerated
	* configure.ac: Conditional test on existance of the chipsupport.c
	    file
	* src/2dfir/Makefile.in: Regenerated
	* src/adpcm/Makefile.in: Regenerated
	* src/blowfish/Makefile.in: Regenerated
	* src/bs/Makefile.in: Regenerated
	* src/bsort100/Makefile.in: Regenerated
	* src/bubblesort/Makefile.in: Regenerated
	* src/cnt/Makefile.in: Regenerated
	* src/common.mk.am: Conditionally compile in chipsupport.c
	* src/compress/Makefile.in: Regenerated
	* src/cover/Makefile.in: Regenerated
	* src/crc/Makefile.in: Regenerated
	* src/crc32/Makefile.in: Regenerated
	* src/ctl-stack/Makefile.in: Regenerated
	* src/ctl-string/Makefile.in: Regenerated
	* src/ctl-vector/Makefile.in: Regenerated
	* src/cubic/Makefile.in: Regenerated
	* src/dhrystone/Makefile.in: Regenerated
	* src/dijkstra/Makefile.in: Regenerated
	* src/dtoa/Makefile.in: Regenerated
	* src/duff/Makefile.in: Regenerated
	* src/edn/Makefile.in: Regenerated
	* src/expint/Makefile.in: Regenerated
	* src/fac/Makefile.in: Regenerated
	* src/fasta/Makefile.in: Regenerated
	* src/fdct/Makefile.in: Regenerated
	* src/fft/Makefile.in: Regenerated
	* src/fibcall/Makefile.in: Regenerated
	* src/fir/Makefile.in: Regenerated
	* src/float_matmult/Makefile.in: Regenerated
	* src/frac/Makefile.in: Regenerated
	* src/gdb-advance/Makefile.in: Regenerated
	* src/gdb-all-types/Makefile.in: Regenerated
	* src/gdb-anon/Makefile.in: Regenerated
	* src/gdb-arrayidx/Makefile.in: Regenerated
	* src/gdb-async/Makefile.in: Regenerated
	* src/gdb-bitfields/Makefile.in: Regenerated
	* src/gdb-constvars/Makefile.in: Regenerated
	* src/gdb-store/Makefile.in: Regenerated
	* src/huffbench/Makefile.in: Regenerated
	* src/insertsort/Makefile.in: Regenerated
	* src/int_matmult/Makefile.in: Regenerated
	* src/janne_complex/Makefile.in: Regenerated
	* src/jfdctint/Makefile.in: Regenerated
	* src/lcdnum/Makefile.in: Regenerated
	* src/levenshtein/Makefile.in: Regenerated
	* src/lms/Makefile.in: Regenerated
	* src/ludcmp/Makefile.in: Regenerated
	* src/mergesort/Makefile.in: Regenerated
	* src/miniz/Makefile.in: Regenerated
	* src/minver/Makefile.in: Regenerated
	* src/nbody/Makefile.in: Regenerated
	* src/ndes/Makefile.in: Regenerated
	* src/nettle-arcfour/Makefile.in: Regenerated
	* src/nettle-cast128/Makefile.in: Regenerated
	* src/nettle-des/Makefile.in: Regenerated
	* src/nettle-md5/Makefile.in: Regenerated
	* src/newlib-exp/Makefile.in: Regenerated
	* src/newlib-log/Makefile.in: Regenerated
	* src/newlib-mod/Makefile.in: Regenerated
	* src/newlib-sqrt/Makefile.in: Regenerated
	* src/ns/Makefile.in: Regenerated
	* src/nsichneu/Makefile.in: Regenerated
	* src/prime/Makefile.in: Regenerated
	* src/qsort/Makefile.in: Regenerated
	* src/qurt/Makefile.in: Regenerated
	* src/recursion/Makefile.in: Regenerated
	* src/rijndael/Makefile.in: Regenerated
	* src/select/Makefile.in: Regenerated
	* src/sglib-arraybinsearch/Makefile.in: Regenerated
	* src/sglib-arraysort/Makefile.in: Regenerated
	* src/sglib-arraysort1/Makefile.in: Regenerated
	* src/sglib-dllist/Makefile.in: Regenerated
	* src/sglib-hashtable/Makefile.in: Regenerated
	* src/sglib-listinsertsort/Makefile.in: Regenerated
	* src/sglib-listinsertsort1/Makefile.in: Regenerated
	* src/sglib-listsort/Makefile.in: Regenerated
	* src/sglib-queue/Makefile.in: Regenerated
	* src/sglib-rbtree/Makefile.in: Regenerated
	* src/sha/Makefile.in: Regenerated
	* src/slre/Makefile.in: Regenerated
	* src/sqrt/Makefile.in: Regenerated
	* src/st/Makefile.in: Regenerated
	* src/statemate/Makefile.in: Regenerated
	* src/stringsearch1/Makefile.in: Regenerated
	* src/strstr/Makefile.in: Regenerated
	* src/tarai/Makefile.in: Regenerated
	* src/template/Makefile.in: Regenerated
	* src/ud/Makefile.in: Regenerated
	* src/whetstone/Makefile.in: Regenerated
	* src/wikisort/Makefile.in: Regenerated

2014-07-02  James Pallister  <james.pallister@bristol.ac.uk>
	Added the ability to specify default chips with a board.

	* config/arm/boards/stm32f0discovery/board.cfg: If there is no chip
	    specified on the command line, select the stm32f051
	* config/arm/boards/stm32vldiscovery/board.cfg: If there is no chip
	    specified on the command line, select the stm32f100
	* configure: Regenerated
	* configure.ac: Reordered the sourcing of the various cfg files, since
	    this needs to happen before variables are substituted (board.cfg
	    could modify $chip)

2014-07-02  James Pallister  <james.pallister@bristol.ac.uk>
	Added proper configuration for the STM32VLDISCOVERY and
	STM32F0DISCOVERY boards, with example linkerscripts

	* config/arm/chips/stm32f051/chip.cfg: Set the CFLAGS and LDFLAGS for
	    this chip
	* config/arm/chips/stm32f051/chip.ld: Example linkerscript specifying
	    the memory regions for this chip
	* config/arm/chips/stm32f100/chip.cfg: Set the CFLAGS and LDFLAGS for
	    this chip
	* config/arm/chips/stm32f100/chip.ld: Example linkerscript specifying
	    the memory regions for this chip

2014-07-02  James Pallister  <james.pallister@bristol.ac.uk>
	Properly save CFLAGS and LDFLAGS before running the configure checks

	* configure: Regenerated
	* configure.ac: Properly save CFLAGS and LDFLAGS before running the
	    configure checks

2014-07-03  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* src/fdct/fdct.c: Include name changed.
	(int main): Correct initialization function name.

2014-07-03  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* src/fdct/fdct.c: Use ANSI style comments and 80 column
	throughout.  Correct expected value for block[12].  Add GPL header.
	(void fdct): Use long int instead of int for all temporaries.
	(int main): Use long int where needed.  Add check blocks for 1 and
	4096 transformations and use where appropriate.

2014-06-25  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	Added first version of documentation.

	* INSTALL: Regenerated.
	* Makefile.am: Add doc subdir
	* Makefile.in: Regenerated.
	* aclocal.m4: Regenerated.
	* build-aux/config.guess: Regenerated.
	* build-aux/config.sub: Regenerated.
	* build-aux/depcomp: Regenerated.
	* build-aux/ltmain.sh: Regenerated
	* build-aux/missing: Regenerated.
	* configure.ac: Add Makefile for doc subdir
	* m4/libtool.m4: Regenerated.
	* src/2dfir/Makefile.in: Regenerated.
	* src/adpcm/Makefile.in: Regenerated.
	* src/blowfish/Makefile.in: Regenerated.
	* src/bs/Makefile.in: Regenerated.
	* src/bsort100/Makefile.in: Regenerated.
	* src/bubblesort/Makefile.in: Regenerated.
	* src/cnt/Makefile.in: Regenerated.
	* src/compress/Makefile.in: Regenerated.
	* src/cover/Makefile.in: Regenerated.
	* src/crc/Makefile.in: Regenerated.
	* src/crc32/Makefile.in: Regenerated.
	* src/ctl-stack/Makefile.in: Regenerated.
	* src/ctl-string/Makefile.in: Regenerated.
	* src/ctl-vector/Makefile.in: Regenerated.
	* src/cubic/Makefile.in: Regenerated.
	* src/dhrystone/Makefile.in: Regenerated.
	* src/dijkstra/Makefile.in: Regenerated.
	* doc/Makefile.am: Created.
	* doc/Makefile.in: Generated.
	* doc/beebs.info: Generated.
	* doc/beebs.texi: Created.
	* doc/config.texi: Created.
	* doc/fdl-1.2.texi: Created.
	* doc/texinfo.tex: Generated.
	* doc/version.texi: Generated.
	* src/dtoa/Makefile.in: Regenerated.
	* src/duff/Makefile.in: Regenerated.
	* src/edn/Makefile.in: Regenerated.
	* src/expint/Makefile.in: Regenerated.
	* src/fac/Makefile.in: Regenerated.
	* src/fasta/Makefile.in: Regenerated.
	* src/fdct/Makefile.in: Regenerated.
	* src/fft/Makefile.in: Regenerated.
	* src/fibcall/Makefile.in: Regenerated.
	* src/fir/Makefile.in: Regenerated.
	* src/float_matmult/Makefile.in: Regenerated.
	* src/frac/Makefile.in: Regenerated.
	* src/gdb-advance/Makefile.in: Regenerated.
	* src/gdb-all-types/Makefile.in: Regenerated.
	* src/gdb-anon/Makefile.in: Regenerated.
	* src/gdb-arrayidx/Makefile.in: Regenerated.
	* src/gdb-async/Makefile.in: Regenerated.
	* src/gdb-bitfields/Makefile.in: Regenerated.
	* src/gdb-constvars/Makefile.in: Regenerated.
	* src/gdb-store/Makefile.in: Regenerated.
	* src/huffbench/Makefile.in: Regenerated.
	* src/insertsort/Makefile.in: Regenerated.
	* src/int_matmult/Makefile.in: Regenerated.
	* src/janne_complex/Makefile.in: Regenerated.
	* src/jfdctint/Makefile.in: Regenerated.
	* src/lcdnum/Makefile.in: Regenerated.
	* src/levenshtein/Makefile.in: Regenerated.
	* src/lms/Makefile.in: Regenerated.
	* src/ludcmp/Makefile.in: Regenerated.
	* src/mergesort/Makefile.in: Regenerated.
	* src/miniz/Makefile.in: Regenerated.
	* src/minver/Makefile.in: Regenerated.
	* src/nbody/Makefile.in: Regenerated.
	* src/ndes/Makefile.in: Regenerated.
	* src/nettle-arcfour/Makefile.in: Regenerated.
	* src/nettle-cast128/Makefile.in: Regenerated.
	* src/nettle-des/Makefile.in: Regenerated.
	* src/nettle-md5/Makefile.in: Regenerated.
	* src/newlib-exp/Makefile.in: Regenerated.
	* src/newlib-log/Makefile.in: Regenerated.
	* src/newlib-mod/Makefile.in: Regenerated.
	* src/newlib-sqrt/Makefile.in: Regenerated.
	* src/ns/Makefile.in: Regenerated.
	* src/nsichneu/Makefile.in: Regenerated.
	* src/prime/Makefile.in: Regenerated.
	* src/qsort/Makefile.in: Regenerated.
	* src/qurt/Makefile.in: Regenerated.
	* src/recursion/Makefile.in: Regenerated.
	* src/rijndael/Makefile.in: Regenerated.
	* src/select/Makefile.in: Regenerated.
	* src/sglib-arraybinsearch/Makefile.in: Regenerated.
	* src/sglib-arraysort/Makefile.in: Regenerated.
	* src/sglib-arraysort1/Makefile.in: Regenerated.
	* src/sglib-dllist/Makefile.in: Regenerated.
	* src/sglib-hashtable/Makefile.in: Regenerated.
	* src/sglib-listinsertsort/Makefile.in: Regenerated.
	* src/sglib-listinsertsort1/Makefile.in: Regenerated.
	* src/sglib-listsort/Makefile.in: Regenerated.
	* src/sglib-queue/Makefile.in: Regenerated.
	* src/sglib-rbtree/Makefile.in: Regenerated.
	* src/sha/Makefile.in: Regenerated.
	* src/slre/Makefile.in: Regenerated.
	* src/sqrt/Makefile.in: Regenerated.
	* src/st/Makefile.in: Regenerated.
	* src/statemate/Makefile.in: Regenerated.
	* src/stringsearch1/Makefile.in: Regenerated.
	* src/strstr/Makefile.in: Regenerated.
	* src/tarai/Makefile.in: Regenerated.
	* src/template/Makefile.in: Regenerated.
	* src/ud/Makefile.in: Regenerated.
	* src/whetstone/Makefile.in: Regenerated.
	* src/wikisort/Makefile.in: Regenerated.


2014-06-11  James Pallister  <james.pallister@bristol.ac.uk>

	Fixed the CFLAGS and LDFLAGS so that if custom flags are given to make
	the do not wipe out the flags defined by the config

	* Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Config flags are now placed into CONFIG_CFLAGS and
	    CONFIG_LDFLAGS for substitution into the Makefiles
	* src/2dfir/Makefile.in: Regenerated
	* src/adpcm/Makefile.in: Regenerated
	* src/blowfish/Makefile.in: Regenerated
	* src/bs/Makefile.in: Regenerated
	* src/bsort100/Makefile.in: Regenerated
	* src/bubblesort/Makefile.in: Regenerated
	* src/cnt/Makefile.in: Regenerated
	* src/common.mk.am: Use CONFIG_CFLAGS and CONFIG_LDFLAGS when
	    constructing AM_CFLAGS and AM_LDFLAGS
	* src/compress/Makefile.in: Regenerated
	* src/cover/Makefile.in: Regenerated
	* src/crc/Makefile.in: Regenerated
	* src/crc32/Makefile.in: Regenerated
	* src/ctl-stack/Makefile.in: Regenerated
	* src/ctl-string/Makefile.in: Regenerated
	* src/ctl-vector/Makefile.in: Regenerated
	* src/cubic/Makefile.in: Regenerated
	* src/dhrystone/Makefile.in: Regenerated
	* src/dijkstra/Makefile.in: Regenerated
	* src/dtoa/Makefile.in: Regenerated
	* src/duff/Makefile.in: Regenerated
	* src/edn/Makefile.in: Regenerated
	* src/expint/Makefile.in: Regenerated
	* src/fac/Makefile.in: Regenerated
	* src/fasta/Makefile.in: Regenerated
	* src/fdct/Makefile.in: Regenerated
	* src/fft/Makefile.in: Regenerated
	* src/fibcall/Makefile.in: Regenerated
	* src/fir/Makefile.in: Regenerated
	* src/float_matmult/Makefile.in: Regenerated
	* src/frac/Makefile.in: Regenerated
	* src/gdb-advance/Makefile.in: Regenerated
	* src/gdb-all-types/Makefile.in: Regenerated
	* src/gdb-anon/Makefile.in: Regenerated
	* src/gdb-arrayidx/Makefile.in: Regenerated
	* src/gdb-async/Makefile.in: Regenerated
	* src/gdb-bitfields/Makefile.in: Regenerated
	* src/gdb-constvars/Makefile.in: Regenerated
	* src/gdb-store/Makefile.in: Regenerated
	* src/huffbench/Makefile.in: Regenerated
	* src/insertsort/Makefile.in: Regenerated
	* src/int_matmult/Makefile.in: Regenerated
	* src/janne_complex/Makefile.in: Regenerated
	* src/jfdctint/Makefile.in: Regenerated
	* src/lcdnum/Makefile.in: Regenerated
	* src/levenshtein/Makefile.in: Regenerated
	* src/lms/Makefile.in: Regenerated
	* src/ludcmp/Makefile.in: Regenerated
	* src/mergesort/Makefile.in: Regenerated
	* src/miniz/Makefile.in: Regenerated
	* src/minver/Makefile.in: Regenerated
	* src/nbody/Makefile.in: Regenerated
	* src/ndes/Makefile.in: Regenerated
	* src/nettle-arcfour/Makefile.in: Regenerated
	* src/nettle-cast128/Makefile.in: Regenerated
	* src/nettle-des/Makefile.in: Regenerated
	* src/nettle-md5/Makefile.in: Regenerated
	* src/newlib-exp/Makefile.in: Regenerated
	* src/newlib-log/Makefile.in: Regenerated
	* src/newlib-mod/Makefile.in: Regenerated
	* src/newlib-sqrt/Makefile.in: Regenerated
	* src/ns/Makefile.in: Regenerated
	* src/nsichneu/Makefile.in: Regenerated
	* src/prime/Makefile.in: Regenerated
	* src/qsort/Makefile.in: Regenerated
	* src/qurt/Makefile.in: Regenerated
	* src/recursion/Makefile.in: Regenerated
	* src/rijndael/Makefile.in: Regenerated
	* src/select/Makefile.in: Regenerated
	* src/sglib-arraybinsearch/Makefile.in: Regenerated
	* src/sglib-arraysort/Makefile.in: Regenerated
	* src/sglib-arraysort1/Makefile.in: Regenerated
	* src/sglib-dllist/Makefile.in: Regenerated
	* src/sglib-hashtable/Makefile.in: Regenerated
	* src/sglib-listinsertsort/Makefile.in: Regenerated
	* src/sglib-listinsertsort1/Makefile.in: Regenerated
	* src/sglib-listsort/Makefile.in: Regenerated
	* src/sglib-queue/Makefile.in: Regenerated
	* src/sglib-rbtree/Makefile.in: Regenerated
	* src/sha/Makefile.in: Regenerated
	* src/slre/Makefile.in: Regenerated
	* src/sqrt/Makefile.in: Regenerated
	* src/st/Makefile.in: Regenerated
	* src/statemate/Makefile.in: Regenerated
	* src/stringsearch1/Makefile.in: Regenerated
	* src/strstr/Makefile.in: Regenerated
	* src/tarai/Makefile.in: Regenerated
	* src/template/Makefile.in: Regenerated
	* src/ud/Makefile.in: Regenerated
	* src/whetstone/Makefile.in: Regenerated
	* src/wikisort/Makefile.in: Regenerated

2014-06-06  Pierre Langlois  <pierre.langlois@embecosm.com>

	* beebs.test/measure.exp: New test case for measuring.
	* run-avr-measurement.sh: New script for easily running measurements of
	all the benchmarks.
	* tools/energytool.py: New python script for taking one measurement. It
	relies on pyenergy.

2014-06-06  Pierre Langlois  <pierre.langlois@embecosm.com>

	* config/avr/boards/shrimp/boardsupport.c (initialise_board): Call
	PIN_INIT.
	(start_trigger): Call PIN_SET.
	(stop_trigger): Call PIN_CLEAR.
	* config/avr/chips/atmega328p/chipsupport.h (PIN_INIT): New macro.
	(PIN_SET): Likewise.
	(PIN_CLEAR): Likewise.

2014-06-04  Pierre Langlois  <pierre.langlois@embecosm.com>

	* Makefile.am (AUTOMAKE_OPTIONS): Add dejagnu.
	(EXTRA_DEJAGNU_SITE_CONFIG): Add dejagnu/site.exp.
	(EXTRA_DIST): Include the dejagnu scripts in the distribution.
	* Makefile.in: Regenerate.
	* beebs.test/run.exp: New file. This is the main run script.
	* build-aux/compile: Import from automake.
	* config/default.exp: New file. Needed for running BEEBS native.
	* configure: Regenerate.
	* configure.ac: Add BENCHMARKS as a substitute.
	Add dejagnu/site.exp config file.
	* dejagnu/baseboards/avr-avrdude.exp: New board file for avrdude.
	* dejagnu/config/avrdude.exp: New config file for avrdude.
	* dejagnu/site.exp.in: New template for EXTRA_DEJAGNU_SITE_CONFIG.
	* src/2dfir/Makefile.in: Regenerate.
	* src/adpcm/Makefile.in: Regenerate.
	* src/blowfish/Makefile.in: Regenerate.
	* src/bs/Makefile.in: Regenerate.
	* src/bsort100/Makefile.in: Regenerate.
	* src/bubblesort/Makefile.in: Regenerate.
	* src/cnt/Makefile.in: Regenerate.
	* src/compress/Makefile.in: Regenerate.
	* src/cover/Makefile.in: Regenerate.
	* src/crc/Makefile.in: Regenerate.
	* src/crc32/Makefile.in: Regenerate.
	* src/ctl-stack/Makefile.in: Regenerate.
	* src/ctl-string/Makefile.in: Regenerate.
	* src/ctl-vector/Makefile.in: Regenerate.
	* src/cubic/Makefile.in: Regenerate.
	* src/dhrystone/Makefile.in: Regenerate.
	* src/dijkstra/Makefile.in: Regenerate.
	* src/dtoa/Makefile.in: Regenerate.
	* src/duff/Makefile.in: Regenerate.
	* src/edn/Makefile.in: Regenerate.
	* src/expint/Makefile.in: Regenerate.
	* src/fac/Makefile.in: Regenerate.
	* src/fasta/Makefile.in: Regenerate.
	* src/fdct/Makefile.in: Regenerate.
	* src/fft/Makefile.in: Regenerate.
	* src/fibcall/Makefile.in: Regenerate.
	* src/fir/Makefile.in: Regenerate.
	* src/float_matmult/Makefile.in: Regenerate.
	* src/frac/Makefile.in: Regenerate.
	* src/gdb-advance/Makefile.in: Regenerate.
	* src/gdb-all-types/Makefile.in: Regenerate.
	* src/gdb-anon/Makefile.in: Regenerate.
	* src/gdb-arrayidx/Makefile.in: Regenerate.
	* src/gdb-async/Makefile.in: Regenerate.
	* src/gdb-bitfields/Makefile.in: Regenerate.
	* src/gdb-constvars/Makefile.in: Regenerate.
	* src/gdb-store/Makefile.in: Regenerate.
	* src/huffbench/Makefile.in: Regenerate.
	* src/insertsort/Makefile.in: Regenerate.
	* src/int_matmult/Makefile.in: Regenerate.
	* src/janne_complex/Makefile.in: Regenerate.
	* src/jfdctint/Makefile.in: Regenerate.
	* src/lcdnum/Makefile.in: Regenerate.
	* src/levenshtein/Makefile.in: Regenerate.
	* src/lms/Makefile.in: Regenerate.
	* src/ludcmp/Makefile.in: Regenerate.
	* src/mergesort/Makefile.in: Regenerate.
	* src/miniz/Makefile.in: Regenerate.
	* src/minver/Makefile.in: Regenerate.
	* src/nbody/Makefile.in: Regenerate.
	* src/ndes/Makefile.in: Regenerate.
	* src/nettle-arcfour/Makefile.in: Regenerate.
	* src/nettle-cast128/Makefile.in: Regenerate.
	* src/nettle-des/Makefile.in: Regenerate.
	* src/nettle-md5/Makefile.in: Regenerate.
	* src/newlib-exp/Makefile.in: Regenerate.
	* src/newlib-log/Makefile.in: Regenerate.
	* src/newlib-mod/Makefile.in: Regenerate.
	* src/newlib-sqrt/Makefile.in: Regenerate.
	* src/ns/Makefile.in: Regenerate.
	* src/nsichneu/Makefile.in: Regenerate.
	* src/prime/Makefile.in: Regenerate.
	* src/qsort/Makefile.in: Regenerate.
	* src/qurt/Makefile.in: Regenerate.
	* src/recursion/Makefile.in: Regenerate.
	* src/rijndael/Makefile.in: Regenerate.
	* src/select/Makefile.in: Regenerate.
	* src/sglib-arraybinsearch/Makefile.in: Regenerate.
	* src/sglib-arraysort/Makefile.in: Regenerate.
	* src/sglib-arraysort1/Makefile.in: Regenerate.
	* src/sglib-dllist/Makefile.in: Regenerate.
	* src/sglib-hashtable/Makefile.in: Regenerate.
	* src/sglib-listinsertsort/Makefile.in: Regenerate.
	* src/sglib-listinsertsort1/Makefile.in: Regenerate.
	* src/sglib-listsort/Makefile.in: Regenerate.
	* src/sglib-queue/Makefile.in: Regenerate.
	* src/sglib-rbtree/Makefile.in: Regenerate.
	* src/sha/Makefile.in: Regenerate.
	* src/slre/Makefile.in: Regenerate.
	* src/sqrt/Makefile.in: Regenerate.
	* src/st/Makefile.in: Regenerate.
	* src/statemate/Makefile.in: Regenerate.
	* src/stringsearch1/Makefile.in: Regenerate.
	* src/strstr/Makefile.in: Regenerate.
	* src/tarai/Makefile.in: Regenerate.
	* src/template/Makefile.in: Regenerate.
	* src/ud/Makefile.in: Regenerate.
	* src/whetstone/Makefile.in: Regenerate.
	* src/wikisort/Makefile.in: Regenerate.

2014-06-04  Pierre Langlois  <pierre.langlois@embecosm.com>

	* src/ctl-stack/Makefile.am: Rename the executable according to the
	directory name.
	* src/ctl-stack/Makefile.in: Regenerate.
	* src/ctl-string/Makefile.am: Likewise.
	* src/ctl-string/Makefile.in: Regenerate.
	* src/ctl-vector/Makefile.am: Likewise.
	* src/ctl-vector/Makefile.in: Regenerate.
	* src/gdb-advance/Makefile.am: Likewise.
	* src/gdb-advance/Makefile.in: Regenerate.
	* src/gdb-all-types/Makefile.am: Likewise.
	* src/gdb-all-types/Makefile.in: Regenerate.
	* src/gdb-anon/Makefile.am: Likewise.
	* src/gdb-anon/Makefile.in: Regenerate.
	* src/gdb-arrayidx/Makefile.am: Likewise.
	* src/gdb-arrayidx/Makefile.in: Regenerate.
	* src/gdb-async/Makefile.am: Likewise.
	* src/gdb-async/Makefile.in: Regenerate.
	* src/gdb-bitfields/Makefile.am: Likewise.
	* src/gdb-bitfields/Makefile.in: Regenerate.
	* src/gdb-constvars/Makefile.am: Likewise.
	* src/gdb-constvars/Makefile.in: Regenerate.
	* src/gdb-store/Makefile.am: Likewise.
	* src/gdb-store/Makefile.in: Regenerate.
	* src/nettle-arcfour/Makefile.am: Likewise.
	* src/nettle-arcfour/Makefile.in: Regenerate.
	* src/nettle-cast128/Makefile.am: Likewise.
	* src/nettle-cast128/Makefile.in: Regenerate.
	* src/nettle-des/Makefile.am: Likewise.
	* src/nettle-des/Makefile.in: Regenerate.
	* src/nettle-md5/Makefile.am: Likewise.
	* src/nettle-md5/Makefile.in: Regenerate.
	* src/newlib-exp/Makefile.am: Likewise.
	* src/newlib-exp/Makefile.in: Regenerate.
	* src/newlib-log/Makefile.am: Likewise.
	* src/newlib-log/Makefile.in: Regenerate.
	* src/newlib-mod/Makefile.am: Likewise.
	* src/newlib-mod/Makefile.in: Regenerate.
	* src/newlib-sqrt/Makefile.am: Likewise.
	* src/newlib-sqrt/Makefile.in: Regenerate.
	* src/sglib-arraybinsearch/Makefile.am: Likewise.
	* src/sglib-arraybinsearch/Makefile.in: Regenerate.
	* src/sglib-arraysort/Makefile.am: Likewise.
	* src/sglib-arraysort/Makefile.in: Regenerate.
	* src/sglib-arraysort1/Makefile.am: Likewise.
	* src/sglib-arraysort1/Makefile.in: Regenerate.
	* src/sglib-dllist/Makefile.am: Likewise.
	* src/sglib-dllist/Makefile.in: Regenerate.
	* src/sglib-hashtable/Makefile.am: Likewise.
	* src/sglib-hashtable/Makefile.in: Regenerate.
	* src/sglib-listinsertsort/Makefile.am: Likewise.
	* src/sglib-listinsertsort/Makefile.in: Regenerate.
	* src/sglib-listinsertsort1/Makefile.am: Likewise.
	* src/sglib-listinsertsort1/Makefile.in: Regenerate.
	* src/sglib-listsort/Makefile.am: Likewise.
	* src/sglib-listsort/Makefile.in: Regenerate.
	* src/sglib-queue/Makefile.am: Likewise.
	* src/sglib-queue/Makefile.in: Regenerate.
	* src/sglib-rbtree/Makefile.am: Likewise.
	* src/sglib-rbtree/Makefile.in: Regenerate.

2014-06-04  Pierre Langlois  <pierre.langlois@embecosm.com>

	* config/avr/chips/atmega328p/chip.cfg:  Add a comment about manually
	setting -std=gnu99.

2014-06-08  James Pallister  <james.pallister@bristol.ac.uk>
	Added the ability to load an architecture specific config file

	* configure: Regenerated
	* configure.ac: Load environment variables from config/ARCH/arch.cfg

2014-05-22  James Pallister  <james.pallister@bristol.ac.uk>
	Small changes to fix segfaulting benchmarks

	* gcc.beebs/bubblesort.c: Remove call to hardware specific memory
	    address
	* gcc.beebs/compress.c: Reduce HSIZE so that we don't overflow
	* gcc.beebs/crc32.c: Temporarily remove check for output

2014-06-04  James Pallister  <james.pallister@bristol.ac.uk>
	Added dummy boardsupport file so the suite will compile on x86_64

	* config/x86_64/boards/none/boardsupport.c: Dummy boardsupport file
	    which contains empty definitions

2014-06-03  Pierre Langlois  <pierre.langlois@embecosm.com>

	* config/avr/boards/shrimp/boardsupport.c: Add trigger code.
	* config/avr/chips/atmega328p/chip.cfg (CHIP_CFLAGS): Add
	-std=gnu99.
	(EXCLUDED_BENCHMARKS): Exclude adpcm and miniz benchmarks.

2014-06-03  Pierre Langlois  <pierre.langlois@embecosm.com>

	* configure: Regenerate.
	* configure.ac: Set CFLAGS and LDFLAGS before the config test.
	Otherwise they get ignored.

2014-06-03  Pierre Langlois  <pierre.langlois@embecosm.com>

	* Makefile.in: Regenerate.
	* configure: Regenerate.
	* configure.ac: Make EXCLUDED_BENCHMARKS an argument variable. This way
	it shows up with `configure --help`.
	* src/2dfir/Makefile.in: Regenerate.
	* src/adpcm/Makefile.in: Regenerate.
	* src/blowfish/Makefile.in: Regenerate.
	* src/bs/Makefile.in: Regenerate.
	* src/bsort100/Makefile.in: Regenerate.
	* src/bubblesort/Makefile.in: Regenerate.
	* src/cnt/Makefile.in: Regenerate.
	* src/compress/Makefile.in: Regenerate.
	* src/cover/Makefile.in: Regenerate.
	* src/crc/Makefile.in: Regenerate.
	* src/crc32/Makefile.in: Regenerate.
	* src/ctl-stack/Makefile.in: Regenerate.
	* src/ctl-string/Makefile.in: Regenerate.
	* src/ctl-vector/Makefile.in: Regenerate.
	* src/cubic/Makefile.in: Regenerate.
	* src/dhrystone/Makefile.in: Regenerate.
	* src/dijkstra/Makefile.in: Regenerate.
	* src/dtoa/Makefile.in: Regenerate.
	* src/duff/Makefile.in: Regenerate.
	* src/edn/Makefile.in: Regenerate.
	* src/expint/Makefile.in: Regenerate.
	* src/fac/Makefile.in: Regenerate.
	* src/fasta/Makefile.in: Regenerate.
	* src/fdct/Makefile.in: Regenerate.
	* src/fft/Makefile.in: Regenerate.
	* src/fibcall/Makefile.in: Regenerate.
	* src/fir/Makefile.in: Regenerate.
	* src/float_matmult/Makefile.in: Regenerate.
	* src/frac/Makefile.in: Regenerate.
	* src/gdb-advance/Makefile.in: Regenerate.
	* src/gdb-all-types/Makefile.in: Regenerate.
	* src/gdb-anon/Makefile.in: Regenerate.
	* src/gdb-arrayidx/Makefile.in: Regenerate.
	* src/gdb-async/Makefile.in: Regenerate.
	* src/gdb-bitfields/Makefile.in: Regenerate.
	* src/gdb-constvars/Makefile.in: Regenerate.
	* src/gdb-store/Makefile.in: Regenerate.
	* src/huffbench/Makefile.in: Regenerate.
	* src/insertsort/Makefile.in: Regenerate.
	* src/int_matmult/Makefile.in: Regenerate.
	* src/janne_complex/Makefile.in: Regenerate.
	* src/jfdctint/Makefile.in: Regenerate.
	* src/lcdnum/Makefile.in: Regenerate.
	* src/levenshtein/Makefile.in: Regenerate.
	* src/lms/Makefile.in: Regenerate.
	* src/ludcmp/Makefile.in: Regenerate.
	* src/mergesort/Makefile.in: Regenerate.
	* src/miniz/Makefile.in: Regenerate.
	* src/minver/Makefile.in: Regenerate.
	* src/nbody/Makefile.in: Regenerate.
	* src/ndes/Makefile.in: Regenerate.
	* src/nettle-arcfour/Makefile.in: Regenerate.
	* src/nettle-cast128/Makefile.in: Regenerate.
	* src/nettle-des/Makefile.in: Regenerate.
	* src/nettle-md5/Makefile.in: Regenerate.
	* src/newlib-exp/Makefile.in: Regenerate.
	* src/newlib-log/Makefile.in: Regenerate.
	* src/newlib-mod/Makefile.in: Regenerate.
	* src/newlib-sqrt/Makefile.in: Regenerate.
	* src/ns/Makefile.in: Regenerate.
	* src/nsichneu/Makefile.in: Regenerate.
	* src/prime/Makefile.in: Regenerate.
	* src/qsort/Makefile.in: Regenerate.
	* src/qurt/Makefile.in: Regenerate.
	* src/recursion/Makefile.in: Regenerate.
	* src/rijndael/Makefile.in: Regenerate.
	* src/select/Makefile.in: Regenerate.
	* src/sglib-arraybinsearch/Makefile.in: Regenerate.
	* src/sglib-arraysort/Makefile.in: Regenerate.
	* src/sglib-arraysort1/Makefile.in: Regenerate.
	* src/sglib-dllist/Makefile.in: Regenerate.
	* src/sglib-hashtable/Makefile.in: Regenerate.
	* src/sglib-listinsertsort/Makefile.in: Regenerate.
	* src/sglib-listinsertsort1/Makefile.in: Regenerate.
	* src/sglib-listsort/Makefile.in: Regenerate.
	* src/sglib-queue/Makefile.in: Regenerate.
	* src/sglib-rbtree/Makefile.in: Regenerate.
	* src/sha/Makefile.in: Regenerate.
	* src/slre/Makefile.in: Regenerate.
	* src/sqrt/Makefile.in: Regenerate.
	* src/st/Makefile.in: Regenerate.
	* src/statemate/Makefile.in: Regenerate.
	* src/stringsearch1/Makefile.in: Regenerate.
	* src/strstr/Makefile.in: Regenerate.
	* src/tarai/Makefile.in: Regenerate.
	* src/template/Makefile.in: Regenerate.
	* src/ud/Makefile.in: Regenerate.
	* src/whetstone/Makefile.in: Regenerate.
	* src/wikisort/Makefile.in: Regenerate.

2014-06-03  Pierre Langlois  <pierre.langlois@embecosm.com>

	* src/adpcm/adpcm.c: Change platformcode.h to support.h. Rename
	initialise_trigger to initialise_board.
	* src/blowfish/bf.c: Likewise.
	* src/bs/bs.c: Likewise.
	* src/bsort100/bsort100.c: Likewise.
	* src/bubblesort/bubblesort.c: Likewise.
	* src/cnt/cnt.c: Likewise.
	* src/compress/compress.c: Likewise.
	* src/cover/cover.c: Likewise.
	* src/crc/crc.c: Likewise.
	* src/crc32/crc_32.c: Likewise.
	* src/ctl-stack/stack.c: Likewise.
	* src/ctl-string/string.c: Likewise.
	* src/ctl-vector/vector.c: Likewise.
	* src/cubic/basicmath_small.c: Likewise.
	* src/dhrystone/dhry_1.c: Likewise.
	* src/dijkstra/dijkstra_small.c: Likewise.
	* src/dtoa/dtoa.c: Likewise.
	* src/duff/duff.c: Likewise.
	* src/edn/edn.c: Likewise.
	* src/expint/expint.c: Likewise.
	* src/fac/fac.c: Likewise.
	* src/fasta/fasta.c: Likewise.
	* src/fdct/fdct.c: Likewise.
	* src/fft/fft1.c: Likewise.
	* src/fibcall/fibcall.c: Likewise.
	* src/fir/fir.c: Likewise.
	* src/float_matmult/matmult.c: Likewise.
	* src/frac/frac.c: Likewise.
	* src/gdb-advance/advance.c: Likewise.
	* src/gdb-all-types/all-types.c: Likewise.
	* src/gdb-anon/anon.c: Likewise.
	* src/gdb-arrayidx/arrayidx.c: Likewise.
	* src/gdb-async/async.c: Likewise.
	* src/gdb-bitfields/bitfields.c: Likewise.
	* src/gdb-constvars/constvars.c: Likewise.
	* src/gdb-store/store.c: Likewise.
	* src/huffbench/huffbench.c: Likewise.
	* src/insertsort/insertsort.c: Likewise.
	* src/int_matmult/matmult.c: Likewise.
	* src/janne_complex/janne_complex.c: Likewise.
	* src/jfdctint/jfdctint.c: Likewise.
	* src/lcdnum/lcdnum.c: Likewise.
	* src/levenshtein/levenshtein.c: Likewise.
	* src/lms/lms.c: Likewise.
	* src/ludcmp/ludcmp.c: Likewise.
	* src/mergesort/mergesort.c: Likewise.
	* src/miniz/miniz_b.c: Likewise.
	* src/minver/minver.c: Likewise.
	* src/nbody/nbody.c: Likewise.
	* src/ndes/ndes.c: Likewise.
	* src/nettle-arcfour/arcfour.c: Likewise.
	* src/nettle-cast128/cast128.c: Likewise.
	* src/nettle-des/des.c: Likewise.
	* src/nettle-md5/md5.c: Likewise.
	* src/newlib-exp/ef_exp.c: Likewise.
	* src/newlib-log/ef_log.c: Likewise.
	* src/newlib-mod/ef_mod.c: Likewise.
	* src/newlib-sqrt/ef_sqrt.c: Likewise.
	* src/ns/ns.c: Likewise.
	* src/nsichneu/nsichneu.c: Likewise.
	* src/prime/prime.c: Likewise.
	* src/qsort/qsort.c: Likewise.
	* src/qurt/qurt.c: Likewise.
	* src/recursion/recursion.c: Likewise.
	* src/rijndael/aesxam.c: Likewise.
	* src/select/select.c: Likewise.
	* src/sglib-arraybinsearch/arraybinsearch.c: Likewise.
	* src/sglib-arraysort/arraysort.c: Likewise.
	* src/sglib-arraysort1/arraysort1.c: Likewise.
	* src/sglib-dllist/dllist.c: Likewise.
	* src/sglib-hashtable/hashtable.c: Likewise.
	* src/sglib-listinsertsort/listinsertsort.c: Likewise.
	* src/sglib-listinsertsort1/listinsertsort1.c: Likewise.
	* src/sglib-listsort/listsort.c: Likewise.
	* src/sglib-queue/queue.c: Likewise.
	* src/sglib-rbtree/rbtree.c: Likewise.
	* src/sha/sha.c: Likewise.
	* src/sha/sha_driver.c: Likewise.
	* src/slre/slre.c: Likewise.
	* src/sqrt/sqrt.c: Likewise.
	* src/st/st.c: Likewise.
	* src/statemate/statemate.c: Likewise.
	* src/stringsearch1/stringsearch1.c: Likewise.
	* src/strstr/strstr.c: Likewise.
	* src/tarai/tarai.c: Likewise.
	* src/template/template.c: Likewise.
	* src/ud/ud.c: Likewise.
	* src/whetstone/whetstone.c: Likewise.
	* src/wikisort/wikisort.c: Likewise.

2014-05-23  James Pallister  <james.pallister@bristol.ac.uk>
	Added support.h

	* include/support.h: This file includes the respective chipsupport.h
	    and boardsupport.h required to compile for the specified board and
	    platform.

2014-05-23  James Pallister  <james.pallister@bristol.ac.uk>
	Moved over to a new configuration architecture. The benchmark suite
	can be configured on a chip or a board level, with custom CFLAGS, etc.
	for each. Also there is set of headers and source for each board,
	which replaces platform code. The chip configuration should expose
	internals specific to the chip (through chipsupport.h) and the board
	should use these, through boardsupport.c and boardsupport.h.

	* Makefile.am: Removed old code. We just need the benchmark
	    directories now
	* Makefile.in: Regenerated
	* config.h.in: Template for configure to generate, so that we know
	    whether we have a boardspport.h or a chipsupport.h or both
	* config/arm/boards/stm32f0discovery/boardsupport.c: Boardsupport file
	    for stm32f0discovery
	* config/arm/boards/stm32vldiscovery/boardsupport.c: Boardsupport file
	    for stm32vldiscovery
	* config/arm/chips/stm32f051/chip.cfg: Chip config for stm32f051
	* config/arm/chips/stm32f051/chipsupport.h: Chip support header for
	    stm32f051
	* config/arm/chips/stm32f100/chip.cfg: Chip config for stm32f100
	* config/arm/chips/stm32f100/chipsupport.h: Chip support header for
	    stm32f100
	* config/avr/boards/shrimp/boardsupport.c: Board support for shrimp
	    (TODO)
	* config/avr/chips/atmega328p/chip.cfg: Chip config for shrimp (TODO)
	* configure: Regenerated
	* configure.ac: Modified to use the new configuration structure
	* src/2dfir/Makefile.in: Regenerated
	* src/2dfir/fir2dim.c: Updated this benchmark to use the new headers
	* src/adpcm/Makefile.in: Regenerated
	* src/blowfish/Makefile.in: Regenerated
	* src/bs/Makefile.in: Regenerated
	* src/bsort100/Makefile.in: Regenerated
	* src/bubblesort/Makefile.in: Regenerated
	* src/cnt/Makefile.in: Regenerated
	* src/common.mk.am: Include the new header files, plus configuration
	    header files
	* src/compress/Makefile.in: Regenerated
	* src/cover/Makefile.in: Regenerated
	* src/crc/Makefile.in: Regenerated
	* src/crc32/Makefile.in: Regenerated
	* src/ctl-stack/Makefile.in: Regenerated
	* src/ctl-string/Makefile.in: Regenerated
	* src/ctl-vector/Makefile.in: Regenerated
	* src/cubic/Makefile.in: Regenerated
	* src/dhrystone/Makefile.in: Regenerated
	* src/dijkstra/Makefile.in: Regenerated
	* src/dtoa/Makefile.in: Regenerated
	* src/duff/Makefile.in: Regenerated
	* src/edn/Makefile.in: Regenerated
	* src/expint/Makefile.in: Regenerated
	* src/fac/Makefile.in: Regenerated
	* src/fasta/Makefile.in: Regenerated
	* src/fdct/Makefile.in: Regenerated
	* src/fft/Makefile.in: Regenerated
	* src/fibcall/Makefile.in: Regenerated
	* src/fir/Makefile.in: Regenerated
	* src/float_matmult/Makefile.in: Regenerated
	* src/frac/Makefile.in: Regenerated
	* src/gdb-advance/Makefile.in: Regenerated
	* src/gdb-all-types/Makefile.in: Regenerated
	* src/gdb-anon/Makefile.in: Regenerated
	* src/gdb-arrayidx/Makefile.in: Regenerated
	* src/gdb-async/Makefile.in: Regenerated
	* src/gdb-bitfields/Makefile.in: Regenerated
	* src/gdb-constvars/Makefile.in: Regenerated
	* src/gdb-store/Makefile.in: Regenerated
	* src/huffbench/Makefile.in: Regenerated
	* src/insertsort/Makefile.in: Regenerated
	* src/int_matmult/Makefile.in: Regenerated
	* src/janne_complex/Makefile.in: Regenerated
	* src/jfdctint/Makefile.in: Regenerated
	* src/lcdnum/Makefile.in: Regenerated
	* src/levenshtein/Makefile.in: Regenerated
	* src/lms/Makefile.in: Regenerated
	* src/ludcmp/Makefile.in: Regenerated
	* src/mergesort/Makefile.in: Regenerated
	* src/miniz/Makefile.in: Regenerated
	* src/minver/Makefile.in: Regenerated
	* src/nbody/Makefile.in: Regenerated
	* src/ndes/Makefile.in: Regenerated
	* src/nettle-arcfour/Makefile.in: Regenerated
	* src/nettle-cast128/Makefile.in: Regenerated
	* src/nettle-des/Makefile.in: Regenerated
	* src/nettle-md5/Makefile.in: Regenerated
	* src/newlib-exp/Makefile.in: Regenerated
	* src/newlib-log/Makefile.in: Regenerated
	* src/newlib-mod/Makefile.in: Regenerated
	* src/newlib-sqrt/Makefile.in: Regenerated
	* src/ns/Makefile.in: Regenerated
	* src/nsichneu/Makefile.in: Regenerated
	* src/platformcode/Makefile.in: Regenerated
	* src/prime/Makefile.in: Regenerated
	* src/qsort/Makefile.in: Regenerated
	* src/qurt/Makefile.in: Regenerated
	* src/recursion/Makefile.in: Regenerated
	* src/rijndael/Makefile.in: Regenerated
	* src/select/Makefile.in: Regenerated
	* src/sglib-arraybinsearch/Makefile.in: Regenerated
	* src/sglib-arraysort/Makefile.in: Regenerated
	* src/sglib-arraysort1/Makefile.in: Regenerated
	* src/sglib-dllist/Makefile.in: Regenerated
	* src/sglib-hashtable/Makefile.in: Regenerated
	* src/sglib-listinsertsort/Makefile.in: Regenerated
	* src/sglib-listinsertsort1/Makefile.in: Regenerated
	* src/sglib-listsort/Makefile.in: Regenerated
	* src/sglib-queue/Makefile.in: Regenerated
	* src/sglib-rbtree/Makefile.in: Regenerated
	* src/sha/Makefile.in: Regenerated
	* src/slre/Makefile.in: Regenerated
	* src/sqrt/Makefile.in: Regenerated
	* src/st/Makefile.in: Regenerated
	* src/statemate/Makefile.in: Regenerated
	* src/stringsearch1/Makefile.in: Regenerated
	* src/strstr/Makefile.in: Regenerated
	* src/tarai/Makefile.in: Regenerated
	* src/template/Makefile.in: Regenerated
	* src/ud/Makefile.in: Regenerated
	* src/whetstone/Makefile.in: Regenerated
	* src/wikisort/Makefile.in: Regenerated

2014-03-20  James Pallister  <james.pallister@bristol.ac.uk>
	Centralised benchmark list, so benchmarks can be excluded for each
	platform. The list of benchmarks is embedded into configure.ac, and
	expanded using a m4 macro. This allows each benchmark to check whether
	it should be compiled for the chosen platform. As there are some
	benchmarks that will never fit into the target memory of some
	platforms, this is a way to stop them from being compiled.

	* Makefile.am: No longer has a list of all the subdirs, now gets a
	    list of the subdirs from configure
	* Makefile.in: Regenerated
	* analysis/Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Added EXCLUDED_BENCHMARKS variable to control which
	    benchmarks should not be compiled. Various other infrastructure to
	    help this.
	* src/2dfir/Makefile.in: Regenerated
	* src/adpcm/Makefile.in: Regenerated
	* src/blowfish/Makefile.in: Regenerated
	* src/bs/Makefile.in: Regenerated
	* src/bsort100/Makefile.in: Regenerated
	* src/bubblesort/Makefile.in: Regenerated
	* src/cnt/Makefile.in: Regenerated
	* src/compress/Makefile.in: Regenerated
	* src/cover/Makefile.in: Regenerated
	* src/crc/Makefile.in: Regenerated
	* src/crc32/Makefile.in: Regenerated
	* src/ctl-stack/Makefile.in: Regenerated
	* src/ctl-string/Makefile.in: Regenerated
	* src/ctl-vector/Makefile.in: Regenerated
	* src/cubic/Makefile.in: Regenerated
	* src/dhrystone/Makefile.in: Regenerated
	* src/dijkstra/Makefile.in: Regenerated
	* src/dtoa/Makefile.in: Regenerated
	* src/duff/Makefile.in: Regenerated
	* src/edn/Makefile.in: Regenerated
	* src/expint/Makefile.in: Regenerated
	* src/fac/Makefile.in: Regenerated
	* src/fasta/Makefile.in: Regenerated
	* src/fdct/Makefile.in: Regenerated
	* src/fft/Makefile.in: Regenerated
	* src/fibcall/Makefile.in: Regenerated
	* src/fir/Makefile.in: Regenerated
	* src/float_matmult/Makefile.in: Regenerated
	* src/frac/Makefile.in: Regenerated
	* src/gdb-advance/Makefile.in: Regenerated
	* src/gdb-all-types/Makefile.in: Regenerated
	* src/gdb-anon/Makefile.in: Regenerated
	* src/gdb-arrayidx/Makefile.in: Regenerated
	* src/gdb-async/Makefile.in: Regenerated
	* src/gdb-bitfields/Makefile.in: Regenerated
	* src/gdb-constvars/Makefile.in: Regenerated
	* src/gdb-store/Makefile.in: Regenerated
	* src/huffbench/Makefile.in: Regenerated
	* src/insertsort/Makefile.in: Regenerated
	* src/int_matmult/Makefile.in: Regenerated
	* src/janne_complex/Makefile.in: Regenerated
	* src/jfdctint/Makefile.in: Regenerated
	* src/lcdnum/Makefile.in: Regenerated
	* src/levenshtein/Makefile.in: Regenerated
	* src/lms/Makefile.in: Regenerated
	* src/ludcmp/Makefile.in: Regenerated
	* src/mergesort/Makefile.in: Regenerated
	* src/miniz/Makefile.in: Regenerated
	* src/minver/Makefile.in: Regenerated
	* src/nbody/Makefile.in: Regenerated
	* src/ndes/Makefile.in: Regenerated
	* src/nettle-arcfour/Makefile.in: Regenerated
	* src/nettle-cast128/Makefile.in: Regenerated
	* src/nettle-des/Makefile.in: Regenerated
	* src/nettle-md5/Makefile.in: Regenerated
	* src/newlib-exp/Makefile.in: Regenerated
	* src/newlib-log/Makefile.in: Regenerated
	* src/newlib-mod/Makefile.in: Regenerated
	* src/newlib-sqrt/Makefile.in: Regenerated
	* src/ns/Makefile.in: Regenerated
	* src/nsichneu/Makefile.in: Regenerated
	* src/platformcode/Makefile.in: Regenerated
	* src/prime/Makefile.in: Regenerated
	* src/qsort/Makefile.in: Regenerated
	* src/qurt/Makefile.in: Regenerated
	* src/recursion/Makefile.in: Regenerated
	* src/rijndael/Makefile.in: Regenerated
	* src/select/Makefile.in: Regenerated
	* src/sglib-arraybinsearch/Makefile.in: Regenerated
	* src/sglib-arraysort/Makefile.in: Regenerated
	* src/sglib-arraysort1/Makefile.in: Regenerated
	* src/sglib-dllist/Makefile.in: Regenerated
	* src/sglib-hashtable/Makefile.in: Regenerated
	* src/sglib-listinsertsort/Makefile.in: Regenerated
	* src/sglib-listinsertsort1/Makefile.in: Regenerated
	* src/sglib-listsort/Makefile.in: Regenerated
	* src/sglib-queue/Makefile.in: Regenerated
	* src/sglib-rbtree/Makefile.in: Regenerated
	* src/sha/Makefile.in: Regenerated
	* src/slre/Makefile.in: Regenerated
	* src/sqrt/Makefile.in: Regenerated
	* src/st/Makefile.in: Regenerated
	* src/statemate/Makefile.in: Regenerated
	* src/stringsearch1/Makefile.in: Regenerated
	* src/strstr/Makefile.in: Regenerated
	* src/tarai/Makefile.in: Regenerated
	* src/template/Makefile.in: Regenerated
	* src/ud/Makefile.in: Regenerated
	* src/whetstone/Makefile.in: Regenerated
	* src/wikisort/Makefile.in: Regenerated

2014-03-20  James Pallister  <james.pallister@bristol.ac.uk>
	Small modifications to benchmarks to reduce energy usage. Mostly
	involves marking some arrays as const, so the compiler puts them into
	non-volatile storage

	* src/crc/crc.c: Modification to reduce memory
	* src/crc32/crc_32.c: Modification to reduce memory
	* src/fir/fir.c: Modification to reduce memory
	* src/float_matmult/matmult.c: Modification to reduce memory
	* src/lms/lms.c: Modification to reduce memory
	* src/mergesort/mergesort.c: Modification to reduce memory
	* src/ndes/ndes.c: Modification to reduce memory
	* src/ns/ns.c: Modification to reduce memory

2014-03-20  James Pallister  <james.pallister@bristol.ac.uk>
	Modifications to compress to make it fit in memory of msp430

	* src/compress/compress.c: Modifications to compress to make it fit in
	    memory of msp430

2014-03-20  James Pallister  <james.pallister@bristol.ac.uk>
	Added miniz benchmark

	* Makefile.am: Added miniz benchmark
	* Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Added miniz benchmark
	* src/miniz/Makefile.am: Added miniz benchmark
	* src/miniz/Makefile.in: Regenerated
	* src/miniz/miniz.c: Added miniz benchmark
	* src/miniz/miniz_b.c: Added miniz benchmark

2014-03-20  James Pallister  <james.pallister@bristol.ac.uk>
	Better work around for missing float functions in msp430 libm

	* configure: Regenerated
	* configure.ac: Removed old hack
	* src/2dfir/Makefile.in: Regenerated
	* src/adpcm/Makefile.in: Regenerated
	* src/blowfish/Makefile.in: Regenerated
	* src/bs/Makefile.in: Regenerated
	* src/bsort100/Makefile.in: Regenerated
	* src/bubblesort/Makefile.in: Regenerated
	* src/cnt/Makefile.in: Regenerated
	* src/common.mk.am: Compile msp430.s when using a msp430 platform
	* src/compress/Makefile.in: Regenerated
	* src/cover/Makefile.in: Regenerated
	* src/crc/Makefile.in: Regenerated
	* src/crc32/Makefile.in: Regenerated
	* src/ctl-stack/Makefile.in: Regenerated
	* src/ctl-string/Makefile.in: Regenerated
	* src/ctl-vector/Makefile.in: Regenerated
	* src/cubic/Makefile.in: Regenerated
	* src/dhrystone/Makefile.in: Regenerated
	* src/dijkstra/Makefile.in: Regenerated
	* src/dtoa/Makefile.in: Regenerated
	* src/duff/Makefile.in: Regenerated
	* src/edn/Makefile.in: Regenerated
	* src/expint/Makefile.in: Regenerated
	* src/fac/Makefile.in: Regenerated
	* src/fasta/Makefile.in: Regenerated
	* src/fdct/Makefile.in: Regenerated
	* src/fft/Makefile.in: Regenerated
	* src/fibcall/Makefile.in: Regenerated
	* src/fir/Makefile.in: Regenerated
	* src/float_matmult/Makefile.in: Regenerated
	* src/frac/Makefile.in: Regenerated
	* src/gdb-advance/Makefile.in: Regenerated
	* src/gdb-all-types/Makefile.in: Regenerated
	* src/gdb-anon/Makefile.in: Regenerated
	* src/gdb-arrayidx/Makefile.in: Regenerated
	* src/gdb-async/Makefile.in: Regenerated
	* src/gdb-bitfields/Makefile.in: Regenerated
	* src/gdb-constvars/Makefile.in: Regenerated
	* src/gdb-store/Makefile.in: Regenerated
	* src/huffbench/Makefile.in: Regenerated
	* src/insertsort/Makefile.in: Regenerated
	* src/int_matmult/Makefile.in: Regenerated
	* src/janne_complex/Makefile.in: Regenerated
	* src/jfdctint/Makefile.in: Regenerated
	* src/lcdnum/Makefile.in: Regenerated
	* src/levenshtein/Makefile.in: Regenerated
	* src/lms/Makefile.in: Regenerated
	* src/ludcmp/Makefile.in: Regenerated
	* src/mergesort/Makefile.in: Regenerated
	* src/minver/Makefile.in: Regenerated
	* src/nbody/Makefile.in: Regenerated
	* src/ndes/Makefile.in: Regenerated
	* src/nettle-arcfour/Makefile.in: Regenerated
	* src/nettle-cast128/Makefile.in: Regenerated
	* src/nettle-des/Makefile.in: Regenerated
	* src/nettle-md5/Makefile.in: Regenerated
	* src/newlib-exp/Makefile.in: Regenerated
	* src/newlib-log/Makefile.in: Regenerated
	* src/newlib-mod/Makefile.in: Regenerated
	* src/newlib-sqrt/Makefile.in: Regenerated
	* src/ns/Makefile.in: Regenerated
	* src/nsichneu/Makefile.in: Regenerated
	* src/platformcode/msp430.s: Define symbols pow, exp and log, mapping
	    to corresponding powf, expf and logf
	* src/prime/Makefile.in: Regenerated
	* src/qsort/Makefile.in: Regenerated
	* src/qurt/Makefile.in: Regenerated
	* src/recursion/Makefile.in: Regenerated
	* src/rijndael/Makefile.in: Regenerated
	* src/select/Makefile.in: Regenerated
	* src/sglib-arraybinsearch/Makefile.in: Regenerated
	* src/sglib-arraysort/Makefile.in: Regenerated
	* src/sglib-arraysort1/Makefile.in: Regenerated
	* src/sglib-dllist/Makefile.in: Regenerated
	* src/sglib-hashtable/Makefile.in: Regenerated
	* src/sglib-listinsertsort/Makefile.in: Regenerated
	* src/sglib-listinsertsort1/Makefile.in: Regenerated
	* src/sglib-listsort/Makefile.in: Regenerated
	* src/sglib-queue/Makefile.in: Regenerated
	* src/sglib-rbtree/Makefile.in: Regenerated
	* src/sha/Makefile.in: Regenerated
	* src/slre/Makefile.in: Regenerated
	* src/sqrt/Makefile.in: Regenerated
	* src/st/Makefile.in: Regenerated
	* src/statemate/Makefile.in: Regenerated
	* src/stringsearch1/Makefile.in: Regenerated
	* src/strstr/Makefile.in: Regenerated
	* src/tarai/Makefile.in: Regenerated
	* src/template/Makefile.in: Regenerated
	* src/ud/Makefile.in: Regenerated
	* src/whetstone/Makefile.in: Regenerated
	* src/wikisort/Makefile.in: Regenerated

2014-03-20  James Pallister  <james.pallister@bristol.ac.uk>
	Added tarai benchmark

	* Makefile.am: Added tarai benchmark
	* Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Added tarai benchmark
	* src/tarai/Makefile.am: Added tarai benchmark
	* src/tarai/Makefile.in: Regenerated
	* src/tarai/tarai.c: Added tarai benchmark

2014-03-20  James Pallister  <james.pallister@bristol.ac.uk>
	Added workaround for there being no pow function in msp430's libc

	* configure: Regenerated
	* configure.ac: Added workaround for there being no pow function in
	    msp430's libc

2014-03-20  James Pallister  <james.pallister@bristol.ac.uk>
	Fixes for ctl benchmarks, and removed realloc

	* src/ctl-stack/ctl.h: Removed printfs
	* src/ctl-stack/stack.c: Previously used an incorrect variable
	* src/ctl-string/string.c: Removed realloc
	* src/ctl-vector/ctl.h: Removed realloc
	* src/ctl-vector/vector.c: Previously used an incorrect variable
	* src/ctl-vector/vector.h: Removed realloc

2014-03-20  James Pallister  <james.pallister@bristol.ac.uk>
	Change options for rijndael, to make it smaller, and compiler for
	msp430

	* src/rijndael/aes.c: Change options for rijndael, to make it smaller.

2014-03-20  James Pallister  <james.pallister@bristol.ac.uk>
	Added support for msp-exp430fr5739 platform

	* configure: Regenerated
	* configure.ac: Added support for msp-exp430fr5739 platform
	* src/ctl-string/Makefile.in: Regenerated
	* src/mergesort/mergesort.c: Removed dependency on assert
	* src/platformcode/platformcode.c: Added trigger code for msp-
	    exp430fr5739
	* src/sglib-arraybinsearch/sglib.h: Removed dependency on assert
	* src/sglib-arraysort/sglib.h: Removed dependency on assert
	* src/sglib-arraysort1/sglib.h: Removed dependency on assert
	* src/sglib-dllist/sglib.h: Removed dependency on assert
	* src/sglib-hashtable/sglib.h: Removed dependency on assert
	* src/sglib-listinsertsort/sglib.h: Removed dependency on assert
	* src/sglib-listinsertsort1/sglib.h: Removed dependency on assert
	* src/sglib-listsort/sglib.h: Removed dependency on assert
	* src/sglib-queue/sglib.h: Removed dependency on assert
	* src/sglib-rbtree/sglib.h: Removed dependency on assert
	* src/wikisort/wikisort.c: Removed dependency on assert

2014-03-16  James Pallister  <james.pallister@bristol.ac.uk>
	Fied ctl-string build for stm32f0discovery platform

	* src/ctl-string/Makefile.am: Fied ctl-string build for
	    stm32f0discovery platform
	* src/ctl-string/ctl.h: Removed
	* src/ctl-string/string.c: Added header contents into c file to
	    prevent multiple declarations
	* src/ctl-string/string.h: Removed

2014-03-16  James Pallister  <james.pallister@bristol.ac.uk>
	Added missing .h files for ctl benchmarks

	* src/ctl-stack/Makefile.am: Added missing .h files for ctl benchmarks
	* src/ctl-stack/Makefile.in: Regenerated
	* src/ctl-vector/Makefile.am: Added missing .h files for ctl
	    benchmarks
	* src/ctl-vector/Makefile.in: Regenerated

2014-03-16  James Pallister  <james.pallister@bristol.ac.uk>
	Added ctl string benchmark

	* Makefile.am: Added ctl string benchmark
	* Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Added ctl string benchmark
	* src/ctl-string/Makefile.am: Added ctl string benchmark
	* src/ctl-string/Makefile.in: Regenerated
	* src/ctl-string/ctl.h: Added ctl string benchmark
	* src/ctl-string/string.c: Added ctl string benchmark
	* src/ctl-string/string.h: Added ctl string benchmark

2014-03-16  James Pallister  <james.pallister@bristol.ac.uk>
	Added stack benchmark from ctl

	* Makefile.am: Added stack benchmark from ctl
	* Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Added stack benchmark from ctl
	* src/ctl-stack/Makefile.am: Added stack benchmark from ctl
	* src/ctl-stack/Makefile.in: Regenerated
	* src/ctl-stack/ctl.h: Added stack benchmark from ctl
	* src/ctl-stack/stack.c: Added stack benchmark from ctl
	* src/ctl-stack/stack.h: Added stack benchmark from ctl

2014-03-16  James Pallister  <james.pallister@bristol.ac.uk>
	Added vector benchmark from ctl

	* Makefile.am: Added vector benchmark from ctl
	* Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Added vector benchmark from ctl
	* src/ctl-vector/Makefile.am: Added vector benchmark from ctl
	* src/ctl-vector/Makefile.in: Regenerated
	* src/ctl-vector/ctl.h: Added vector benchmark from ctl
	* src/ctl-vector/vector.c: Added vector benchmark from ctl
	* src/ctl-vector/vector.h: Added vector benchmark from ctl

2014-03-15  James Pallister  <james.pallister@bristol.ac.uk>
	Added rbtree benchmark from sglib

	* Makefile.am: Added rbtree benchmark from sglib
	* Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Added rbtree benchmark from sglib
	* src/sglib-rbtree/Makefile.am: Added rbtree benchmark from sglib
	* src/sglib-rbtree/Makefile.in: Regenerated
	* src/sglib-rbtree/rbtree.c: Added rbtree benchmark from sglib
	* src/sglib-rbtree/sglib.h: Added rbtree benchmark from sglib

2014-03-15  James Pallister  <james.pallister@bristol.ac.uk>
	Added queue benchmark from sglib

	* Makefile.am: Added queue benchmark from sglib
	* Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Added queue benchmark from sglib
	* src/sglib-queue/Makefile.am: Added queue benchmark from sglib
	* src/sglib-queue/Makefile.in: Regenerated
	* src/sglib-queue/queue.c: Added queue benchmark from sglib
	* src/sglib-queue/sglib.h: Added queue benchmark from sglib

2014-03-15  James Pallister  <james.pallister@bristol.ac.uk>
	Added listsort from sglib

	* Makefile.am: Added listsort from sglib
	* Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Added listsort from sglib
	* src/sglib-listsort/Makefile.am: Added listsort from sglib
	* src/sglib-listsort/Makefile.in: Regenerated
	* src/sglib-listsort/listsort.c: Added listsort from sglib
	* src/sglib-listsort/sglib.h: Added listsort from sglib

2014-03-15  James Pallister  <james.pallister@bristol.ac.uk>
	Added listinsertsort1 from sglib

	* Makefile.am: Added listinsertsort1 from sglib
	* Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Added listinsertsort1 from sglib
	* src/sglib-listinsertsort1/Makefile.am: Added listinsertsort1 from
	    sglib
	* src/sglib-listinsertsort1/Makefile.in: Regenerated
	* src/sglib-listinsertsort1/listinsertsort1.c: Added listinsertsort1
	    from sglib
	* src/sglib-listinsertsort1/sglib.h: Added listinsertsort1 from sglib

2014-03-15  James Pallister  <james.pallister@bristol.ac.uk>
	Added listinsertsort from sglib

	* Makefile.am: Added listinsertsort from sglib
	* Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Added listinsertsort from sglib
	* src/sglib-listinsertsort/Makefile.am: Added listinsertsort from
	    sglib
	* src/sglib-listinsertsort/Makefile.in: Regenerated
	* src/sglib-listinsertsort/listinsertsort.c: Added listinsertsort from
	    sglib
	* src/sglib-listinsertsort/sglib.h: Added listinsertsort from sglib

2014-03-15  James Pallister  <james.pallister@bristol.ac.uk>
	Added hashtable benchmark from sglib

	* Makefile.am: Added hashtable benchmark from sglib
	* Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Added hashtable benchmark from sglib
	* src/sglib-hashtable/Makefile.am: Regenerated
	* src/sglib-hashtable/Makefile.in: Regenerated
	* src/sglib-hashtable/hashtable.c: Added hashtable benchmark from
	    sglib
	* src/sglib-hashtable/sglib.h: Added hashtable benchmark from sglib

2014-03-15  James Pallister  <james.pallister@bristol.ac.uk>
	Added dllist benchmark from sglib

	* Makefile.am: Added dllist benchmark from sglib
	* Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Added dllist benchmark from sglib
	* src/sglib-dllist/Makefile.am: Added dllist benchmark from sglib
	* src/sglib-dllist/Makefile.in: Regenerated
	* src/sglib-dllist/dllist.c: Added dllist benchmark from sglib
	* src/sglib-dllist/sglib.h: Added dllist benchmark from sglib

2014-03-15  James Pallister  <james.pallister@bristol.ac.uk>
	Added arraysort1 from sglib

	* Makefile.am: Added arraysort1 from sglib
	* Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Added arraysort1 from sglib
	* src/sglib-arraysort1/Makefile.am: Added arraysort1 from sglib
	* src/sglib-arraysort1/Makefile.in: Regenerated
	* src/sglib-arraysort1/arraysort1.c: Added arraysort1 from sglib
	* src/sglib-arraysort1/sglib.h: Added arraysort1 from sglib

2014-03-15  James Pallister  <james.pallister@bristol.ac.uk>
	Added arraysort from sglib

	* Makefile.am: Added arraysort from sglib
	* Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Added arraysort from sglib
	* src/sglib-arraysort/Makefile.am: Added arraysort from sglib
	* src/sglib-arraysort/Makefile.in: Regenerated
	* src/sglib-arraysort/arraysort.c: Added arraysort from sglib
	* src/sglib-arraysort/sglib.h: Added arraysort from sglib

2014-03-15  James Pallister  <james.pallister@bristol.ac.uk>
	Added arraybinsearch from sglib

	* Makefile.am: Added arraybinsearch
	* Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Added arraybinsearch
	* src/sglib-arraybinsearch/Makefile.am: Added arraybinsearch
	* src/sglib-arraybinsearch/Makefile.in: Regenerated
	* src/sglib-arraybinsearch/arraybinsearch.c: Added arraybinsearch
	* src/sglib-arraybinsearch/sglib.h: Added arraybinsearch

2014-03-15  James Pallister  <james.pallister@bristol.ac.uk>
	Added mergesort benchmark

	* Makefile.am: Added mergesort benchmark
	* Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Added mergesort benchmark
	* src/mergesort/Makefile.am: Added mergesort benchmark
	* src/mergesort/Makefile.in: Regenerated
	* src/mergesort/mergesort.c: Added mergesort benchmark

2014-03-15  James Pallister  <james.pallister@bristol.ac.uk>
	Added wikisort benchmark

	* Makefile.am: Added wikisort benchmark
	* Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Added wikisort benchmark
	* src/wikisort/Makefile.am: Added wikisort benchmark
	* src/wikisort/Makefile.in: Regenerated
	* src/wikisort/wikisort.c: Added wikisort benchmark

2014-03-11  James Pallister  <james.pallister@bristol.ac.uk>
	Fix to make blowfish use less memory

	* src/blowfish/bf.c: Move key off the stack
	* src/blowfish/bf_pi.h: Make const, so the init stays in flash

2014-03-11  James Pallister  <james.pallister@bristol.ac.uk>
	Added strstr benchmark

	* Makefile.am: Added strstr benchmark
	* Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Added strstr benchmark
	* src/strstr/Makefile.am: Added strstr benchmark
	* src/strstr/Makefile.in: Regenerated
	* src/strstr/strstr.c: Added strstr benchmark

2014-03-11  James Pallister  <james.pallister@bristol.ac.uk>
	Added slre benchmark

	* Makefile.am: Added slre benchmark
	* Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Added slre benchmark
	* src/slre/Makefile.am: Added slre benchmark
	* src/slre/Makefile.in: Regenerated
	* src/slre/slre.c: Added slre benchmark
	* src/slre/slre.h: Added slre benchmark

2014-03-10  James Pallister  <james.pallister@bristol.ac.uk>
	Added frac benchmark

	* Makefile.am: Added frac benchmark
	* Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Added frac benchmark
	* src/frac/Makefile.am: Added frac benchmark
	* src/frac/Makefile.in: Regenerated
	* src/frac/frac.c: Added frac benchmark

2014-03-10  James Pallister  <james.pallister@bristol.ac.uk>
	Added stringsearch1 benchmark

	* Makefile.am: Added stringsearch1 benchmark
	* Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Added stringsearch1 benchmark
	* src/stringsearch1/Makefile.am: Added stringsearch1 benchmark
	* src/stringsearch1/Makefile.in: Regenerated
	* src/stringsearch1/fast.fwd.inc.c: Added stringsearch1 benchmark
	* src/stringsearch1/fast.rev.d12.c: Added stringsearch1 benchmark
	* src/stringsearch1/stringsearch1.c: Added stringsearch1 benchmark

2014-03-10  James Pallister  <james.pallister@bristol.ac.uk>
	Added whetstone benchmark

	* Makefile.am: Added whetstone benchmark
	* Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Added whetstone benchmark
	* src/whetstone/Makefile.am: Added whetstone benchmark
	* src/whetstone/Makefile.in: Added whetstone benchmark
	* src/whetstone/whetstone.c: Added whetstone benchmark

2014-03-09  James Pallister  <james.pallister@bristol.ac.uk>
	Added dhrystone benchmark. Note: dhrystone is modified slightly to
	allow it to fit in memory of some of the smaller processors. This may
	alter the computation slightly from the normal dhrystone, but not
	significantly

	* Makefile.am: Added dhrystone.
	* Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Added dhrystone.
	* src/dhrystone/Makefile.am: Added dhrystone.
	* src/dhrystone/Makefile.in: Regenerated
	* src/dhrystone/dhry.h: Added dhrystone.
	* src/dhrystone/dhry_1.c: Added dhrystone.
	* src/dhrystone/dhry_2.c: Added dhrystone.

2014-03-09  James Pallister  <james.pallister@bristol.ac.uk>
	Added huffbench benchmark

	* Makefile.am: Added huffbench benchmark
	* Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Added huffbench benchmark
	* src/huffbench/Makefile.am: Added huffbench benchmark
	* src/huffbench/Makefile.in: Regenerated
	* src/huffbench/huffbench.c: Added huffbench benchmark

2014-03-09  James Pallister  <james.pallister@bristol.ac.uk>
	Added dtoa benchmark

	* Makefile.am: Added dtoa benchmark
	* Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Added dtoa benchmark
	* src/dtoa/Makefile.am: Added dtoa benchmark
	* src/dtoa/Makefile.in: Regenerated
	* src/dtoa/dtoa.c: Added dtoa benchmark

2014-03-09  James Pallister  <james.pallister@bristol.ac.uk>
	Added levenshtein benchmark

	* Makefile.am: Added levenshtein benchmark
	* Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Added levenshtein benchmark
	* src/levenshtein/Makefile.am: Added levenshtein benchmark
	* src/levenshtein/Makefile.in: Regenerated
	* src/levenshtein/levenshtein.c: Added levenshtein benchmark

2014-03-08  James Pallister  <james.pallister@bristol.ac.uk>
	Added in header to remove implicit declaration warnings

	* src/platformcode/startup.c: Added in header to remove implicit
	    declaration warnings

2014-03-08  James Pallister  <james.pallister@bristol.ac.uk>
	Removed unused source files in platformcode, and corresponding
	configure options.

	* Makefile.in: Regenerated
	* analysis/Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Removed the with-platformsources and with-linkerscript
	    options, as these are now set based on the platform chosen
	* src/2dfir/Makefile.in: Regenerated
	* src/adpcm/Makefile.in: Regenerated
	* src/blowfish/Makefile.in: Regenerated
	* src/bs/Makefile.in: Regenerated
	* src/bsort100/Makefile.in: Regenerated
	* src/bubblesort/Makefile.in: Regenerated
	* src/cnt/Makefile.in: Regenerated
	* src/common.mk.am: Platform sources are no longer used
	* src/compress/Makefile.in: Regenerated
	* src/cover/Makefile.in: Regenerated
	* src/crc/Makefile.in: Regenerated
	* src/crc32/Makefile.in: Regenerated
	* src/cubic/Makefile.in: Regenerated
	* src/dijkstra/Makefile.in: Regenerated
	* src/duff/Makefile.in: Regenerated
	* src/edn/Makefile.in: Regenerated
	* src/expint/Makefile.in: Regenerated
	* src/fac/Makefile.in: Regenerated
	* src/fasta/Makefile.in: Regenerated
	* src/fdct/Makefile.in: Regenerated
	* src/fft/Makefile.in: Regenerated
	* src/fibcall/Makefile.in: Regenerated
	* src/fir/Makefile.in: Regenerated
	* src/float_matmult/Makefile.in: Regenerated
	* src/gdb-advance/Makefile.in: Regenerated
	* src/gdb-all-types/Makefile.in: Regenerated
	* src/gdb-anon/Makefile.in: Regenerated
	* src/gdb-arrayidx/Makefile.in: Regenerated
	* src/gdb-async/Makefile.in: Regenerated
	* src/gdb-bitfields/Makefile.in: Regenerated
	* src/gdb-constvars/Makefile.in: Regenerated
	* src/gdb-store/Makefile.in: Regenerated
	* src/insertsort/Makefile.in: Regenerated
	* src/int_matmult/Makefile.in: Regenerated
	* src/janne_complex/Makefile.in: Regenerated
	* src/jfdctint/Makefile.in: Regenerated
	* src/lcdnum/Makefile.in: Regenerated
	* src/lms/Makefile.in: Regenerated
	* src/ludcmp/Makefile.in: Regenerated
	* src/minver/Makefile.in: Regenerated
	* src/nbody/Makefile.in: Regenerated
	* src/ndes/Makefile.in: Regenerated
	* src/nettle-arcfour/Makefile.in: Regenerated
	* src/nettle-cast128/Makefile.in: Regenerated
	* src/nettle-des/Makefile.in: Regenerated
	* src/nettle-md5/Makefile.in: Regenerated
	* src/newlib-exp/Makefile.in: Regenerated
	* src/newlib-log/Makefile.in: Regenerated
	* src/newlib-mod/Makefile.in: Regenerated
	* src/newlib-sqrt/Makefile.in: Regenerated
	* src/ns/Makefile.in: Regenerated
	* src/nsichneu/Makefile.in: Regenerated
	* src/platformcode/Makefile.am: Remove extra dist for sbrk and exit
	* src/platformcode/Makefile.in: Regenerated
	* src/platformcode/exit.c: Removed
	* src/platformcode/exit.h: Removed
	* src/platformcode/sbrk.c: Removed
	* src/platformcode/sbrk.h: Removed
	* src/prime/Makefile.in: Regenerated
	* src/qsort/Makefile.in: Regenerated
	* src/qurt/Makefile.in: Regenerated
	* src/recursion/Makefile.in: Regenerated
	* src/rijndael/Makefile.in: Regenerated
	* src/select/Makefile.in: Regenerated
	* src/sha/Makefile.in: Regenerated
	* src/sqrt/Makefile.in: Regenerated
	* src/st/Makefile.in: Regenerated
	* src/statemate/Makefile.in: Regenerated
	* src/template/Makefile.in: Regenerated
	* src/ud/Makefile.in: Regenerated

2014-03-08  James Pallister  <james.pallister@bristol.ac.uk>
	Added extra files for distribution in platformcode

	* Makefile.in: Regenerated
	* aclocal.m4: Regenerated
	* analysis/Makefile.in: Regenerated
	* configure: Regenerated
	* src/2dfir/Makefile.in: Regenerated
	* src/adpcm/Makefile.in: Regenerated
	* src/blowfish/Makefile.in: Regenerated
	* src/bs/Makefile.in: Regenerated
	* src/bsort100/Makefile.in: Regenerated
	* src/bubblesort/Makefile.in: Regenerated
	* src/cnt/Makefile.in: Regenerated
	* src/compress/Makefile.in: Regenerated
	* src/cover/Makefile.in: Regenerated
	* src/crc/Makefile.in: Regenerated
	* src/crc32/Makefile.in: Regenerated
	* src/cubic/Makefile.in: Regenerated
	* src/dijkstra/Makefile.in: Regenerated
	* src/duff/Makefile.in: Regenerated
	* src/edn/Makefile.in: Regenerated
	* src/expint/Makefile.in: Regenerated
	* src/fac/Makefile.in: Regenerated
	* src/fasta/Makefile.in: Regenerated
	* src/fdct/Makefile.in: Regenerated
	* src/fft/Makefile.in: Regenerated
	* src/fibcall/Makefile.in: Regenerated
	* src/fir/Makefile.in: Regenerated
	* src/float_matmult/Makefile.in: Regenerated
	* src/gdb-advance/Makefile.in: Regenerated
	* src/gdb-all-types/Makefile.in: Regenerated
	* src/gdb-anon/Makefile.in: Regenerated
	* src/gdb-arrayidx/Makefile.in: Regenerated
	* src/gdb-async/Makefile.in: Regenerated
	* src/gdb-bitfields/Makefile.in: Regenerated
	* src/gdb-constvars/Makefile.in: Regenerated
	* src/gdb-store/Makefile.in: Regenerated
	* src/insertsort/Makefile.in: Regenerated
	* src/int_matmult/Makefile.in: Regenerated
	* src/janne_complex/Makefile.in: Regenerated
	* src/jfdctint/Makefile.in: Regenerated
	* src/lcdnum/Makefile.in: Regenerated
	* src/lms/Makefile.in: Regenerated
	* src/ludcmp/Makefile.in: Regenerated
	* src/minver/Makefile.in: Regenerated
	* src/nbody/Makefile.in: Regenerated
	* src/ndes/Makefile.in: Regenerated
	* src/nettle-arcfour/Makefile.in: Regenerated
	* src/nettle-cast128/Makefile.in: Regenerated
	* src/nettle-des/Makefile.in: Regenerated
	* src/nettle-md5/Makefile.in: Regenerated
	* src/newlib-exp/Makefile.in: Regenerated
	* src/newlib-log/Makefile.in: Regenerated
	* src/newlib-mod/Makefile.in: Regenerated
	* src/newlib-sqrt/Makefile.in: Regenerated
	* src/ns/Makefile.in: Regenerated
	* src/nsichneu/Makefile.in: Regenerated
	* src/platformcode/Makefile.am: Distribute linker scripts
	* src/platformcode/Makefile.in: Regenerated
	* src/prime/Makefile.in: Regenerated
	* src/qsort/Makefile.in: Regenerated
	* src/qurt/Makefile.in: Regenerated
	* src/recursion/Makefile.in: Regenerated
	* src/rijndael/Makefile.in: Regenerated
	* src/select/Makefile.in: Regenerated
	* src/sha/Makefile.in: Regenerated
	* src/sqrt/Makefile.in: Regenerated
	* src/st/Makefile.in: Regenerated
	* src/statemate/Makefile.in: Regenerated
	* src/template/Makefile.in: Regenerated
	* src/ud/Makefile.in: Regenerated

2014-03-08  James Pallister  <james.pallister@bristol.ac.uk>
	Changes in analysis automake to make distcheck work

	* analysis/Makefile.am: Need to distribute the simulator command files
	* analysis/Makefile.in: Regenerated

2014-03-06  James Pallister  <james.pallister@bristol.ac.uk>
	Removed old generate files and added some comments into the readme

	* README.md: Description of compiling the benchmark suite
	* generate.avr: Removed, no longer useful
	* generate.cortex-m0: Removed, no longer useful
	* generate.cortex-m3: Removed, no longer useful
	* generate.fram: Removed, no longer useful
	* generate.generic: Removed, no longer useful
	* generate.msp430: Removed, no longer useful
	* generate.pic32: Removed, no longer useful

2014-03-05  James Pallister  <james.pallister@bristol.ac.uk>
	Small fixes for benchmark compilation

	* src/bsort100/bsort100.c: Remove dependency on timing
	* src/st/st.c: Remove dependency on timing

2014-03-05  James Pallister  <james.pallister@bristol.ac.uk>
	Regenerated Makefiles and configures

	* Makefile.in: Regenerated
	* configure: Regenerated

2014-03-05  James Pallister  <james.pallister@bristol.ac.uk>
	Added ud benchmark

	* Makefile.am: Added ud benchmark
	* configure.ac: Added ud benchmark
	* src/ud/Makefile.am: Added ud benchmark
	* src/ud/Makefile.in: Regenerated
	* src/ud/ud.c: Added ud benchmark

2014-03-05  James Pallister  <james.pallister@bristol.ac.uk>
	Added statemate benchmark

	* Makefile.am: Added statemate benchmark
	* configure.ac: Added statemate benchmark
	* src/statemate/Makefile.am: Added statemate benchmark
	* src/statemate/Makefile.in: Regenerated
	* src/statemate/statemate.c: Added statemate benchmark

2014-03-05  James Pallister  <james.pallister@bristol.ac.uk>
	Added st benchmark

	* Makefile.am: Added st benchmark
	* configure.ac: Added st benchmark
	* src/st/Makefile.am: Added st benchmark
	* src/st/Makefile.in: Regenerated
	* src/st/st.c: Added st benchmark

2014-03-05  James Pallister  <james.pallister@bristol.ac.uk>
	Added another sqrt benchmark

	* Makefile.am: Added another sqrt benchmark
	* configure.ac: Added another sqrt benchmark
	* src/sqrt/Makefile.am: Added another sqrt benchmark
	* src/sqrt/Makefile.in: Regenerated
	* src/sqrt/sqrt.c: Added another sqrt benchmark

2014-03-05  James Pallister  <james.pallister@bristol.ac.uk>
	Added recursion benchmark

	* Makefile.am: Added recursion benchmark
	* configure.ac: Added recursion benchmark
	* src/recursion/Makefile.am: Added recursion benchmark
	* src/recursion/Makefile.in: Regenerated
	* src/recursion/recursion.c: Added recursion benchmark

2014-03-05  James Pallister  <james.pallister@bristol.ac.uk>
	Added qsort benchmark

	* Makefile.am: Added qsort benchmark
	* configure.ac: Added qsort benchmark
	* src/qsort/Makefile.am: Added qsort benchmark
	* src/qsort/Makefile.in: Regenerated
	* src/qsort/qsort.c: Added qsort benchmark

2014-03-05  James Pallister  <james.pallister@bristol.ac.uk>
	Added nsichneu benchmark

	* Makefile.am: Added nsichneu benchmark
	* configure.ac: Added nsichneu benchmark
	* src/nsichneu/Makefile.am: Added nsichneu benchmark
	* src/nsichneu/Makefile.in: Regenerated
	* src/nsichneu/nsichneu.c: Added nsichneu benchmark

2014-03-05  James Pallister  <james.pallister@bristol.ac.uk>
	Added ns benchmark

	* Makefile.am: Added ns benchmark
	* configure.ac: Added ns benchmark
	* src/ns/Makefile.am: Added ns benchmark
	* src/ns/Makefile.in: Regenerated
	* src/ns/ns.c: Added ns benchmark

2014-03-05  James Pallister  <james.pallister@bristol.ac.uk>
	Added lcdnum benchmark

	* Makefile.am: Added lcdnum benchmark
	* configure.ac: Added lcdnum benchmark
	* src/lcdnum/Makefile.am: Added lcdnum benchmark
	* src/lcdnum/Makefile.in: Regenerated
	* src/lcdnum/lcdnum.c: Added lcdnum benchmark

2014-03-05  James Pallister  <james.pallister@bristol.ac.uk>
	Added janne complex benchmark

	* Makefile.am: Added janne complex benchmark
	* configure.ac: Added janne complex benchmark
	* src/janne_complex/Makefile.am: Added janne complex benchmark
	* src/janne_complex/Makefile.in: Regenerated
	* src/janne_complex/janne_complex.c: Added janne complex benchmark

2014-03-05  James Pallister  <james.pallister@bristol.ac.uk>
	Added fibcall benchmark

	* Makefile.am: Added fibcall benchmark
	* configure.ac: Added fibcall benchmark
	* src/fibcall/Makefile.am: Added fibcall benchmark
	* src/fibcall/Makefile.in: Regenerated
	* src/fibcall/fibcall.c: Added fibcall benchmark

2014-03-05  James Pallister  <james.pallister@bristol.ac.uk>
	Added another crc benchmark

	* Makefile.am: Added crc benchmark
	* configure.ac: Added crc benchmark
	* src/crc/Makefile.am: Added crc benchmark
	* src/crc/Makefile.in: Regenerated
	* src/crc/crc.c: Added crc benchmark

2014-03-05  James Pallister  <james.pallister@bristol.ac.uk>
	Added cover benchmark

	* Makefile.am: Added cover benchmark
	* configure.ac: Added cover benchmark
	* src/cover/Makefile.am: Added cover benchmark
	* src/cover/Makefile.in: Regenerated
	* src/cover/cover.c: Added cover benchmark

2014-03-05  James Pallister  <james.pallister@bristol.ac.uk>
	Added bsort100 benchmark

	* Makefile.am: Added bsort100 benchmark
	* configure.ac: Added bsort100 benchmark
	* src/bsort100/Makefile.am: Added bsort100 benchmark
	* src/bsort100/Makefile.in: Regenerated
	* src/bsort100/bsort100.c: Added bsort100 benchmark

2014-03-05  James Pallister  <james.pallister@bristol.ac.uk>
	Sorted the benchmark autotools configuration lines

	* Makefile.am: Sorted the benchmark subdirs
	* Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Sorted the benchmark config iels

2014-03-04  James Pallister  <james.pallister@bristol.ac.uk>
	Changed the name of the xmega platform from the chip name to the
	development board's name. Platform was atxmega256a3buxpld, is now
	xmegaa3buxplained.

	* configure: Regenerated
	* configure.ac: Changed the name of the xmega platform from the chip
	    name to the development board's name. Platform was
	    atxmega256a3buxpld, is now xmegaa3buxplained.

2014-02-28  Pierre Langlois  <pierre.langlois@embecosm.com>
	Add xmega-a3bu Xplained target

	* configure: Regenerate
	* configure.ac: Add ATXMEGA256A3BUXPLD platform
	* src/platformcode/platformcode.c: Add trigger

2014-02-27  James Pallister  <james.pallister@bristol.ac.uk>
	Measurement can now be taken on PIC32MX250F128B platform. Added linker
	scripts and code to toggle a pin

	* configure.ac: Added LDFLAGS definition to wrap main
	* src/common.mk.am: Added linkerscript
	* src/platformcode/pic32mx.ld: Linkerscript for the pic32mx
	* src/platformcode/pic32mx_startup.s: Added code to jump to the reset
	    vector in the pic boot memory
	* src/platformcode/platformcode.c: Toggle PA4, as well as a wrapper
	    around main, so that exit is called, instead of main being
	    repeated.

2014-02-27  Pierre Langlois  <pierre.langlois@embecosm.com>
	Add des from nettle library.

	* Makefile.am: Add nettle-des
	* Makefile.in: Regenerate
	* analysis/simulator.in: Add nettle-des
	* configure: Regenerate
	* configure.ac: Add nettle-des
	* src/nettle-des/Makefile.am: Create
	* src/nettle-des/Makefile.in: Regenerate
	* src/nettle-des/des.c: Import des from the nettle library
	* src/nettle-des/desCode.h: Ditto
	* src/nettle-des/descore.README: Ditto
	* src/nettle-des/keymap.h: Ditto
	* src/nettle-des/rotors.h: Ditto

2014-02-27  Pierre Langlois  <pierre.langlois@embecosm.com>
	Add cast128 from nettle library.

	* Makefile.am: Add nettle-cast128
	* Makefile.in: Regenerate
	* analysis/simulator.in: Add nettle-cast128
	* configure: Regenerate
	* configure.ac: Add nettle-cast128
	* src/nettle-cast128/Makefile.am: Create
	* src/nettle-cast128/Makefile.in: Regenerate
	* src/nettle-cast128/cast128.c: Import cast128 from the nettle library

2014-02-27  Pierre Langlois  <pierre.langlois@embecosm.com>
	Add arcfour from nettle library

	* Makefile.am: Add nettle-arcfour
	* Makefile.in: Regenerate
	* analysis/simulator.in: Add nettle-arcfour
	* configure: Regenerate
	* configure.ac: Add nettle-arcfour
	* src/nettle-arcfour/Makefile.am: Create
	* src/nettle-arcfour/Makefile.in: Regenerate
	* src/nettle-arcfour/arcfour.c: Import arcfour from the nettle library

2014-02-27  Pierre Langlois  <pierre.langlois@embecosm.com>
	Add md5 from nettle library.

	* Makefile.am: Add nettle-md5
	* Makefile.in: Regenerate
	* analysis/simulator.in: Add nettle-md5
	* configure: Regenerate
	* configure.ac: Add nettle-md5
	* src/nettle-md5/Makefile.am: Create
	* src/nettle-md5/Makefile.in: Regenerate
	* src/nettle-md5/md5.c: Import md5-compress from the nettle library

2014-02-27  Pierre Langlois  <pierre.langlois@embecosm.com>
	Add source file to generate-benchmark script.

	* tools/generate-benchmark.sh: Add a second optional argument to
	    specify the name of the source file to generate

2014-02-26  Pierre Langlois  <pierre.langlois@embecosm.com>
	Add constvars test from GDB.

	* Makefile.am: Add gdb-constvars
	* Makefile.in: Regenerate
	* analysis/simulator.in: Add gdb-constvars
	* configure: Regenerate
	* configure.ac: Add gdb-constvars
	* src/gdb-constvars/Makefile.am: Create
	* src/gdb-constvars/Makefile.in: Regenerate
	* src/gdb-constvars/constvars.c: Import constvars.c from the GDB
	    testsuite

2014-02-26  Pierre Langlois  <pierre.langlois@embecosm.com>
	Add store test from GDB.

	* Makefile.am: Add gdb-store
	* Makefile.in: Regenerate
	* analysis/simulator.in: Add gdb-store
	* configure: Regenerate
	* configure.ac: Add gdb-store
	* src/gdb-store/Makefile.am: Create
	* src/gdb-store/Makefile.in: Regenerate
	* src/gdb-store/store.c: Import store.c from the GDB testsuite

2014-02-26  Pierre Langlois  <pierre.langlois@embecosm.com>
	Add bitfields test from GDB.

	* Makefile.am: Add gdb-bitfiels
	* Makefile.in: Regenerate
	* analysis/simulator.in: Add gdb-bitfields
	* configure: Regenerate
	* configure.ac: Add gdb-bitfiels
	* src/gdb-bitfields/Makefile.am: Create
	* src/gdb-bitfields/Makefile.in: Regenerate
	* src/gdb-bitfields/bitfields.c: Import bitfiels.c from the GDB
	    testsuite

2014-02-26  Pierre Langlois  <pierre.langlois@embecosm.com>
	Add select benchmark.

	* Makefile.am: Add select
	* Makefile.in: Regenerate
	* analysis/simulator.in: Add select
	* configure: Regenerate
	* configure.ac: Add select
	* src/select/Makefile.am: Generated from generate-benchmark script
	* src/select/Makefile.in: Regenerate
	* src/select/select.c: Import select from WCET

2014-02-26  Pierre Langlois  <pierre.langlois@embecosm.com>
	Add jfdctint benchmark.

	* Makefile.am: Add jfdctint
	* Makefile.in: Regenerate
	* analysis/simulator.in: Add jfdctint
	* configure: Regenerate
	* configure.ac: Add jfdctint
	* src/jfdctint/Makefile.am: Generated from generate-benchmark script
	* src/jfdctint/Makefile.in: Regenerate
	* src/jfdctint/jfdctint.c: Import jfdctint from WCET

2014-02-26  Pierre Langlois  <pierre.langlois@embecosm.com>
	Add qurt benchmark.

	* Makefile.am: Add qurt
	* Makefile.in: Regenerate
	* analysis/simulator.in: Add qurt
	* configure: Regenerate
	* configure.ac: Add qurt
	* src/qurt/Makefile.am: Generated by generate-benchmark script
	* src/qurt/Makefile.in: Regenerate
	* src/qurt/qurt.c: Import qurt from WCET

2014-02-26  Pierre Langlois  <pierre.langlois@embecosm.com>
	Add prime benchmark.

	* Makefile.am: Add prime
	* Makefile.in: Regenerate
	* analysis/simulator.in: Add prime
	* configure: Regenerate
	* configure.ac: Add prime
	* src/prime/Makefile.am: Generated by generate-benchmark script
	* src/prime/Makefile.in: Regenerate
	* src/prime/prime.c: Import prime from WCET

2014-02-26  Pierre Langlois  <pierre.langlois@embecosm.com>
	Add ndes benchmark.

	* Makefile.am: Add ndes
	* Makefile.in: Regenerate
	* analysis/simulator.in: Add ndes
	* configure: Regenerate
	* configure.ac: Add ndes
	* src/ndes/Makefile.am: Generated by generate-benchmark script
	* src/ndes/Makefile.in: Regenerate
	* src/ndes/ndes.c: Import ndes from WCET

2014-02-26  Pierre Langlois  <pierre.langlois@embecosm.com>
	Add minver benchmark.

	* Makefile.am: Add minver
	* Makefile.in: Regenerate
	* analysis/simulator.in: Add minver
	* configure: Regenerate
	* configure.ac: Add minver
	* src/minver/Makefile.am: Generated by generate-benchmark script
	* src/minver/Makefile.in: Regenerate
	* src/minver/minver.c: Import minver from WCET

2014-02-26  Pierre Langlois  <pierre.langlois@embecosm.com>
	Add ludcmp benchmark.

	* Makefile.am: Add ludcmp with generate-benchmark script
	* Makefile.in: Regenerate
	* analysis/simulator.in: Add ludcmp
	* configure: Regenerate
	* configure.ac: Add ludcmp with generate-benchmark script
	* src/ludcmp/Makefile.am: Generated with generate-benchmark script
	* src/ludcmp/Makefile.in: Regenerate
	* src/ludcmp/ludcmp.c: Import ludcmp from WCET

2014-02-26  Pierre Langlois  <pierre.langlois@embecosm.com>
	Add insertsort benchmark.

	* Makefile.am: Add insertsort with generate-benchmark script
	* Makefile.in: Regenerate
	* analysis/simulator.in: Add insertsort
	* configure: Regenerate
	* configure.ac: Add insertsort with generate-benchmark script
	* src/insertsort/Makefile.am: Generated with generate-benchmark script
	* src/insertsort/Makefile.in: Regenerate
	* src/insertsort/insertsort.c: Import insertsort from WCET

2014-02-26  Pierre Langlois  <pierre.langlois@embecosm.com>
	Add fir benchmark.

	* Makefile.am: Add fir with generate-benchmark script
	* Makefile.in: Regenerate
	* analysis/simulator.in: Add fir
	* configure: Regenerate
	* configure.ac: Add fir with generate-benchmark script
	* src/fir/Makefile.am: Generated with generate-benchmark script
	* src/fir/Makefile.in: Regenerate
	* src/fir/fir.c: Import fir from WCET

2014-02-26  Pierre Langlois  <pierre.langlois@embecosm.com>
	Add fac benchmark.

	* Makefile.am: Add fac with generate-benchmark script
	* Makefile.in: Regenerate
	* analysis/simulator.in: Add fac
	* configure: Regenerate
	* configure.ac: Add fac with generate-benchmark script
	* src/fac/Makefile.am: Generated with generate-benchmark script
	* src/fac/Makefile.in: Regenerate
	* src/fac/fac.c: Import fac benchmark from WCET

2014-02-26  Pierre Langlois  <pierre.langlois@embecosm.com>
	Add generate-benchmark script.

	* Makefile.am: Add a marker to append sub-directories.
	* configure.ac: Add a marker to append config files.
	* tools/generate-benchmark.sh: New generate-benchmark script.

2014-02-25  Pierre Langlois  <pierre.langlois@embecosm.com>
	Add expint benchmark.

	* Makefile.am: Add src/expint to SUBDIRS
	* Makefile.in: Regenerate
	* analysis/simulator.in: Add expint
	* configure: Regenerate
	* configure.ac: Add src/expint/Makefile to AC_CONFIG_FILES
	* src/expint/Makefile.am: Create Makefile.am from template
	* src/expint/Makefile.in: Regenerate
	* src/expint/expint.c: Import expint benchmark from WCET.

2014-02-25  Pierre Langlois  <pierre.langlois@embecosm.com>
	Fix typos and licence in newlib benchmarks.

	* src/newlib-exp/ef_exp.c: Move original licence to the top of the
	    file. Change e_exp to ef_exp.
	* src/newlib-log/ef_log.c: Move original licence to the top of the
	    file. Fix typo.
	* src/newlib-sqrt/ef_sqrt.c: Move original licence to the top of the
	    file.

2014-02-25  Pierre Langlois  <pierre.langlois@embecosm.com>
	Add mod from newlib.

	* Makefile.am: Add src/newlib-mod to SUBDIRS
	* Makefile.in: Regenerate
	* analysis/simulator.in: Add newlib-mod benchmark
	* configure: Regenerate
	* configure.ac: Add src/newlib-mod/Makefile to AC_CONFIG_FILES
	* src/newlib-pow/Makefile.am: Create Makefile.am from template
	* src/newlib-pow/Makefile.in: Regenerate
	* src/newlib-pow/ef_pow.c: Import ef_fmod from newlib

2014-02-25  Pierre Langlois  <pierre.langlois@embecosm.com>
	Add log from newlib.

	* Makefile.am: Add src/newlib-log to SUBDIRS
	* Makefile.in: Regenerate
	* analysis/simulator.in: Add newlib-log benchmark
	* configure: Regenerate
	* configure.ac: Add src/newlib-log/Makefile to AC_CONFIG_FILES
	* src/newlib-log/Makefile.am: Create Makefile.am from template
	* src/newlib-log/Makefile.in: Regenerate
	* src/newlib-log/ef_log.c: Import ef_log from newlib

2014-02-25  Pierre Langlois  <pierre.langlois@embecosm.com>
	Add exp from newlib.

	* Makefile.am: Add src/newlib-exp to SUBDIRS
	* Makefile.in: Regenerate
	* analysis/simulator.in: Add newlib-exp benchmark
	* configure: Regenerate
	* configure.ac: Add src/newlib-exp/Makefile to AC_CONFIG_FILES
	* src/newlib-exp/Makefile.am: Create Makefile.am from template
	* src/newlib-exp/Makefile.in: Regenerate
	* src/newlib-exp/ef_exp.c: Import ef_exp from newlib

2014-02-25  Pierre Langlois  <pierre.langlois@embecosm.com>
	Use float version of sqrt from newlib.

	* src/newlib-sqrt/Makefile.am: Rename e_sqrt to ef_sqrt
	* src/newlib-sqrt/Makefile.in: Regenerate
	* src/newlib-sqrt/e_sqrt.c: Delete
	* src/newlib-sqrt/ef_sqrt.c: Import ef_sqrt from newlib

2014-02-24  Pierre Langlois  <pierre.langlois@embecosm.com>
	Add sqrt from newlib.

	* Makefile.am: Add src/newlib-sqrt to SUBDIRS
	* Makefile.in: Regenerate
	* analysis/simulator.in: Add newlib-sqrt benchmark
	* configure: Regenerate
	* configure.ac: Add src/newlib-sqrt/Makefile to AC_CONFIG_FILES
	* src/newlib-sqrt/Makefile.am: Create Makefile.am from template
	* src/newlib-sqrt/Makefile.in: Regenerate
	* src/newlib-sqrt/e_sqrt.c: Import sqrt from newlib

2014-02-23  James Pallister  <james.pallister@bristol.ac.uk>
	Added pic32mx250f128b to --with-platform

	* configure.ac: Added pic32mx250f128b to --with-platform

2014-02-23  James Pallister  <james.pallister@bristol.ac.uk>
	Set the clock properly on the sam4lxplained platform

	* src/platformcode/platformcode.c: Set the start OSC0 and set as main
	    clock source

2014-02-23  James Pallister  <james.pallister@bristol.ac.uk>
	Added GPIO pin toggling for sam4lxplained board

	* src/platformcode/platformcode.c: Added GPIO pin toggling for
	    sam4lxplained board

2014-02-23  James Pallister  <james.pallister@bristol.ac.uk>
	Added linker script for sam4lxplained board. Code for some benchmarks
	compiles and runs on the board

	* Makefile.in: Regenerated
	* aclocal.m4: Regenerated
	* analysis/Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Small fixes to mimic changes to other Cortex platforms
	    (saving CFLAGS and LDFLAGS)
	* src/2dfir/Makefile.in: Regenerated
	* src/adpcm/Makefile.in: Regenerated
	* src/blowfish/Makefile.in: Regenerated
	* src/bs/Makefile.in: Regenerated
	* src/bubblesort/Makefile.in: Regenerated
	* src/cnt/Makefile.in: Regenerated
	* src/common.mk.am: Added in linkerscript
	* src/compress/Makefile.in: Regenerated
	* src/crc32/Makefile.in: Regenerated
	* src/cubic/Makefile.in: Regenerated
	* src/dijkstra/Makefile.in: Regenerated
	* src/duff/Makefile.in: Regenerated
	* src/edn/Makefile.in: Regenerated
	* src/fasta/Makefile.in: Regenerated
	* src/fdct/Makefile.in: Regenerated
	* src/fft/Makefile.in: Regenerated
	* src/float_matmult/Makefile.in: Regenerated
	* src/gdb-advance/Makefile.in: Regenerated
	* src/gdb-all-types/Makefile.in: Regenerated
	* src/gdb-anon/Makefile.in: Regenerated
	* src/gdb-arrayidx/Makefile.in: Regenerated
	* src/gdb-async/Makefile.in: Regenerated
	* src/int_matmult/Makefile.in: Regenerated
	* src/lms/Makefile.in: Regenerated
	* src/nbody/Makefile.in: Regenerated
	* src/platformcode/Makefile.in: Regenerated
	* src/platformcode/sam4lxplained.ld: Linkerscript for the
	    sam4lxplained platform
	* src/rijndael/Makefile.in: Regenerated
	* src/sha/Makefile.in: Regenerated
	* src/template/Makefile.in: Regenerated

2014-02-23  James Pallister  <james.pallister@bristol.ac.uk>
	Added initial code for sam4lxplained platform. Platform is Cortex-M4
	based and very similar to other cortex m-series platforms

	* configure.ac: Added code for sam4lxplained platform

2014-02-21  James Pallister  <james.pallister@bristol.ac.uk>
	Regenerate configure and makefile

	* Makefile.in: Regenerated
	* configure: Regenerated

2014-02-21  James Pallister  <james.pallister@bristol.ac.uk>
	Added platform support for stm32vldiscovery

	* Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Added --with-platform option for stm32vldiscovery
	* src/2dfir/Makefile.in: Regenerated
	* src/adpcm/Makefile.in: Regenerated
	* src/blowfish/Makefile.in: Regenerated
	* src/bs/Makefile.in: Regenerated
	* src/bubblesort/Makefile.in: Regenerated
	* src/cnt/Makefile.in: Regenerated
	* src/common.mk.am: Include linker script for stm32vldiscovery
	* src/compress/Makefile.in: Regenerated
	* src/crc32/Makefile.in: Regenerated
	* src/cubic/Makefile.in: Regenerated
	* src/dijkstra/Makefile.in: Regenerated
	* src/duff/Makefile.in: Regenerated
	* src/edn/Makefile.in: Regenerated
	* src/fasta/Makefile.in: Regenerated
	* src/fdct/Makefile.in: Regenerated
	* src/fft/Makefile.in: Regenerated
	* src/float_matmult/Makefile.in: Regenerated
	* src/gdb-advance/Makefile.in: Regenerated
	* src/gdb-all-types/Makefile.in: Regenerated
	* src/gdb-anon/Makefile.in: Regenerated
	* src/gdb-arrayidx/Makefile.in: Regenerated
	* src/gdb-async/Makefile.in: Regenerated
	* src/int_matmult/Makefile.in: Regenerated
	* src/lms/Makefile.in: Regenerated
	* src/nbody/Makefile.in: Regenerated
	* src/platformcode/stm32vl_flash.ld: Store everything in flash, and
	    copy to memory at runtime
	* src/rijndael/Makefile.in: Regenerated
	* src/sha/Makefile.in: Regenerated
	* src/template/Makefile.in: Regenerated

2014-02-20  James Pallister  <james.pallister@bristol.ac.uk>
	Fix for stm32f0discovery platform. CFLAGS and LDFLAGS need to be set
	to include the correct libraries, and specify the processor, however
	the previous commit to move them into AM_CFLAGS meant the configure
	tests failed

	* configure: Regenerated
	* configure.ac: Assign to CFLAGS and LDFLAGS, restoring after tests
	    are performed

2014-02-20  James Pallister  <james.pallister@bristol.ac.uk>
	Made make rules silent by default

	* Makefile.in: Regenerated
	* aclocal.m4: Regenerated
	* analysis/Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Made make rules silent by default
	* src/2dfir/Makefile.in: Regenerated
	* src/adpcm/Makefile.in: Regenerated
	* src/blowfish/Makefile.in: Regenerated
	* src/bs/Makefile.in: Regenerated
	* src/bubblesort/Makefile.in: Regenerated
	* src/cnt/Makefile.in: Regenerated
	* src/compress/Makefile.in: Regenerated
	* src/crc32/Makefile.in: Regenerated
	* src/cubic/Makefile.in: Regenerated
	* src/dijkstra/Makefile.in: Regenerated
	* src/duff/Makefile.in: Regenerated
	* src/edn/Makefile.in: Regenerated
	* src/fasta/Makefile.in: Regenerated
	* src/fdct/Makefile.in: Regenerated
	* src/fft/Makefile.in: Regenerated
	* src/float_matmult/Makefile.in: Regenerated
	* src/gdb-advance/Makefile.in: Regenerated
	* src/gdb-all-types/Makefile.in: Regenerated
	* src/gdb-anon/Makefile.in: Regenerated
	* src/gdb-arrayidx/Makefile.in: Regenerated
	* src/gdb-async/Makefile.in: Regenerated
	* src/int_matmult/Makefile.in: Regenerated
	* src/lms/Makefile.in: Regenerated
	* src/nbody/Makefile.in: Regenerated
	* src/platformcode/Makefile.in: Regenerated
	* src/rijndael/Makefile.in: Regenerated
	* src/sha/Makefile.in: Regenerated
	* src/template/Makefile.in: Regenerated

2014-02-20  James Pallister  <james.pallister@bristol.ac.uk>
	Fixed handling of CFLAGS for specifying platform specific options. Now
	use AM_CFLAGS so we don't override user options.

	* Makefile.in: Regenerated
	* analysis/Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Changed substitutions for CFLAGS to AM_CFLAGS
	* src/2dfir/Makefile.in: Regenerated
	* src/adpcm/Makefile.in: Regenerated
	* src/blowfish/Makefile.in: Regenerated
	* src/bs/Makefile.in: Regenerated
	* src/bubblesort/Makefile.in: Regenerated
	* src/cnt/Makefile.in: Regenerated
	* src/common.mk.am: Append to AM_CFLAGS instead of set
	* src/compress/Makefile.in: Regenerated
	* src/crc32/Makefile.in: Regenerated
	* src/cubic/Makefile.in: Regenerated
	* src/dijkstra/Makefile.in: Regenerated
	* src/duff/Makefile.in: Regenerated
	* src/edn/Makefile.in: Regenerated
	* src/fasta/Makefile.in: Regenerated
	* src/fdct/Makefile.in: Regenerated
	* src/fft/Makefile.in: Regenerated
	* src/float_matmult/Makefile.in: Regenerated
	* src/gdb-advance/Makefile.in: Regenerated
	* src/gdb-all-types/Makefile.in: Regenerated
	* src/gdb-anon/Makefile.in: Regenerated
	* src/gdb-arrayidx/Makefile.in: Regenerated
	* src/gdb-async/Makefile.in: Regenerated
	* src/int_matmult/Makefile.in: Regenerated
	* src/lms/Makefile.in: Regenerated
	* src/nbody/Makefile.in: Regenerated
	* src/platformcode/Makefile.in: Regenerated
	* src/rijndael/Makefile.in: Regenerated
	* src/sha/Makefile.in: Regenerated
	* src/template/Makefile.in: Regenerated

2014-02-19  James Pallister  <james.pallister@bristol.ac.uk>
	Added AVR triggers to platform code

	* src/platformcode/platformcode.c: Toggle port C0 on the AVR chip to
	    start and stop benchmarking

2014-02-14  James Pallister  <james.pallister@bristol.ac.uk>
	Removed jrand function because we can now use the libc rand

	* src/2dfir/Makefile.in: Regenerated
	* src/adpcm/Makefile.in: Regenerated
	* src/blowfish/Makefile.in: Regenerated
	* src/blowfish/bf.c: Removed jrand
	* src/bs/Makefile.in: Regenerated
	* src/bubblesort/Makefile.in: Regenerated
	* src/cnt/Makefile.in: Regenerated
	* src/common.mk.am: Removed jrand from platform sources
	* src/compress/Makefile.in: Regenerated
	* src/crc32/Makefile.in: Regenerated
	* src/crc32/crc_32.c: Removed jrand
	* src/cubic/Makefile.in: Regenerated
	* src/dijkstra/Makefile.in: Regenerated
	* src/duff/Makefile.in: Regenerated
	* src/edn/Makefile.in: Regenerated
	* src/fasta/Makefile.in: Regenerated
	* src/fdct/Makefile.in: Regenerated
	* src/fft/Makefile.in: Regenerated
	* src/float_matmult/Makefile.in: Regenerated
	* src/gdb-advance/Makefile.in: Regenerated
	* src/gdb-all-types/Makefile.in: Regenerated
	* src/gdb-anon/Makefile.in: Regenerated
	* src/gdb-arrayidx/Makefile.in: Regenerated
	* src/gdb-async/Makefile.in: Regenerated
	* src/int_matmult/Makefile.in: Regenerated
	* src/lms/Makefile.in: Regenerated
	* src/nbody/Makefile.in: Regenerated
	* src/platformcode/Makefile.am: Removed jrand from distribution
	* src/platformcode/Makefile.in: Regenerated
	* src/platformcode/jrand.c: Deleted
	* src/platformcode/jrand.h: Deleted
	* src/platformcode/platformcode.h: Removed jrand
	* src/rijndael/Makefile.in: Regenerated
	* src/rijndael/aesxam.c: Removed jrand
	* src/sha/Makefile.in: Regenerated
	* src/sha/sha.c: Removed jrand
	* src/template/Makefile.in: Regenerated

2014-02-14  James Pallister  <james.pallister@bristol.ac.uk>
	Startup file needed to copy initialised data into RAM for
	stm32f0discovery

	* Makefile.in: Regenerated
	* aclocal.m4: Regenerated
	* analysis/Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Changed -lrdimon to -lnosys and removed -e parameters
	* src/2dfir/Makefile.in: Regenerated
	* src/adpcm/Makefile.in: Regenerated
	* src/blowfish/Makefile.in: Regenerated
	* src/bs/Makefile.in: Regenerated
	* src/bubblesort/Makefile.in: Regenerated
	* src/cnt/Makefile.in: Regenerated
	* src/common.mk.am: No longer need startup.S, build startup.c for
	    stm32f0discovery
	* src/compress/Makefile.in: Regenerated
	* src/crc32/Makefile.in: Regenerated
	* src/cubic/Makefile.in: Regenerated
	* src/dijkstra/Makefile.in: Regenerated
	* src/duff/Makefile.in: Regenerated
	* src/edn/Makefile.in: Regenerated
	* src/fasta/Makefile.in: Regenerated
	* src/fdct/Makefile.in: Regenerated
	* src/fft/Makefile.in: Regenerated
	* src/float_matmult/Makefile.in: Regenerated
	* src/gdb-advance/Makefile.in: Regenerated
	* src/gdb-all-types/Makefile.in: Regenerated
	* src/gdb-anon/Makefile.in: Regenerated
	* src/gdb-arrayidx/Makefile.in: Regenerated
	* src/gdb-async/Makefile.in: Regenerated
	* src/int_matmult/Makefile.in: Regenerated
	* src/lms/Makefile.in: Regenerated
	* src/nbody/Makefile.in: Regenerated
	* src/platformcode/Makefile.in: Regenerated
	* src/platformcode/startup.c: Copy initialised data from flash to RAM
	    before main
	* src/platformcode/stm32f05_flash.ld: Specify that data should be in
	    flash, and specify entry point
	* src/rijndael/Makefile.in: Regenerated
	* src/sha/Makefile.in: Regenerated
	* src/template/Makefile.in: Regenerated

2014-02-13  James Pallister  <james.pallister@bristol.ac.uk>
	Fixes and code to allow running on the stm32f0discovery board

	* configure: Regenerated
	* configure.ac: No longer need platform code, and change LDFLAGS to
	    correct entry point
	* src/platformcode/platformcode.c: Added code to toggle PC0 of the
	    stm32f0discovery board

2014-02-12  James Pallister  <james.pallister@bristol.ac.uk>
	Added a --with-platform argument to configure, to allow options to be
	automatically set. This means the generate scripts are not needed.

	* Makefile.in: Regenerated
	* aclocal.m4: Regenerated
	* analysis/Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Added --with-platform argument
	* src/2dfir/Makefile.in: Regenerated
	* src/adpcm/Makefile.in: Regenerated
	* src/blowfish/Makefile.in: Regenerated
	* src/bs/Makefile.in: Regenerated
	* src/bubblesort/Makefile.in: Regenerated
	* src/cnt/Makefile.in: Regenerated
	* src/common.mk.am: Platform dependent linker script selection
	* src/compress/Makefile.in: Regenerated
	* src/crc32/Makefile.in: Regenerated
	* src/cubic/Makefile.in: Regenerated
	* src/dijkstra/Makefile.in: Regenerated
	* src/duff/Makefile.in: Regenerated
	* src/edn/Makefile.in: Regenerated
	* src/fasta/Makefile.in: Regenerated
	* src/fdct/Makefile.in: Regenerated
	* src/fft/Makefile.in: Regenerated
	* src/float_matmult/Makefile.in: Regenerated
	* src/gdb-advance/Makefile.in: Regenerated
	* src/gdb-all-types/Makefile.in: Regenerated
	* src/gdb-anon/Makefile.in: Regenerated
	* src/gdb-arrayidx/Makefile.in: Regenerated
	* src/gdb-async/Makefile.in: Regenerated
	* src/int_matmult/Makefile.in: Regenerated
	* src/lms/Makefile.in: Regenerated
	* src/nbody/Makefile.in: Regenerated
	* src/platformcode/Makefile.in: Regenerated
	* src/rijndael/Makefile.in: Regenerated
	* src/sha/Makefile.in: Regenerated
	* src/template/Makefile.in: Regenerated

2014-02-12  James Pallister  <james.pallister@bristol.ac.uk>
	The conditions for --enable and --with currently give incorrect
	results if --disable is used. Fix this and fix an error in a automake
	conditional

	* configure.ac: The conditions for --enable and --with currently give
	    incorrect results if --disable is used. Fix this and fix an error
	    in a automake conditional

2014-02-12  James Pallister  <james.pallister@bristol.ac.uk>
	Added edn benchmark

	* Makefile.am: Added edn benchmark
	* Makefile.in: Regenerated
	* analysis/simulator.in: Added edn benchmark
	* configure: Regenerated
	* configure.ac: Added edn benchmark
	* src/edn/Makefile.am: Automake file for edn
	* src/edn/Makefile.in: Regenerated
	* src/edn/edn.c: Source for edn

2014-02-05  James Pallister  <james.pallister@bristol.ac.uk>
	Added duff benchmark

	* Makefile.am: Added duff benchmark
	* Makefile.in: Regenerated
	* analysis/simulator.in: Added duff benchmark
	* configure: Regenerated
	* configure.ac: Added duff benchmark
	* src/duff/Makefile.am: Automake file for duff
	* src/duff/Makefile.in: Regenerated
	* src/duff/duff.c: Source for duff

2014-02-05  James Pallister  <james.pallister@bristol.ac.uk>
	Added cnt benchmark

	* Makefile.am: Added cnt benchmark
	* Makefile.in: Regenerated
	* analysis/simulator.in: Added cnt benchmark
	* configure: Regenerated
	* configure.ac: Added cnt benchmark
	* src/cnt/Makefile.am: Automake file for cnt
	* src/cnt/Makefile.in: Regenerated
	* src/cnt/cnt.c: Source for cnt

2014-02-04  James Pallister  <james.pallister@bristol.ac.uk>
	Added bubblesort benchmark

	* Makefile.am: Added bubblesort benchmark
	* Makefile.in: Regenerated
	* analysis/simulator.in: Added bubblesort benchmark
	* configure: Regenerated
	* configure.ac: Added bubblesort benchmark
	* src/bubblesort/Makefile.am: Automake file for bubblesort
	* src/bubblesort/Makefile.in: Regenerated
	* src/bubblesort/bubblesort.c: Source code for bubblesort

2014-02-04  James Pallister  <james.pallister@bristol.ac.uk>
	Added benchmarks to simulation list

	* analysis/simulator.in: Added benchmarks to simulation list

2014-02-04  James Pallister  <james.pallister@bristol.ac.uk>
	Added binary search benchmark

	* Makefile.am: Added binary search benchmark
	* Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Added binary search benchmark
	* src/bs/Makefile.am: Automake file for binary search
	* src/bs/Makefile.in: Regenerated
	* src/bs/bs.c: Source for binary search

2014-02-02  James Pallister  <james.pallister@bristol.ac.uk>
	Added adpcm benchmark

	* Makefile.am: Added adpcm benchmark
	* Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Added adpcm benchmark
	* src/adpcm/Makefile.am: Added adpcm benchmark
	* src/adpcm/Makefile.in: Regenerated
	* src/adpcm/adpcm.c: Added adpcm benchmark

2014-02-02  James Pallister  <james.pallister@bristol.ac.uk>
	Fix for targets which don't simulate

	* configure: Regenerated
	* configure.ac: Fix for targets which don't simulate

2014-02-02  James Pallister  <james.pallister@bristol.ac.uk>
	Changed simulation framework to work with a generic simulation script.
	Individual commands are included based on the compilation target

	* Makefile.in: Regenerated
	* analysis/Makefile.am: Generate new simulate script based on the
	    target
	* analysis/Makefile.in: Regenerated
	* analysis/cmd.arm-none-eabi: Commands to simulate for cortex-m0
	* analysis/cmd.avr-unknown-none: Commands to simulate for AVR
	* analysis/simulate.avr.in: Removed
	* analysis/simulate.cortex-m0.in: Removed
	* analysis/simulator.in: Generic simulation framework
	* configure: Regenerated
	* configure.ac: A single SIMULATE conditional rather than a simulate
	    conditional for each target
	* src/2dfir/Makefile.in: Regenerated
	* src/blowfish/Makefile.in: Regenerated
	* src/compress/Makefile.in: Regenerated
	* src/crc32/Makefile.in: Regenerated
	* src/cubic/Makefile.in: Regenerated
	* src/dijkstra/Makefile.in: Regenerated
	* src/fasta/Makefile.in: Regenerated
	* src/fdct/Makefile.in: Regenerated
	* src/fft/Makefile.in: Regenerated
	* src/float_matmult/Makefile.in: Regenerated
	* src/gdb-advance/Makefile.in: Regenerated
	* src/gdb-all-types/Makefile.in: Regenerated
	* src/gdb-anon/Makefile.in: Regenerated
	* src/gdb-arrayidx/Makefile.in: Regenerated
	* src/gdb-async/Makefile.in: Regenerated
	* src/int_matmult/Makefile.in: Regenerated
	* src/lms/Makefile.in: Regenerated
	* src/nbody/Makefile.in: Regenerated
	* src/platformcode/Makefile.in: Regenerated
	* src/rijndael/Makefile.in: Regenerated
	* src/sha/Makefile.in: Regenerated
	* src/template/Makefile.in: Regenerated

2014-01-13  James Pallister  <james.pallister@bristol.ac.uk>
	Fixes for FFT and nbody - math library required

	* generate.cortex-m0: When using gcc-arm-embedded, -lc -lrdimon is
	    needed in LDFLAGS to allow autotools checks to pass
	* src/fft/Makefile.am: Added -lm to LDFLAGS
	* src/fft/Makefile.in: Regenerated
	* src/nbody/Makefile.am: Added -lm to LDFLAGS
	* src/nbody/Makefile.in: Regenerated

014-01-13  James Pallister  <james.pallister@bristol.ac.uk>
	Benchmarking loop for nbody benchmark and build files

	* Makefile.am: Added nbody benchmark
	* Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Added nbody benchmark
	* src/nbody/Makefile.am: Automake file for nbody
	* src/nbody/Makefile.in: Generated
	* src/nbody/nbody.c: Added benchmarking loop

2014-01-13  James Pallister  <james.pallister@bristol.ac.uk>
	Added automake files for fasta, and benchmarking loop

	* Makefile.am: Added fasta benchmark
	* Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Added fasta benchmark
	* src/fasta/Makefile.am: Automake file for fasta
	* src/fasta/Makefile.in: Regenerated
	* src/fasta/fasta.c: Added benchmarking loop

2014-01-13  James Pallister  <james.pallister@bristol.ac.uk>
	Choose O2 optimisation level

	* src/2dfir/Makefile.in: Regenerated
	* src/blowfish/Makefile.in: Regenerated
	* src/common.mk.am: Choose O2 optimisation level
	* src/compress/Makefile.in: Regenerated
	* src/crc32/Makefile.in: Regenerated
	* src/cubic/Makefile.in: Regenerated
	* src/dijkstra/Makefile.in: Regenerated
	* src/fdct/Makefile.in: Regenerated
	* src/fft/Makefile.in: Regenerated
	* src/float_matmult/Makefile.in: Regenerated
	* src/gdb-advance/Makefile.in: Regenerated
	* src/gdb-all-types/Makefile.in: Regenerated
	* src/gdb-anon/Makefile.in: Regenerated
	* src/gdb-arrayidx/Makefile.in: Regenerated
	* src/gdb-async/Makefile.in: Regenerated
	* src/int_matmult/Makefile.in: Regenerated
	* src/lms/Makefile.in: Regenerated
	* src/rijndael/Makefile.in: Regenerated
	* src/sha/Makefile.in: Regenerated
	* src/template/Makefile.in: Regenerated

2014-01-05  James Pallister  <james.pallister@bristol.ac.uk>
	Fix for simulation scripts when executable name is different from its
	directory name

	* analysis/simulate.avr.in: Added a parameter to find the executable
	    within the given directory
	* analysis/simulate.cortex-m0.in: Added a parameter to find the
	    executable within the given directory

2014-01-05  James Pallister  <james.pallister@bristol.ac.uk>
	Added GDB tests to simulation scripts

	* analysis/simulate.avr.in: Added GDB tests to simulation scripts
	* analysis/simulate.cortex-m0.in: Added GDB tests to simulation
	    scripts

2014-01-05  James Pallister  <james.pallister@bristol.ac.uk>
	Added scale factor into FFT

	* src/fft/fft1.c: Added scale factor into FFT

2014-01-05  James Pallister  <james.pallister@bristol.ac.uk>
	Fix for lms

	* src/lms/lms.c: Added stop trigger for lms

2014-01-05  James Pallister  <james.pallister@bristol.ac.uk>
	Added fft to simulation scripts

	* analysis/simulate.avr.in: Added fft to simulation scripts
	* analysis/simulate.cortex-m0.in: Added fft to simulation scripts

2014-01-05  James Pallister  <james.pallister@bristol.ac.uk>
	Updated FFT benchmark for autotools

	* Makefile.am: Added FFT benchmark
	* Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Added FFT benchmark
	* fft/fft1.c: Moved
	* src/fft/Makefile.am: FFT benchmark Makefile.am
	* src/fft/Makefile.in: Generated
	* src/fft/fft1.c: FFT benchmark source

2014-01-04  James Pallister  <james.pallister@bristol.ac.uk>
	Fix: distribute simulation scripts

	* analysis/Makefile.am: Fix: distribute simulation scripts
	* analysis/Makefile.in: Regenerated

2014-01-04  James Pallister  <james.pallister@bristol.ac.uk>
	Added lms to simulation scripts

	* analysis/simulate.avr.in: Added lms to simulation scripts
	* analysis/simulate.cortex-m0.in: Added lms to simulation scripts

2014-01-04  James Pallister  <james.pallister@bristol.ac.uk>
	Added lms benchmark

	* Makefile.am: Added lms benchmark
	* Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Added lms benchmark
	* src/lms/Makefile.am: Automake file for lms
	* src/lms/Makefile.in: Generated
	* src/lms/lms.c: Lms benchmark

2013-12-28  James Pallister  <james.pallister@bristol.ac.uk>
	Added compress benchmark to analysis

	* Makefile.in: Regenerated
	* analysis/simulate.avr.in: Added compress benchmark
	* analysis/simulate.cortex-m0.in: Added compress benchmark
	* configure: Regenerated
	* src/compress/Makefile.in: Generated

2013-12-27  James Pallister  <james.pallister@bristol.ac.uk>
	Added a change to minimize the number of autoreconfs needed

	* Makefile.in: Regenerated
	* aclocal.m4: Regenerated
	* analysis/Makefile.in: Regenerated
	* configure: Regenerated
	* configure.ac: Disabled maintainer mode
	* src/2dfir/Makefile.in: Regenerated
	* src/blowfish/Makefile.in: Regenerated
	* src/crc32/Makefile.in: Regenerated
	* src/cubic/Makefile.in: Regenerated
	* src/dijkstra/Makefile.in: Regenerated
	* src/fdct/Makefile.in: Regenerated
	* src/float_matmult/Makefile.in: Regenerated
	* src/int_matmult/Makefile.in: Regenerated
	* src/platformcode/Makefile.in: Regenerated
	* src/rijndael/Makefile.in: Regenerated
	* src/sha/Makefile.in: Regenerated
	* src/template/Makefile.in: Regenerated

2013-12-26  James Pallister  <james.pallister@bristol.ac.uk>
	Updated generate files to work out of tree

	* generate.avr: Updated to work out of tree, and accept CFLAGS
	* generate.cortex-m0: Updated to work out of tree, and accept CFLAGS
	* generate.cortex-m3: Updated to work out of tree, and accept CFLAGS
	* generate.fram: Updated to work out of tree, and accept CFLAGS
	* generate.generic: Updated to work out of tree, and accept CFLAGS
	* generate.msp430: Updated to work out of tree, and accept CFLAGS
	* generate.pic32: Updated to work out of tree, and accept CFLAGS

2013-12-26  James Pallister  <james.pallister@bristol.ac.uk>
	Config.sub changes to support pic32

	* README.md: Description of changes in case they need to be recreated
	    for a new config.sub
	* build-aux/config.sub: Added pic32 as a valid cross compilation
	    target

2013-12-17  James Pallister  <james.pallister@bristol.ac.uk>
	Remove unnecessary file

	* analysis/simulate.cortex-m0: Remove unnecessary file

2013-12-16  James Pallister  <james.pallister@bristol.ac.uk>
	Fixed regex for AVR simulator

	* analysis/instruction_stats.py: Fixed regex for AVR simulator

2013-12-16  James Pallister  <james.pallister@bristol.ac.uk>
	Updated autotools to copy analysis scripts

	* analysis/Makefile.am: Updated autotools to copy analysis scripts
	* analysis/Makefile.in: Regenerated
	* analysis/instruction_stats.py: Small arguments fix
	* analysis/simulate.cortex-m0.in: Updated list of benchmarks to run
	    the analysis on

2013-12-16  James Pallister  <james.pallister@bristol.ac.uk>
	Added detection of AVR simulator

	* Makefile.in: Regenerated
	* aclocal.m4: Regenerated
	* analysis/Makefile.am: Create simulate.avr
	* analysis/Makefile.in: Regenerated
	* analysis/simulate.avr.in: Base simulate.avr template
	* configure: Regenerated
	* configure.ac: Added enable flags for enable avr simulator
	* generate.avr: Call from other directories
	* src/2dfir/Makefile.in: Regenerated
	* src/blowfish/Makefile.in: Regenerated
	* src/common.mk.am: Added debug flag, needed by simulator
	* src/crc32/Makefile.in: Regenerated
	* src/cubic/Makefile.in: Regenerated
	* src/dijkstra/Makefile.in: Regenerated
	* src/fdct/Makefile.in: Regenerated
	* src/float_matmult/Makefile.in: Regenerated
	* src/int_matmult/Makefile.in: Regenerated
	* src/platformcode/Makefile.in: Regenerated
	* src/rijndael/Makefile.in: Regenerated
	* src/sha/Makefile.in: Regenerated
	* src/template/Makefile.in: Regenerated

2013-12-15  James Pallister  <james.pallister@bristol.ac.uk>
	Added template files for new benchmarks

	* src/template/Makefile.am: Template files for new benchmarks
	* src/template/template.c: Template files for new benchmarks
	* Makefile.am: Template files for new benchmarks
	* configure.ac: Template files for new benchmarks

2013-12-14  James Pallister  <james.pallister@bristol.ac.uk>
	Added generate scripts for multiple platforms

	* generate.fram: Generate binaries for MSP430FR
	* generate.generic: Generic
	* generate.msp430: Generate binaries for MSP340F
	* generate.pic32: Generate binaries for PIC32MX250

2013-12-05  James Pallister  <james.pallister@bristol.ac.uk>
	Started adding analysis scripts to autotools

	* Makefile.am: Added analysis makefile
	* Makefile.in: Regenerated
	* analysis/Makefile.am: Automatically create simulate.avr
	* analysis/Makefile.in: Generated
	* analysis/simulate.avr: Deleted
	* analysis/simulate.avr.in: Created. Main body of simulate script.
	* configure: Regenerated
	* configure.ac: Added analysis makefile

2013-12-05  James Pallister  <james.pallister@bristol.ac.uk>
	Small trace fixes

	* analysis/all_stats.py: Updated comments
	* analysis/simulate.cortex-m0: Existence check for traces

2013-12-05  James Pallister <james.pallister@bristol.ac.uk>

	* src/common.mk.am: Fix to enable out of tree builds

2013-12-05  James Pallister <james.pallister@bristol.ac.uk>

	* configure: Configure script is needed

2013-12-05  James Pallister <james.pallister@bristol.ac.uk>
	Modified configure.ac to work with old versions of autotools

	* Makefile.in: Regenerated
	* aclocal.m4: Regenerated
	* configure: Regenerated
	* configure.ac: Older versions of autotools do work
	* src/2dfir/Makefile.in: Regenerated
	* src/blowfish/Makefile.in: Regenerated
	* src/crc32/Makefile.in: Regenerated
	* src/cubic/Makefile.in: Regenerated
	* src/dijkstra/Makefile.in: Regenerated
	* src/fdct/Makefile.in: Regenerated
	* src/float_matmult/Makefile.am: Regenerated
	* src/float_matmult/Makefile.in: Regenerated
	* src/int_matmult/Makefile.in: Regenerated
	* src/platformcode/Makefile.in: Regenerated
	* src/rijndael/Makefile.in: Regenerated
	* src/sha/Makefile.in: Regenerated
	* src/template/Makefile.in: Regenerated

2013-12-05  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* Makefile.am: Added platformcode.
	* Makefile.in: Regenerated.
	* configure: Regenerated.
	* configure.ac: Added platformcode.
	* src/2dfir/Makefile.in: Regenerated.
	* src/blowfish/COPYRIGHT: Made non-executable.
	* src/blowfish/LICENSE: Made non-executable.
	* src/blowfish/Makefile.am: Added EXTRA_DIST files.
	* src/blowfish/Makefile.in: Regenerated.
	* src/common.mk.am: Updated
	* src/common.mk.in: Regenerated.
	* src/crc32/Makefile.am: Added EXTRA_DIST files.
	* src/crc32/Makefile.in: Regenerated.
	* src/cubic/LICENSE: Made non-executable.
	* src/cubic/Makefile.am: Added EXTRA_DIST files.
	* src/cubic/Makefile.in: Regenerated.
	* src/dijkstra/LICENSE: Made non-executable.
	* src/dijkstra/Makefile.am: Added EXTRA_DIST files.
	* src/dijkstra/Makefile.in: Regenerated.
	* src/fdct/Makefile.in: Regenerated.
	* src/float_matmult/Makefile.in: Regenerated.
	* src/int_matmult/Makefile.in: Regenerated.
	* src/platformcode/Makefile.am: Created.
	* src/platformcode/Makefile.in: Generated.
	* src/rijndael/LICENSE: Made non-executable.
	* src/rijndael/Makefile.am: Added EXTRA_DIST files.
	* src/rijndael/Makefile.in: Regenerated.
	* src/sha/Makefile.am: Added EXTRA_DIST files.
	* src/sha/Makefile.in: Regenerated.
	* src/template/Makefile.am: New comments about headers and EXTRA_DIST.
	* src/template/Makefile.in: Regenerated.

2013-12-05  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* aclocal.m4: Regenerated.
	* .gitignore: Remove built files, since these should be out of tree.
	* Makefile.in: Regenerated from correspondng Makefile.am.
	* src/2dfir/Makefile.in: Likewise.
	* src/blowfish/Makefile.in: Likewise.
	* src/common.mk.in: Likewise.
	* src/crc32/Makefile.in: Likewise.
	* src/cubic/Makefile.in: Likewise.
	* src/dijkstra/Makefile.in: Likewise.
	* src/fdct/Makefile.in: Likewise.
	* src/float_matmult/Makefile.in: Likewise.
	* src/int_matmult/Makefile.in: Likewise.
	* src/rijndael/Makefile.in: Likewise.
	* src/sha/Makefile.in: Likewise.
	* src/template/Makefile.in: Likewise.

2013-12-05  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* src/template/Makefile.am: Minor layout changes.
	* src/template/template.c: Change to GNU style layout, added license
	declaration, C-style comments, added emacs style comment.

2013-12-05  James Pallister  <james.pallister@bristol.ac.uk>

	* src/common.mk.am: Fix to enable out of tree builds

2013-12-05  James Pallister  <james.pallister@bristol.ac.uk>

	* configure: Configure script is needed

2013-12-05  James Pallister  <james.pallister@bristol.ac.uk>

	* .gitignore: Unignore autotools files (changing school of thought)
	* aclocal.m4: Added, generated by autotools
	* build-aux/config.guess: Added, generated by autotools
	* build-aux/config.sub: Added, generated by autotools
	* build-aux/depcomp: Added, generated by autotools
	* build-aux/install-sh: Added, generated by autotools
	* build-aux/ltmain.sh: Added, generated by autotools
	* build-aux/missing: Added, generated by autotools
	* m4/libtool.m4: Added, generated by autotools
	* m4/ltoptions.m4: Added, generated by autotools
	* m4/ltsugar.m4: Added, generated by autotools
	* m4/ltversion.m4: Added, generated by autotools
	* m4/lt~obsolete.m4: Added, generated by autotools

2013-10-11  James Pallister <james.pallister@bristol.ac.uk>

	* analysis/all_stats.py: Created, compute stats for all benchmarks
	and display nicely

2013-10-11  James Pallister <james.pallister@bristol.ac.uk>

	* analysis/instruction_stats.py: Added instructions for cortex-m0

2013-10-11  James Pallister <james.pallister@bristol.ac.uk>

	* analysis/simulate.cortex-m0: Created, simulate on cortex-m0
	* analysis/instruction_stats.py: xz compressed traces can be analysed

2013-10-10  James Pallister <james.pallister@bristol.ac.uk>

	* analysis/instruction_stats.py: Fix for code not executing when 'quiet'

2013-10-10  James Pallister <james.pallister@bristol.ac.uk>

	* analysis/instruction_stats.py: Refactored code

2013-10-10  James Pallister <james.pallister@bristol.ac.uk>
	* analysis/simulate.avr: Modified to use simulavr
	* analysis/instruction_stats.py: Modified to use simulavr

2013-10-10  James Pallister  <james.pallister@bristol.ac.uk>

	* generate.cortex-m3: Small compilation fixes

2013-10-10  James Pallister  <james.pallister@bristol.ac.uk>

	* configure.ac: Conditionally compile startup code
	* generate.cortex-m3: Likewise
	* src/2dfir/Makefile.am: Likewise
	* src/blowfish/Makefile.am: Likewise
	* src/common.mk.am: Likewise
	* src/crc32/Makefile.am: Likewise
	* src/cubic/Makefile.am: Likewise
	* src/dijkstra/Makefile.am: Likewise
	* src/fdct/Makefile.am: Likewise
	* src/float_matmult/Makefile.am: Likewise
	* src/int_matmult/Makefile.am: Likewise
	* src/rijndael/Makefile.am: Likewise
	* src/sha/Makefile.am: Likewise

	* generate.cortex-m0: Created, generate for ARM Cortex-M0
	* src/platformcode/startup.S: Created, start up code for ARM
	* src/platformcode/stm32f05_flash.ld: Created, linker script for M0

2013-10-08  James Pallister  <james.pallister@bristol.ac.uk>

	* src/float_matmult/matmult.c: Execution fix for AVR

2013-10-08  James Pallister  <james.pallister@bristol.ac.uk>

	* analysis/simulate.avr: Hack to terminate the simulator when in while(1)
	* analysis/instruction_stats.py: Added quiet flag

2013-10-08  James Pallister <james.pallister@bristol.ac.uk>

	* analysis/simulate.avr: Created
	* analysis/instruction_stats.py

2013-10-08  James Pallister <james.pallister@bristol.ac.uk>

	Added AVR compilation script

	* src/rijndael/aesxam.c: Fix to compile on AVR
	* generate.avr: Created.

2013-10-06  James Pallister  <james.pallister@bristol.ac.uk>

	* configure.ac: Added options to compile in extra platform code
	* generate.cortex-m3: Enable platform code
	* src/2dfir/Makefile.am: Conditionally compile in platform code
	* src/blowfish/Makefile.am: Likewise
	* src/crc32/Makefile.am: Likewise
	* src/cubic/Makefile.am: Likewise
	* src/dijkstra/Makefile.am: Likewise
	* src/fdct/Makefile.am: Likewise
	* src/float_matmult/Makefile.am: Likewise
	* src/int_matmult/Makefile.am: Likewise
	* src/rijndael/Makefile.am: Likewise
	* src/sha/Makefile.am: Likewise
	* src/platformcode/platformcode.h: Conditionally disable jrand

2013-10-03  James Pallister  <james.pallister@bristol.ac.uk>

	* src/cubic/Makefile.am: Added dependency on libm
	* src/rijndael/aesxam.c: Removed code which conflicted when defining ARM

2013-10-03  James Pallister  <james.pallister@bristol.ac.uk>

	* configure.ac: Fixed host_alias being set. Use $host_alias instead
	of $host for cross compilation checks
	* generate.cortex-m3: Added shebang

2013-10-02  James Pallister  <james.pallister@bristol.ac.uk>

	* Makefile.am: Added the rest of the benchmarks
	* configure.ac: Added the rest of the benchmarks
	* src/blowfish/Makefile.am: Created
	* src/crc32/Makefile.am: Created
	* src/cubic/Makefile.am: Created
	* src/dijkstra/Makefile.am: Created
	* src/fdct/Makefile.am: Created
	* src/float_matmult/Makefile.am: Created
	* src/int_matmult/Makefile.am: Created
	* src/rijndael/Makefile.am: Created
	* src/sha/Makefile.am: Created
	* src/blowfish/Makefile: Removed - generated by automake
	* src/crc32/Makefile: Removed - generated by automake
	* src/cubic/Makefile: Removed - generated by automake
	* src/dijkstra/Makefile: Removed - generated by automake
	* src/fdct/Makefile: Removed - generated by automake
	* src/float_matmult/Makefile: Removed - generated by automake
	* src/int_matmult/Makefile: Removed - generated by automake
	* src/rijndael/Makefile: Removed - generated by automake
	* src/sha/Makefile: Removed - generated by automake


2013-10-01  James Pallister  <james.pallister@bristol.ac.uk>

	* .gitignore: Updated to ignore autotools byproducts
	* AUTHORS: Created
	* configure.ac: Created
	* generate.cortex-m3: Created
	* INSTALL: Created
	* Makefile.am: Created
	* NEWS: Created
	* README: Created to point at README.md
	* src/2dfir/Makefile.am: Created
	* src/common.mk.am: Created

2013-09-30  James Pallister  <james.pallister@bristol.ac.uk>

	* README.md: Reflect the preprint publication on arXiv and minor
	corrections.

2013-07-31  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* README.md: Note that release-0.1 is the code used in
	"Identifying Compiler Options to Minimise Energy Consumption for
	Embedded Platforms" by James Pallister, Simon Hollis and Jeremy
	Bennett.

2013-07-31  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* run-all.sh: Correct various errors in echoing to results file.

2013-07-31  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* run-all.sh: Use run-time segment size to decide whether to run.

2013-07-30  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* README.md: Updated with information on running the tests.

2013-07-30  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* run-all.sh: Created.
	* .gitignore: Add results directory.

2013-07-30  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* platformcode.c: Created for common code.
	* platformcode.c: Common header.

2013-07-30  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* blowfish/bf.c: Change mode to non-executable.
	* blowfish/bf_cfb64.c: Likewise.
	* blowfish/bf_enc.c: Likewise.
	* blowfish/bf_locl.h: Likewise.
	* blowfish/bf_pi.h: Likewise.
	* blowfish/bf_skey.c: Likewise.
	* blowfish/blowfish.h: Likewise.
	* cubic/basicmath_small.c: Likewise.
	* cubic/cubic.c: Likewise.
	* cubic/pi.h: Likewise.
	* cubic/round.h: Likewise.
	* cubic/snipmath.h: Likewise.
	* cubic/sniptype.h: Likewise.
	* dijkstra/dijkstra_small.c: Likewise.
	* rijndael/aes.c: Likewise.
	* rijndael/aes.h: Likewise.
	* rijndael/aestab.h: Likewise.
	* rijndael/aesxam.c: Likewise.
	* sha/sha.c: Likewise.
	* sha/sha.h: Likewise.
	* sha/sha_driver.c: Likewise.

2013-07-30  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* blowfish/bf.c (main): Use rand () rather than jrand ().
	* rijndael/aesxam (encfile): Use rand () rather than jrand () and
	use int as type of flen.
	(decfile): Use rand () rather than jrand ().
	* sha/sha.c: Use rand () rather than jrand ().

2013-07-30  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	* .gitignore: Created.
	* ChangeLog: Created.

2013-07-30  Jeremy Bennett  <jeremy.bennett@embecosm.com>

	Inherited baseline material

	* 2dfir/fir2dim.c: Created.
	* blowfish/bf.c: Likewise.
	* blowfish/bf_cfb64.c: Likewise.
	* blowfish/bf_enc.c: Likewise.
	* blowfish/bf_locl.h: Likewise.
	* blowfish/bf_locl.org: Likewise.
	* blowfish/bf_pi.h: Likewise.
	* blowfish/bf_skey.c: Likewise.
	* blowfish/blowfish.h: Likewise.
	* blowfish/COPYRIGHT: Likewise.
	* blowfish/LICENSE: Likewise.
	* crc32/crc_32.c: Likewise.
	* crc32/crc.h: Likewise.
	* crc32/LICENSE: Likewise.
	* crc32/Makefile: Likewise.
	* cubic/basicmath_small.c: Likewise.
	* cubic/cubic.c: Likewise.
	* cubic/LICENSE: Likewise.
	* cubic/pi.h: Likewise.
	* cubic/round.h: Likewise.
	* cubic/snipmath.h: Likewise.
	* cubic/sniptype.h: Likewise.
	* dijkstra/dijkstra_small.c: Likewise.
	* dijkstra/LICENSE: Likewise.
	* fdct/fdct.c: Likewise.
	* float_matmult/matmult.c: Likewise.
	* int_matmult/matmult.c: Likewise.
	* LICENSE.GPL: Likewise.
	* README.md: Likewise.
	* rijndael/aes.c: Likewise.
	* rijndael/aes.h: Likewise.
	* rijndael/aestab.h: Likewise.
	* rijndael/aesxam.c: Likewise.
	* rijndael/LICENSE: Likewise.
	* sha/sha.c: Likewise.
	* sha/sha_driver.c: Likewise.
	* sha/sha.h: Likewise.
